/*!
* Eclipse Scout
* https://eclipse.org/scout/
*
* Copyright (c) BSI Business Systems Integration AG. All rights reserved.
* Released under the Eclipse Public License v1.0
* http://www.eclipse.org/legal/epl-v10.html
*/
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
body {
  background-color: none;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 13px;
  height: 100%;
  width: 100%;
  margin: 0;
  overflow: hidden;
  cursor: default;
  color: #333333;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -moz-user-select: -moz-none;
  /* Prevent mobile safari from adjusting text, due to our dynamic layouting it will be always wrong */
  -webkit-text-size-adjust: none;
  /* Disable highlight color. May be enabled for specific elements if required */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body.ios {
  /* Body can be moved on ios even if it isn't scrollable. Prevent it by using position: fixed.
    Drawback: it seems something invisible happens nevertheless, actions like a button click won't be executed if the user tried to scroll right before.
    He has to wait until the invisible scrolling has finished before he can try to click the button.
    Another drawback: there is a flickering effect of labels on certain screens (e.g. beamer) with chrome when a popup (e.g. smart field popup) is shown and position is set to fixed.
    Hence it is important to only activate it on ios. */
  position: fixed;
}
/* -moz variant is required, see https://bugzilla.mozilla.org/show_bug.cgi?id=509958 */
::-moz-selection {
  background: #014786;
  color: #fff;
}
::selection {
  background: #014786;
  color: #fff;
}
::-webkit-input-placeholder {
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
}
:-moz-placeholder {
  /* older versions of firefox */
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
}
::-moz-placeholder {
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
}
:-ms-input-placeholder {
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
}
/* Hide IE decorations for text input fields: */
/* - Clear button ("X"): https://msdn.microsoft.com/en-us/library/windows/apps/hh465740.aspx */
/* - Password reveal button: https://msdn.microsoft.com/en-us/library/windows/apps/hh465773.aspx */
/* Note: Set width/height to 0 instead of "display: none", because of http://stackoverflow.com/a/17986002 */
::-ms-clear {
  width: 0;
  height: 0;
}
::-ms-reveal {
  width: 0;
  height: 0;
}
.disabled::-moz-selection {
  background: #666666;
  color: #EFEFEF;
}
.disabled::selection {
  background: #666666;
  color: #EFEFEF;
}
.disabled::-webkit-input-placeholder {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
  /* Fill color is inherited, make sure it is ignored and the current color is used instead. Needed for iOS, see usage of -webkit-text-fill-color below*/
  -webkit-text-fill-color: currentcolor;
}
.disabled:-moz-placeholder {
  /* older versions of firefox */
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.disabled::-moz-placeholder {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.disabled:-ms-input-placeholder {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
/* Add this class to temporary remove an element from the document flow. */
/* !important is used to override any specific "display" values (because this */
/* call would in most cases be less specific than the element's rules). */
.hidden {
  display: none !important;
  /* NOSONAR (!important is okay here) */
}
/* Add this class to temporary hide (but not remove from flow) an element. Similar to "hidden". */
.invisible {
  visibility: hidden !important;
  /* NOSONAR (!important is okay here) */
}
*,
*::before,
*::after {
  /* NOSONAR (universal selector is okay here) */
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
/* Workaround for firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=648624 */
/* use -moz-none to allow child element to set -moz-user-select: text */
/* See also: focusUtil.js, isSelectableText() */
.table-cell,
.table-header-item,
.tree-node,
.table-footer,
.table-control,
.table-info-item,
.table-header-menu-group-text {
  -moz-user-select: -moz-none;
}
input,
textarea,
button {
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 13px;
}
input,
textarea,
.input-field {
  background-color: #fff;
  color: #333333;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
}
input.disabled,
textarea.disabled,
.input-field.disabled {
  background-color: #F6F6F6;
  color: #666666;
}
input:focus,
textarea:focus,
.input-field:focus,
input.focused,
textarea.focused,
.input-field.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
input.has-error,
textarea.has-error,
.input-field.has-error {
  border-color: #FF6060;
  background-color: #FEE0E0;
}
input.has-error:focus,
textarea.has-error:focus,
.input-field.has-error:focus,
input.has-error.focused,
textarea.has-error.focused,
.input-field.has-error.focused {
  box-shadow: 0 0 5px #FF6060;
}
input.read-only,
textarea.read-only,
.input-field.read-only {
  background-color: transparent;
  border-color: transparent;
  border-bottom: dashed 1px #CCCCCC;
  color: #333333;
}
textarea.read-only {
  border: 1px dashed #CCCCCC;
}
input[type="text"].alternative,
input[type="password"].alternative {
  /* Add 1px padding to prevent the text from moving a little when field is focused due to the 2px focus border */
  padding-bottom: 1px;
  /* Compensate padding-bottom to align input text with label on the left */
  /* It won't be perfect (especially when zoomed) but should be good enough */
  padding-top: 1px;
}
input.alternative,
.input-field.alternative {
  background-color: transparent;
  border-color: transparent;
  border-bottom-color: #CCCCCC;
  border-radius: 0;
  border-left-width: 0;
  border-right-width: 0;
  padding-left: 0;
  padding-right: 0;
}
input.alternative.disabled,
.input-field.alternative.disabled {
  color: #999999;
  border-bottom-style: dashed;
  border-bottom-color: #CCCCCC;
}
input.alternative:focus,
.input-field.alternative:focus,
input.alternative.focused,
.input-field.alternative.focused {
  color: #014786;
  border-bottom-color: #014786;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
input.alternative.has-error,
.input-field.alternative.has-error {
  color: #FF6060;
  border-bottom-color: #FF6060;
}
input.alternative.has-error:focus,
.input-field.alternative.has-error:focus,
input.alternative.has-error.focused,
.input-field.alternative.has-error.focused {
  border-bottom-color: #FF6060;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
input.alternative.read-only,
.input-field.alternative.read-only {
  color: #333333;
}
input {
  padding: 0 10px;
  /* remove platform specific styling, mainly used to remove shadow on iOS Safari */
  /* text inputs on Safari have 2px top and bottom margin -> remove*/
  margin: 0;
}
input:not([type=checkbox]):not([type=radio]) {
  -webkit-appearance: none;
  -moz-appearance: none;
}
input.disabled,
textarea.disabled {
  /* Only setting the color has no effect for input elements on iOS Safari -> set fill color, too */
  /* It is activated for input elements only since the rule would be inherited by sub elements and therefore would change theirs colors as well */
  -webkit-text-fill-color: currentcolor;
  opacity: 1;
}
textarea.alternative {
  background-color: transparent;
}
textarea.alternative.disabled:not(.read-only) {
  background-color: transparent;
  border: 1px dashed #CCCCCC;
  color: #999999;
}
input[type="text"],
textarea {
  /* Explicitly set 'user-select' to something other than 'none', otherwise the focus manager */
  /* might prevent text selection (scout.focusUtils.isSelectableText()). Some browsers already */
  /* provide such a rule in the user style sheet, but some do not (e.g. Chrome 62). */
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
textarea {
  /* these two properties are required for FF, otherwise the editable textarea is 2px too large, */
  /* and the DOM inspector does not include these 2 pixels. */
  margin: 0 auto;
  padding: 7px 10px;
  resize: none;
  /* Override default overflow value 'scroll' in IE */
  overflow: auto;
  /* IE/Edge: show scrollbars on textarea if the content is too big to fit */
  /* overflow:auto alone is not sufficient because -ms-overflow-style could be set on a parent element and textarea inherits this property */
  -ms-overflow-style: auto;
  /* remove platform specific styling, mainly used to remove shadow on ios safari */
  -webkit-appearance: none;
  -moz-appearance: none;
}
textarea.alternative {
  border-radius: 0;
}
.input-field {
  padding: 7px 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
button {
  padding: 2px 7px;
  margin: 0;
  /* reset user agent style, e.g. on safari */
}
.button {
  position: relative;
  color: #014786;
  background-color: #fff;
  border: 1px solid #014786;
  border-radius: 3px;
  cursor: pointer;
  white-space: nowrap;
  padding: 2px 7px;
  /* Note: no vertical align helper here! this is very dependent on the content of the button */
  /* (only text or other DOM nodes), therefore it has to be added manually when desired. */
}
.button > .button-label,
.button > .submenu-icon,
.button > .icon {
  vertical-align: middle;
  display: inline-block;
}
.button > .button-label {
  margin-top: 1px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.button > .icon {
  /* Padding only relevant for icons larger than the container */
  padding-top: 2px;
  padding-bottom: 2px;
}
.button > .icon.with-label {
  margin-right: 8px;
}
.button > .icon.loading,
.button > .icon.broken {
  display: none !important;
  /* NOSONAR (!important is okay here) */
}
.button > .icon.image-icon {
  max-height: 100%;
}
.button > .font-icon {
  color: #014786;
  font-size: 16px;
}
.button > .submenu-icon {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  padding-left: 8px;
}
.button > .button-label,
.button > .icon,
.button > .submenu-icon {
  opacity: 1;
  transition: opacity 250ms;
}
.button:hover {
  color: #014786;
}
.button:focus {
  outline: none;
  overflow: visible;
  /* without this, IE would cut off the focus glow */
}
.button:focus::before {
  position: absolute;
  content: '';
  left: -3px;
  top: -3px;
  width: calc(100% +  6px);
  height: calc(100% +  6px);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-radius: 3px;
}
.button:active,
.button.active {
  color: #014786;
  background-color: #EFEFEF;
}
.button:active > .font-icon,
.button.active > .font-icon {
  color: #014786;
}
.button.default:not(.disabled) {
  background-color: #2B73B3;
  /* border is necessary to align the text with text from buttons with a real border */
  border-color: #2B73B3;
  color: #fff;
}
.button.default:not(.disabled):focus {
  color: #fff;
}
.button.default:not(.disabled):hover {
  background-color: #2B73B3;
}
.button.default:not(.disabled):active,
.button.default:not(.disabled).active {
  background-color: #014786;
  border-color: #014786;
}
.button.default:not(.disabled) > .font-icon {
  font-weight: normal;
  color: #fff;
}
.button:disabled {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  color: #999999;
  cursor: default;
}
.button:disabled > .font-icon {
  color: #CCCCCC;
}
.button.loading > .button-label,
.button.loading > .icon,
.button.loading > .submenu-icon {
  opacity: 0;
  transition: opacity 250ms;
}
.button.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -10px;
  margin-left: -10px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.button.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 20px;
  height: 20px;
}
/* cursor handling */
/* The following classes are added dynamically while dragging. !important is necessary to override */
/* any cursor an underlying component defines while moving the mouse. */
.col-resize,
.col-resize * {
  /* NOSONAR (universal selector is okay here) */
  cursor: col-resize !important;
  /* NOSONAR (!important is okay here) */
}
.row-resize,
.row-resize * {
  /* NOSONAR (universal selector is okay here) */
  cursor: row-resize !important;
  /* NOSONAR (!important is okay here) */
}
/* Used to temporarily disable pointer events on iframes while dragging elements */
.dragging-in-progress {
  pointer-events: none;
}
/* remove the dotted border in firefox */
button::-moz-focus-inner {
  border: 0;
}
.drag-handle {
  content: '';
  width: 100%;
  height: 20px;
  position: absolute;
  top: 0;
  left: 0;
  margin-top: -5px;
  cursor: move;
  z-index: 10;
}
.closer {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 17px;
  cursor: pointer;
  color: #999999;
}
.closer::before {
  content: '\E045';
}
.closer:active,
.closer.active {
  color: #014786;
}
.closer:hover {
  color: #014786;
}
.save-needer {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 12px;
  color: #999999;
}
.save-needer::before {
  content: '\E04F';
}
/* Used to display errors from server when desktop is not available */
.fatal-error {
  margin: 10px;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.application-loading-root {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  border: 0;
  background-color: #fff;
  pointer-events: none;
}
.application-loading-root-fadeout {
  -webkit-animation: fade-out 250ms linear 1;
  -moz-animation: fade-out 250ms linear 1;
  -o-animation: fade-out 250ms linear 1;
  animation: fade-out 250ms linear 1;
}
.application-loading01 {
  height: 80px;
  width: 80px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.application-loading01::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  box-shadow: 0 0 6px 3px rgba(21, 97, 167, 0.9);
  -webkit-animation: pulsate 2s ease-out infinite;
  -moz-animation: pulsate 2s ease-out infinite;
  -o-animation: pulsate 2s ease-out infinite;
  animation: pulsate 2s ease-out infinite;
}
.application-loading02 {
  height: 120px;
  width: 120px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.application-loading02::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  box-shadow: inset 0 0 4px 2px #24B499;
  -webkit-animation: pulsate 2.84s ease-out infinite;
  -moz-animation: pulsate 2.84s ease-out infinite;
  -o-animation: pulsate 2.84s ease-out infinite;
  animation: pulsate 2.84s ease-out infinite;
}
a,
.link,
.app-link {
  color: #014786;
  text-decoration: underline;
  cursor: pointer;
}
a:hover,
.link:hover,
.app-link:hover {
  color: #0162b9;
}
a:active,
.link:active,
.app-link:active,
a.active,
.link.active,
.app-link.active {
  color: #2F3C45;
}
a:focus,
.link:focus,
.app-link:focus {
  outline-color: #014786;
}
.font-icon {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.white-space-nowrap {
  white-space: nowrap;
}
.startup-error {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  margin: 100px 50px;
  padding: 20px;
  border: 1px solid #FF6060;
  background-color: #FEE0E0;
}
.startup-error-title {
  font-weight: bold;
  padding-bottom: 10px;
}
/* --- z-index --- */
/* Rule: All child elements of .scout get the same z-index 0 assigned. This spawns a new stacking context for each */
/* of these elements (iff they are "positioned"). To bring a new element to the top, add it to the end of the list. */
/* https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context */
.scout > .desktop-navigation,
.scout > .desktop-header,
.scout > .desktop-bench,
.scout > .desktop-bench,
.scout > .splitter,
.scout > .glasspane,
.scout > .busyindicator,
.scout > .dialog,
.scout > .form,
.scout > .messagebox,
.scout > .file-chooser,
.scout > .tooltip,
.scout > .popup,
.scout > .touch-popup,
.scout > .form-menu-popup,
.scout > .smart-field-popup,
.scout > .proposal-field-popup,
.scout > .date-picker-popup,
.scout > .time-picker-popup,
.scout > .table-header-menu,
.scout > .tag-chooser-popup,
.scout > .tag-overflow-popup,
.scout > .notifications {
  z-index: 0;
}
noscript {
  display: block;
}
noscript > .wrapper > .box-content > h1 {
  font-family: Arial, sans-serif;
  font-weight: bold;
  font-size: 13px;
}
/* Internet explorer applies the -ms-user-select setting: none (inherited from body) also to iframe contents.
 * Other browsers do not, websites within an iframe should decide on their own if they are selectable (or not).
 * Reset to default.
 */
iframe {
  -ms-user-select: element;
}
.error-popup-correlation-id {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 11px;
  color: #999999;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.accordion {
  /* Necessary if field is not scrollable to prevent overlaps */
  overflow: hidden;
}
.accordion.scrollable {
  padding-right: 15px;
}
.accordion > .group:not(.first):not(.collapse-bottom) > .group-header {
  border-top: 1px solid #CCCCCC;
}
.accordion > .group > .group-body {
  margin-bottom: 10px;
}
.accordion > .group,
.accordion > .scrollbar {
  opacity: 1;
  transition: opacity 250ms;
}
.accordion.loading > .group,
.accordion.loading > .scrollbar {
  opacity: 0;
}
.accordion.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.accordion.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.action {
  cursor: pointer;
}
.action:hover {
  color: #014786;
}
.action:active {
  color: #014786;
}
.action.disabled {
  color: #999999;
  cursor: default;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/**
 * Used for static pages like login, logout, unsupported-browser and noscript section.
 * Note: This box must not depend on javascript because it is used for the noscript section as well.
 */
.box {
  display: table;
  position: absolute;
  height: 75%;
  width: 100%;
  margin: 15px 0;
}
.box > .wrapper {
  display: table-cell;
  vertical-align: middle;
}
.box-content {
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #FEFEFE;
  max-width: 420px;
  margin: 0 auto;
  padding: 40px 70px;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.box-content > .header {
  text-align: center;
}
.box-content > .header > .logo {
  margin-top: 5px;
  margin-bottom: 40px;
}
.box-content.small > .header > .logo {
  max-width: 50%;
}
.box-content > .button-bar {
  padding-top: 32px;
  text-align: center;
}
.box-content > .button-bar > .button {
  padding: 7px 7px;
}
.box-content.centered {
  text-align: center;
}
@media (max-width: 460px) {
  .box-content {
    padding: 20px;
    margin-left: 10px;
    margin-right: 10px;
  }
  .box-content > .header > .logo {
    margin-bottom: 20px;
  }
}
@media (max-height: 400px) {
  .box-content {
    padding-top: 20px;
    padding-bottom: 20px;
  }
  .box-content > .header > .logo {
    margin-bottom: 20px;
  }
}
@media (max-height: 700px) {
  .box {
    height: calc(100% -  15px * 2);
  }
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.box-buttons.empty {
  border-bottom: 1px solid #CCCCCC;
}
.box-buttons > .box-button {
  position: relative;
  padding: 12px;
  background-color: #EFEFEF;
  border: 1px solid #CCCCCC;
  cursor: pointer;
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: inline-block;
  vertical-align: bottom;
}
.box-buttons > .box-button.disabled {
  cursor: default;
  color: #999999;
}
.box-buttons > .box-button:not(.disabled):active {
  background-color: #DDDDDD;
}
.box-buttons > .box-button:first-child {
  border-bottom-left-radius: 3px;
}
.box-buttons > .box-button:last-child {
  border-bottom-right-radius: 3px;
}
.box-buttons > .box-button:first-child ~ .box-button {
  border-left-width: 0;
}
.box-buttons > .box-button:focus {
  outline: none;
}
.box-buttons > .box-button:focus::before {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  position: absolute;
  content: '';
  left: 2px;
  top: 2px;
  width: calc(100% +  -4px);
  height: calc(100% +  -4px);
  z-index: 1;
}
.box-buttons > .box-button:first-child:focus::before {
  border-bottom-left-radius: 3px;
}
.box-buttons > .box-button:last-child:focus::before {
  border-bottom-right-radius: 3px;
}
.severity-error .box-buttons > .box-button:focus::before {
  border-color: #FF6060;
  box-shadow: 0 0 5px #FF6060;
}
/*
 * Copyright (c) 2010-2019 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.calendar {
  white-space: nowrap;
  padding-left: 0;
}
.calendar-scrollable-components {
  height: 100%;
}
.calendar-week-scrollable {
  overflow: visible;
}
.calendar-scrollable-components-week {
  top: calc(23px + 5px);
  height: calc(15% - ( 23px  + 5px));
}
.calendar-header {
  position: relative;
  display: block;
  white-space: nowrap;
  padding: 8px 20px 12px 0;
}
.calendar-header > .busyindicator-label {
  display: table-cell;
  vertical-align: middle;
  text-indent: 0;
}
.calendar-header-row {
  display: table;
  width: 100%;
}
.calendar-header-row.last {
  padding-top: 10px;
}
.calendar-range {
  display: table-cell;
  vertical-align: middle;
  padding-left: 8px;
  width: 1%;
}
.calendar-previous,
.calendar-today,
.calendar-next {
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  text-align: center;
  height: 30px;
  color: #333333;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  margin-right: 5px;
  line-height: 29px;
}
.calendar-previous:hover,
.calendar-today:hover,
.calendar-next:hover {
  color: #014786;
}
.calendar-today {
  width: 65px;
}
.calendar-title {
  display: table-cell;
  vertical-align: middle;
  color: #333333;
}
.calendar-header-row.last > .calendar-title {
  text-align: center;
}
.calendar-select {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  font-size: 16px;
  margin-left: 15px;
  margin-right: 15px;
}
.calendar-previous:hover::before,
.calendar-next:hover::before {
  color: #014786;
}
.calendar-previous::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 20px;
  width: 29px;
  content: '\E012';
  color: #333333;
  text-align: center;
}
.calendar-next::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 20px;
  width: 29px;
  content: '\E013';
  color: #333333;
  text-align: center;
}
.calendar-commands {
  display: table-cell;
  vertical-align: middle;
  text-align: right;
  white-space: nowrap;
}
.calendar-mode,
.calendar-toggle-year,
.calendar-toggle-list {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  height: 30px;
  line-height: 29px;
  cursor: pointer;
}
.calendar-mode {
  width: 65px;
  border-top: 1px solid #CCCCCC;
  border-bottom: 1px solid #CCCCCC;
  border-left: 1px solid #CCCCCC;
}
.calendar-mode.first {
  border-left: 1px solid #CCCCCC;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}
.calendar-mode.last {
  border-right: 1px solid #CCCCCC;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  margin-right: 5px;
}
.calendar-mode:hover {
  color: #014786;
}
.calendar-mode.selected {
  color: #2F3C45;
  background-color: #E9F0F6;
}
.calendar-mode-menu {
  padding: 5px 12px;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
}
.calendar-toggle-year,
.calendar-toggle-list {
  margin-left: 5px;
}
.calendar-toggle-year:hover::before,
.calendar-toggle-list:hover::before {
  color: #014786;
}
.calendar-toggle-year::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 18px;
  width: 29px;
  content: '\E029';
  color: #333333;
  text-align: center;
}
.calendar-toggle-list::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 18px;
  width: 29px;
  content: '\E01C';
  color: #333333;
  text-align: center;
}
.calendar-component {
  display: flex;
  flex-direction: row;
  position: relative;
  float: left;
  line-height: 24px;
  height: 24px;
  min-height: 20px;
  width: calc(100% -  32px);
  text-align: left;
  color: #000;
  /* Default colors used when component has no specific class */
  background-color: #E9F0F6;
  /* Colors for type Appointment */
  /* Colors for type Task */
}
.calendar-component:not(.component-task):not(.component-month) {
  border-bottom: 2px solid #FEFEFE;
}
.calendar-component > .content {
  overflow: hidden;
  text-overflow: ellipsis;
}
.calendar-component > .calendar-component-leftcolorborder {
  flex-shrink: 0;
  top: 0;
  left: 0;
  width: 4px;
  margin-right: 4px;
  background-color: #C1DEF9;
  /* Default colors used when component has no specific class */
}
.calendar-component:hover > .calendar-component-leftcolorborder {
  background-color: #74A8D8;
}
.calendar-component.comp-selected > .calendar-component-leftcolorborder {
  background-color: #014786;
}
.calendar-component:hover {
  background-color: #C1DEF9;
}
.calendar-component.comp-selected {
  background-color: #74A8D8;
}
.calendar-component.calendar-appointment {
  background-color: #FCF0E5;
}
.calendar-component.calendar-appointment > .calendar-component-leftcolorborder {
  background-color: #FFDB9D;
}
.calendar-component.calendar-appointment:hover {
  background-color: #FFDB9D;
}
.calendar-component.calendar-appointment:hover > .calendar-component-leftcolorborder {
  background-color: #FDAD4F;
}
.calendar-component.calendar-appointment:hover .comp-selected > .calendar-component-leftcolorborder {
  background-color: #FE9915;
}
.calendar-component.calendar-appointment.comp-selected {
  background-color: #FDAD4F;
}
.calendar-component.calendar-appointment.comp-selected > .calendar-component-leftcolorborder {
  background-color: #FE9915;
}
.calendar-component.calendar-task {
  background-color: #DDFFF9;
}
.calendar-component.calendar-task > .calendar-component-leftcolorborder {
  background-color: #93EDDC;
}
.calendar-component.calendar-task:hover {
  background-color: #93EDDC;
}
.calendar-component.calendar-task:hover > .calendar-component-leftcolorborder {
  background-color: #3EE1C3;
}
.calendar-component.calendar-task.comp-selected {
  background-color: #3EE1C3;
}
.calendar-component.calendar-task.comp-selected > .calendar-component-leftcolorborder {
  background-color: #24B499;
}
.calendar-component-title {
  font-weight: bold;
}
.calendar-component-intro {
  font-size: 11px;
  color: #666666;
}
.calendar-list-container {
  display: inline-block;
  vertical-align: top;
  width: 0;
  padding: 0;
  overflow: hidden;
}
.calendar-list {
  width: 270px;
  padding: 0 0 0 30px;
  height: 100%;
}
.calendar-list > .calendar-component {
  cursor: pointer;
  height: auto;
  width: calc(100% - 10px);
  background-color: transparent !important;
  /* NOSONAR (required to override original component background color) */
  margin-top: 12px;
  color: #333333;
}
.calendar-list-title {
  position: relative;
  width: calc(100% - 10px);
  height: 25px;
  line-height: 25px;
  font-weight: bold;
  color: #333333;
}
.calendar-list-title::after {
  position: absolute;
  height: 1px;
  width: 100%;
  left: 0;
  bottom: -1px;
  content: '';
  background-color: #CCCCCC;
}
.calendar-grids {
  display: inline-block;
  vertical-align: top;
  overflow: hidden;
}
.calendar-grid {
  display: block;
  height: calc(100% - 25px);
  padding-right: 20px;
}
.calendar-grid.calendar-grid-short {
  height: calc(100% - 105px);
}
.calendar-top-grid {
  display: block;
  overflow: hidden;
  border-bottom: 1px solid #CCCCCC;
  height: 105px;
  margin-right: 20px;
}
.calendar-top-grid.calendar-top-grid-short {
  height: 25px;
}
.calendar-week-header,
.calendar-week {
  display: block;
  width: 100%;
  white-space: nowrap;
}
.calendar-week-allday-container,
.calendar-week-allday-container > .calendar-week-name {
  height: 80px;
}
.calendar-week-allday-container > .calendar-day {
  padding-top: 30px;
}
.calendar-week-header,
.calendar-week-header > .calendar-day-name,
.calendar-week-header > .calendar-week-name {
  height: 25px;
}
.calendar-week {
  position: relative;
}
.calendar-week-name {
  width: 45px;
}
.calendar-day-name,
.calendar-week-name,
.calendar-day {
  position: relative;
  display: inline-block;
  overflow: hidden;
  z-index: 1;
  /* draw over grid */
}
.calendar-day {
  padding: 0;
  /* helps to center days between 10 and 19 nicer */
}
.calendar-day:not(.calendar-no-label)::before {
  position: absolute;
  content: attr(data-day-name);
  color: #666666;
  left: 7px;
  top: 7px;
  z-index: 1;
  /* draw over calendar items */
}
.calendar-day.out {
  background-color: none;
}
.calendar-day.out::before {
  color: #CCCCCC;
}
.calendar-day.weekend::before {
  color: #014786;
}
.calendar-day.weekend-out {
  background-color: none;
}
.calendar-day.weekend-out::before {
  color: #74A8D8;
}
.calendar-day.now::before {
  color: #FE9915;
  font-weight: bold;
}
.calendar-day.selected.center-nice::before {
  padding-right: 2px;
}
.calendar-day .calendar-component {
  margin-left: 32px;
  margin-bottom: 1px;
  margin-top: 1px;
}
.calendar-day .calendar-component.component-month.compact {
  top: 30px;
  margin-left: 0;
  width: 100%;
}
.calendar-day .calendar-component.component-day,
.calendar-day .calendar-component.component-task {
  position: absolute;
  word-break: break-all;
  left: 0;
  margin: 0;
  width: 100%;
  height: 24px;
  line-height: 24px;
}
.calendar-day .calendar-component.component-open-top {
  overflow: visible;
  padding-top: 10px;
  /* Compensate for open top padding */
}
.calendar-day .calendar-component.component-open-top > .calendar-component-leftcolorborder {
  height: calc(100% + 10px);
  top: -10px;
}
.calendar-day .calendar-component.component-open-top::before {
  position: absolute;
  display: block;
  content: '';
  width: 16px;
  height: 16px;
  left: calc(50% - 8px);
  top: -8px;
  transform: rotate(45deg);
  background-color: #FEFEFE;
}
.calendar-day .calendar-component.component-open-bottom {
  overflow: visible;
  border-bottom: none;
  /* Compensate for calendar-component border */
}
.calendar-day .calendar-component.component-open-bottom::after {
  position: absolute;
  display: block;
  content: '';
  width: 16px;
  height: 16px;
  left: calc(50% - 8px);
  bottom: -8px;
  transform: rotate(45deg);
  background-color: inherit;
}
.calendar-day.selected.now::before {
  left: 4px;
  top: 3px;
  font-weight: normal;
  border: solid 4px #FE9915;
  border-radius: 50%;
  background-color: #FE9915;
  color: #fff;
}
.calendar-day.selected::before {
  text-align: center;
  left: 4px;
  top: 3px;
  width: 23px;
  height: 23px;
  border: solid 4px #1561A7;
  border-radius: 50%;
  background-color: #1561A7;
  color: #fff;
}
.calendar-week-name {
  font-size: 11px;
  color: #999999;
  padding-top: 9px;
  text-align: center;
}
.calendar-day::after,
.calendar-day-name::after {
  position: absolute;
  width: 1px;
  height: 100%;
  left: 0;
  top: 0;
  content: '';
  background-color: #CCCCCC;
}
.calendar-week:not(.calendar-week-noborder)::after {
  position: absolute;
  height: 1px;
  width: 100%;
  left: 0;
  top: 0;
  content: '';
  background-color: #CCCCCC;
}
.calendar-day-name::before {
  position: absolute;
  content: attr(data-day-name);
  color: #666666;
  left: 7px;
  bottom: 0;
  z-index: 1;
  /* draw over calendar items */
  line-height: 25px;
}
.calendar-week-axis {
  position: absolute;
  left: 39px;
  width: calc(100% - 45px + 6px);
}
.calendar-week-axis:not(.first)::after {
  position: absolute;
  height: 1px;
  width: 100%;
  content: '';
  background-color: #EFEFEF;
}
.calendar-week-axis:not(.first).hour::after {
  background-color: #CCCCCC;
}
.calendar-week-axis:not(.first)::before {
  position: absolute;
  font-size: 12px;
  left: -35px;
  top: -8px;
  color: #999999;
  content: attr(data-axis-name);
}
.calendar-week-task {
  position: relative;
  left: 0;
  width: 100%;
}
.calendar-week-task::after {
  position: relative;
  height: 1px;
  width: 100%;
  content: '';
  background-color: #CCCCCC;
}
.calendar-week-task::before {
  position: absolute;
  font-size: 11px;
  top: 28px;
  left: 7px;
  color: #999999;
  content: attr(data-axis-name);
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.year-panel-container {
  display: inline-block;
  vertical-align: top;
  width: 0;
  overflow: hidden;
}
.year-panel-title {
  position: relative;
  margin-left: 10px;
  width: calc(100% - 40px);
  height: 25px;
  white-space: nowrap;
}
.year-panel-title > .year-title-item {
  display: inline-block;
  padding-right: 15px;
  line-height: 25px;
  color: #999999;
  cursor: pointer;
  font-weight: bold;
}
.year-panel-title > .year-title-item.selected {
  color: #333333;
  cursor: default;
}
.year-panel-title > .year-title-item:hover {
  color: #333333;
}
.year-panel-title::after {
  position: absolute;
  height: 1px;
  width: 100%;
  left: 0;
  bottom: -1px;
  content: '';
  background-color: #CCCCCC;
}
.year-panel-list {
  position: relative;
  width: 180px;
  margin-left: 10px;
  height: calc(100% -  25px);
  overflow: hidden;
}
.year-panel-list > .year-month {
  margin-top: 18px;
  margin-bottom: 8px;
  position: relative;
  padding-top: 20px;
  padding-right: 15px;
  float: left;
  width: 180px;
}
.year-panel-list > .year-month > .year-day {
  position: relative;
  float: left;
  width: 23px;
  text-align: right;
  color: #333333;
  height: 24px;
  padding-right: 5px;
  line-height: 24px;
  cursor: pointer;
}
.year-panel-list > .year-month > .year-day.year-hover {
  background-color: #E9F0F6;
}
.year-panel-list > .year-month > .year-day.year-range {
  background-color: #E9F0F6;
}
.year-panel-list > .year-month > .year-day.year-range-day {
  background-color: #1561A7;
  color: #fff;
}
.year-panel-list > .year-month > .year-day.year-hover-day {
  background-color: #1561A7;
  color: #fff;
}
.year-panel-list > .year-month::before {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  content: attr(data-title);
  font-weight: bold;
  color: #333333;
}
.year-panel-list > .year-month::after {
  position: absolute;
  bottom: 0;
  right: 19px;
  height: calc(100% - 20px);
  width: 26%;
  content: '';
  background-color: #666666;
  opacity: 0.1;
  pointer-events: none;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.date-picker-popup {
  position: absolute;
  width: 252px;
  border-radius: 3px;
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  overflow: hidden;
}
.date-picker-popup.alternative {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
.date-picker {
  position: relative;
  background-color: #fff;
}
.date-picker-scrollable {
  position: relative;
  width: 100%;
}
.date-picker-month-box {
  position: relative;
  display: inline-block;
  width: 100%;
}
.date-picker-month {
  display: table;
  width: 100%;
  padding: 0 6px 3px 6px;
}
.date-picker-weekdays {
  display: table-row;
}
.date-picker-weekday {
  display: table-cell;
  height: 30px;
  text-align: center;
  vertical-align: middle;
}
.date-picker-week {
  display: table-row;
}
.date-picker-day {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
  /* Hover effect is disabled on touch devices because the hover effect does not vanish on touch end which is annoying especially when swiping. */
  /* Must be after other style definitions, because 'disabled' should overrule other definitions */
}
.date-picker.touch .date-picker-day {
  padding-top: 10px;
  padding-bottom: 10px;
}
.date-picker-day > .text {
  display: inline-block;
  padding: 5px 5px;
  margin-top: 2px;
  border-radius: 50%;
  border: 1px solid transparent;
}
.date-picker-day.ten > .text {
  /* increase padding a bit to center days between 10 and 19 nicer */
  padding-right: 6px;
}
.date-picker-day:active:not(.disabled) > .text,
.date-picker:not(.touch) .date-picker-day:hover:not(.disabled) > .text {
  border-color: #014786;
  background-color: #E9F0F6;
}
.date-picker-day:active:not(.disabled).date-picker-now > .text,
.date-picker:not(.touch) .date-picker-day:hover:not(.disabled).date-picker-now > .text {
  border-color: #FE9915;
  background-color: #FCF0E5;
}
.date-picker-day:active:not(.disabled).selected > .text,
.date-picker:not(.touch) .date-picker-day:hover:not(.disabled).selected > .text {
  background-color: #2B73B3;
}
.date-picker-day:active:not(.disabled).selected.date-picker-now > .text,
.date-picker:not(.touch) .date-picker-day:hover:not(.disabled).selected.date-picker-now > .text {
  background-color: #FDAD4F;
}
.date-picker-day.date-picker-out {
  color: #CCCCCC;
}
.date-picker-day.date-picker-weekend {
  color: #014786;
}
.date-picker-day.date-picker-out-weekend {
  color: #74A8D8;
}
.date-picker-day.date-picker-now {
  color: #FE9915;
  font-weight: bold;
}
.date-picker-day.preselected > .text {
  border-color: #014786;
  border-style: dashed;
}
.date-picker-day.preselected.date-picker-now > .text {
  border-color: #FE9915;
}
.date-picker-day.selected {
  color: #fff;
}
.date-picker-day.selected > .text {
  background-color: #1561A7;
}
.date-picker-day.selected.date-picker-now {
  color: #fff;
}
.date-picker-day.selected.date-picker-now > .text {
  background-color: #FE9915;
}
.date-picker-day.disabled {
  color: #CCCCCC;
}
.date-picker-header {
  line-height: 30px;
  height: 30px;
  padding: 0 10px;
  background-color: #EFEFEF;
  border-bottom: 1px solid #CCCCCC;
  /* Additional space between navigation buttons on touch devices */
}
.date-picker-header.touch {
  padding-left: 18px;
  padding-right: 18px;
}
.date-picker-header.touch > .date-picker-left-m {
  margin-left: 26px;
}
.date-picker-header.touch > .date-picker-right-m {
  margin-right: 26px;
}
.date-picker-separator {
  position: absolute;
  top: 59px;
  left: 0;
  height: 1px;
  width: 100%;
  border-bottom: 1px solid #CCCCCC;
}
.date-picker-header-month {
  text-align: center;
  cursor: default;
  font-size: 13px;
  padding-top: 1px;
}
.date-picker-left-y,
.date-picker-left-m,
.date-picker-right-y,
.date-picker-right-m {
  text-align: center;
  width: 22px;
  line-height: 30px;
  height: 30px;
  cursor: pointer;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 17px;
}
.date-picker-left-y:hover,
.date-picker-left-m:hover,
.date-picker-right-y:hover,
.date-picker-right-m:hover {
  color: #014786;
}
.date-picker-left-y:active,
.date-picker-left-m:active,
.date-picker-right-y:active,
.date-picker-right-m:active {
  color: #014786;
}
.date-picker-left-y,
.date-picker-left-m {
  float: left;
}
.date-picker-left-y::before {
  content: '\E010';
}
.date-picker-left-m::before {
  content: '\E012';
}
.date-picker-right-y,
.date-picker-right-m {
  float: right;
}
.date-picker-right-y::before {
  content: '\E011';
}
.date-picker-right-m::before {
  content: '\E013';
}
.touch-popup-widget-container > .date-picker {
  border: none;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
.desktop:focus {
  outline: none;
}
.desktop.has-navigation-handle > .splitter {
  height: calc(100% - 50px);
}
/* "Open URI" related rules */
.download-frame {
  position: fixed;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  visibility: hidden;
  /* Do _not_ use 'display: none', because that seems to interrupt the download in Safari */
}
/*
 * Copyright (c) 2014-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-logo {
  position: absolute;
  right: 0;
  top: 0;
  margin-top: 8px;
  margin-right: 20px;
  width: 33px;
  height: 33px;
  background-size: contain;
  background-repeat: no-repeat;
}
.desktop-logo.clickable {
  cursor: pointer;
}
.dense {
  /* FormField.less */
  /* SmartField.less */
  /* MenuBar.less */
  /* GroupBox.less */
  /* TabBox.less */
  /* TableHeader.less */
  /* Table.less */
  /* DesktopBench.less */
  /* ContextMenuPopup.less */
  /* CheckBoxField.less */
  /* main.less */
  /* Button */
  /* RadioButton.less */
  /* LabelField.less */
  /* Tree.less */
  /* Outline.less */
  /* ValueField.less */
  /* TagBar.less */
  /* use default margin in the overflow popup, otherwise the tags sit on each other */
  /* TagField.less */
  /* BreadcrumbItem.less */
}
.dense .form-field > label {
  padding-top: 4px;
  /* @borderless-field-padding-y; */
  padding-bottom: 4px;
  /* @borderless-field-padding-y; */
}
.dense .smart-field > .field > .multiline-lines,
.dense .smart-field.read-only > .field > .multiline-lines,
.dense .smart-field.alternative > .field > .multiline-lines {
  line-height: 15px;
  padding-top: 2px;
  /* padding: 3px @text-field-padding-x; */
  padding-bottom: 2px;
}
.dense .proposal-chooser > .active-filter,
.dense .proposal-chooser > .status {
  height: 30px;
}
.dense .proposal-chooser > .active-filter > .radiobutton-group {
  height: 30px;
}
.dense .proposal-chooser > .active-filter > .radiobutton-group > .radiobutton-group-body {
  height: 30px;
}
.dense .menubar > .menubox > .menu-item {
  padding-top: 3px;
  /* @menubar-item-padding-y; */
  padding-bottom: 3px;
  /* @menubar-item-padding-y; */
  /* By making sure menu items are always at least the same height as form fields, it is easier to align them with each other, especially when zoomed */
  min-height: 24px;
  /* @logical-grid-row-height; */
}
.dense .group-box-title {
  margin-top: 2px;
  /* @group-box-title-margin-top; */
  padding-top: 4px;
  /* padding: @group-box-title-padding-top 0 @group-box-title-padding-bottom 0; */
  padding-bottom: 4px;
}
.dense .group-box-body {
  padding-top: 8px;
  /* padding: @group-box-body-padding-top 0 @group-box-body-padding-bottom 0; */
  padding-bottom: 6px;
  /* redefine */
}
.dense .group-box-body.y-padding-invisible {
  padding-top: 0;
  padding-bottom: 0;
}
.dense .tab-box-header {
  margin-top: 4px;
  /* @group-box-title-margin-top; */
}
.dense .tab-item > .title {
  padding-top: 4px;
  /* padding: @tab-item-title-padding-top 0 @tab-item-title-padding-bottom; */
  padding-bottom: 4px;
}
.dense .overflow-tab-item.menu-item {
  padding-top: 4px;
  /* padding: @tab-item-title-padding-top - 2px @tab-item-padding-x - 8px @tab-item-title-padding-bottom; */
  padding-bottom: 4px;
}
.dense .table-header-item {
  padding-top: 7px;
  /* padding: @table-header-padding-y @table-header-padding-right @table-header-padding-y @table-header-padding-left; */
  padding-bottom: 6px;
}
.dense .table-header-resize {
  padding-top: 4px;
  /* 8px 8px; */
  padding-bottom: 4px;
}
.dense .table-cell {
  padding-top: 4px;
  /* padding: @table-row-padding-y @table-cell-padding-right @table-row-padding-y @table-cell-padding-left; */
  padding-bottom: 4px;
}
.dense .table-cell.checkable {
  padding-top: 4px;
  /* @table-row-padding-y - @checkable-cell-padding-adjustment @table-cell-padding-left 0 @table-cell-padding-left; */
  padding-bottom: 4px;
  line-height: 0;
  /* somehow inline-block causes additional height when line-height is not set. (font-size would work) */
}
.dense .table-cell.table-node > .table-row-control {
  /* padding: @table-row-padding-y 8px @table-row-padding-y @table-row-control-padding-left; */
  padding-top: 6px;
  padding-bottom: 4px;
}
.dense .detail-table.table > .table-header > .table-header-item {
  padding-top: 7px;
  /* @detail-table-header-padding-y; */
  padding-bottom: 6px;
  /* @detail-table-header-padding-y; */
}
.dense .detail-table.table > .table-header > .table-header-item > .table-header-item-state {
  top: 4px;
  /* top: 9px; */
}
.dense .detail-table.table .table-aggregate > .table-cell {
  padding-top: 4px;
  /* @detail-table-row-padding-y; */
  padding-bottom: 4px;
  /* @detail-table-row-padding-y; */
}
.dense .detail-table.table > .table-data > .table-row > .table-cell,
.dense .detail-table.table > .table-data > .table-aggregate-row > .table-cell {
  padding-top: 3px;
  /* @detail-table-row-padding-y - 1px; */
  padding-bottom: 3px;
  /* @detail-table-row-padding-y - 1px; */
}
.dense .detail-table.table > .table-data > .table-row > .table-cell.checkable,
.dense .detail-table.table > .table-data > .table-aggregate-row > .table-cell.checkable {
  padding-top: 3px;
  /* @detail-table-row-padding-y - @checkable-cell-padding-adjustment - 1px; */
  padding-bottom: 3px;
}
.dense .detail-table.table > .table-data > .table-row > .table-cell > .table-row-control,
.dense .detail-table.table > .table-data > .table-aggregate-row > .table-cell > .table-row-control {
  padding-top: 4px;
  /* @detail-table-row-padding-y - 1px; */
  padding-bottom: 4px;
  /* @detail-table-row-padding-y - 1px; */
}
.dense .context-menu > .menu-item {
  padding-top: 6px;
  /* padding: 11px 15px; */
  padding-bottom: 6px;
}
.dense .check-box-field > .field {
  padding-top: 2px;
  /* padding: 6px 0; */
  padding-bottom: 2px;
}
.dense .input-field {
  padding-top: 3px;
  /* padding: @text-field-padding-y @text-field-padding-x; */
  padding-bottom: 3px;
}
.dense .button {
  padding-top: 0;
  /*   padding: @button-padding-y @button-padding-x; */
  padding-bottom: 0;
}
.dense .button > .button-label {
  padding: 0 0;
}
.dense .button > .icon {
  padding-top: 0;
  /* padding-top: 2px; */
  padding-bottom: 0;
  /* padding-bottom: 2px; */
}
.dense .button-field > .button > .button-label {
  padding: 0;
  /* @text-field-padding-y - @button-padding-y - @button-margin-top 0 */
}
.dense .radio-button > .field {
  padding-top: 2px;
  /*   padding: 6px 0; */
  padding-bottom: 2px;
}
.dense .radio-button > .field > .label {
  padding-top: 1px;
  /* padding-top: @radio-button-label-padding-top; */
}
.dense .label-field > .field {
  padding-top: 2px;
  /* padding-top: @borderless-field-padding-y; */
  padding-bottom: 2px;
  /* padding-bottom: @borderless-field-padding-y; */
}
.dense .tree-node {
  padding-top: 3px;
  /* padding: @tree-node-padding-y @tree-node-padding-right @tree-node-padding-y @tree-node-padding-left; */
  padding-bottom: 3px;
}
.dense .tree-node-control {
  padding-top: 4px;
  padding-bottom: 3px;
}
.dense .outline.tree > .tree-data > .tree-node,
.dense .outline.tree > .tree-data > .animation-wrapper > .tree-node {
  padding-top: 6px;
  /* padding-top: @outline-node-padding-y; */
  padding-bottom: 6px;
  /* padding-bottom: @outline-node-padding-y; */
}
.dense .outline.tree > .tree-data > .tree-node > .tree-node-control,
.dense .outline.tree > .tree-data > .animation-wrapper > .tree-node > .tree-node-control {
  padding-top: 6px;
  /* padding-top: @outline-node-control-padding-y; */
}
.dense .value-field > input,
.dense .value-field > .input-field,
.dense .value-field > .field > input,
.dense .value-field > .field > .input-field,
.dense .value-field > .file-input {
  /* Mainly necessary if label is invisible or on top and use ui height is set -> Makes sure the status is aligned and inputs are always the same height*/
  min-height: 24px;
}
.dense .tag-element,
.dense .overflow-icon {
  height: 20px;
  /* @tag-field-tag-height */
  line-height: 20px;
  /* @tag-field-tag-height */
  margin-top: 0;
  /* margin: @tag-field-tag-margin-y @tag-field-tag-margin-right 0 0; */
}
.dense .tag-overflow-popup > .tag-element {
  margin-top: 3px;
}
.dense .tag-field > .field > input {
  padding-bottom: 1px;
}
.dense .breadcrumb-item {
  font-size: 13px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-bench {
  position: absolute;
  top: 0;
  background-color: #FEFEFE;
  /* jquery sets overflow to hidden while animating which makes bench-drop-shadow invisible -> prevent it */
  overflow: visible !important;
  /* NOSONAR */
  /* Make some space for the navigation handle (when the navigation is closed */
  /* Only do it if detail-table is at the bottom left corner */
}
.desktop-bench.drop-shadow::before {
  content: '';
  position: absolute;
  top: 3px;
  left: 0;
  width: 10px;
  height: calc(100% -  3px);
  box-shadow: -10px 0 10px 0 rgba(0, 0, 0, 0.4);
  clip-path: polygon(0 -100%, 0 200%, -100px 200%, -100px -100%);
}
.desktop-bench.animate-remove {
  -webkit-animation-name: slideout-right;
  -moz-animation-name: slideout-right;
  -o-animation-name: slideout-right;
  animation-name: slideout-right;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.desktop-bench.has-navigation-handle > .bench-column.first > .view-tab-box.last > .tab-content > .detail-table > .table-footer > .table-controls {
  margin-left: 25px;
}
.desktop-bench.has-navigation-handle > .bench-column.first > .view-tab-box.last > .tab-content > .detail-table > .table-footer > .table-controls > .table-control.selected {
  border-left-color: #CCCCCC;
}
.desktop-bench > .splitter.x-axis {
  margin-left: -7px;
  margin-right: -7px;
}
.detail-table.table.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -50px;
  margin-left: -50px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.detail-table.table.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 2px rgba(1, 71, 134, 0.8) solid;
  width: 100px;
  height: 100px;
}
.detail-table.table.ie {
  height: 0;
  width: 0;
}
.detail-table.table > .table-header {
  padding-left: 12px;
  padding-right: 12px;
  background-color: #EFEFEF;
  border-bottom-color: #CCCCCC;
}
.detail-table.table > .table-header > .table-header-item {
  padding-top: 12px;
  padding-bottom: 12px;
}
.detail-table.table > .table-header > .table-header-item > .table-header-item-state {
  top: 9px;
}
.detail-table.table > .table-header > .menubar-container {
  padding-left: 6px;
  padding-right: 10px;
}
.detail-table.table > .table-header > .menubar-container > .menubar > .menubox > .menu-item {
  margin-right: 12px;
}
.detail-table.table > .table-data {
  padding-left: 12px;
  padding-right: 12px;
}
.detail-table.table > .table-footer {
  background-color: #EFEFEF;
}
.detail-table.table .table-aggregate {
  /* Desktop table has a 2px (left) border. */
  margin-left: 14px;
}
.detail-table.table .table-aggregate > .table-cell {
  padding-top: 12px;
  padding-bottom: 12px;
}
.detail-table.table > .table-data > .scrollbar > .scrollbar-thumb.x-axis {
  padding-top: 4px;
}
.detail-table.table > .table-data > .scrollbar:hover.x-axis > .scrollbar-thumb.x-axis,
.detail-table.table > .table-data > .scrollbar.x-axis > .scrollbar-thumb.x-axis.scrollbar-thumb-move {
  padding-top: 2px;
}
.detail-table.table > .table-data > .table-row,
.detail-table.table > .table-data > .table-aggregate-row {
  /* Desktop table has a 2px border. Top and bottom border are added to the table cell. */
  border-left-width: 2px;
  border-right-width: 2px;
}
.detail-table.table > .table-data > .table-row.selected,
.detail-table.table > .table-data > .table-aggregate-row.selected {
  background-color: #E9F0F6;
  border-color: #014786;
}
.detail-table.table > .table-data > .table-row > .table-cell,
.detail-table.table > .table-data > .table-aggregate-row > .table-cell {
  /* Replace first and last pixel of specified row padding by a transparent border. This border will be */
  /* set to the selection color when the row is selected, thus creating the illusion that the 2px selection */
  /* border is drawn around the cell. See CSS rules below. */
  padding-top: 11px;
  padding-bottom: 11px;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
}
.detail-table.table > .table-data > .table-row > .table-cell.checkable,
.detail-table.table > .table-data > .table-aggregate-row > .table-cell.checkable {
  padding-top: 9px;
  padding-bottom: 0;
}
.detail-table.table > .table-data > .table-row > .table-cell > .table-row-control,
.detail-table.table > .table-data > .table-aggregate-row > .table-cell > .table-row-control {
  padding-top: 11px;
  padding-bottom: 11px;
}
.detail-table.table > .table-data > .table-row.select-top > .table-cell,
.detail-table.table > .table-data > .table-aggregate-row.select-top > .table-cell {
  border-top-color: #014786;
}
.detail-table.table > .table-data > .table-row.select-bottom > .table-cell,
.detail-table.table > .table-data > .table-aggregate-row.select-bottom > .table-cell {
  border-bottom-color: #014786;
}
.detail-table.table > .table-data > .table-row.select-single > .table-cell,
.detail-table.table > .table-data > .table-aggregate-row.select-single > .table-cell {
  border-top-color: #014786;
  border-bottom-color: #014786;
}
.detail-table.table > .table-data > .cell-editor-popup > .check-box-field {
  border-top: 2px solid #014786;
  border-bottom: 2px solid #014786;
}
.detail-table.table > .table-data > .cell-editor-popup > .check-box-field > .field {
  padding-top: 9px;
}
.detail-table.table > .table-data > .cell-editor-popup > .cell-editor-form-field > input,
.detail-table.table > .table-data > .cell-editor-popup > .cell-editor-form-field > .field > input {
  border-top: 2px solid #014786;
  border-bottom: 2px solid #014786;
}
@media only screen and (min-resolution: 96.96dpi) {
  /* 1.01dppx / 101% */
  /* The browser may not display the 2px border properly when zoomed, it draws a white gap between the cell and the row border.
     To prevent that the border is reduced to the simple 1px border. This is also applied if windows font size is set to medium (125%) */
  .detail-table.table > .table-data > .table-row,
  .detail-table.table > .table-data > .table-aggregate-row {
    border-left-width: 1px;
    border-right-width: 1px;
  }
  .detail-table.table > .table-data > .table-row.select-top > .table-cell,
  .detail-table.table > .table-data > .table-aggregate-row.select-top > .table-cell {
    border-top-color: transparent;
  }
  .detail-table.table > .table-data > .table-row.select-bottom > .table-cell,
  .detail-table.table > .table-data > .table-aggregate-row.select-bottom > .table-cell {
    border-bottom-color: transparent;
  }
  .detail-table.table > .table-data > .table-row.select-single > .table-cell,
  .detail-table.table > .table-data > .table-aggregate-row.select-single > .table-cell {
    border-top-color: transparent;
    border-bottom-color: transparent;
  }
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.bench-column {
  position: absolute;
}
.bench-column > .splitter.y-axis {
  margin-top: -7px;
  margin-bottom: -7px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.group {
  position: relative;
}
.group-header {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding: 10px 0;
  cursor: pointer;
}
.group-header:focus {
  outline: none;
}
.group-header.disabled {
  cursor: default;
}
.group-header.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -8px;
  margin-left: -8px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
  left: inherit;
  right: 0;
}
.group-header.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 16px;
  height: 16px;
}
.group-title {
  font-size: 14px;
  font-weight: bold;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.group-header:focus > .group-title {
  color: #014786;
  text-decoration: underline;
}
.group-title-suffix {
  margin-left: 8px;
  font-size: 14px;
}
.group-icon.with-title {
  margin-right: 8px;
}
.group-collapse-icon {
  /* Set to same height as before element to prevent header from getting larger */
  height: 16px;
  transition: transform 0.3s;
  margin-right: 8px;
  margin-top: -1px;
  /* since icon height is reduced it needs to be moved up a little to center it again */
}
.group-collapse-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\E014';
  font-size: 16px;
}
.group-collapse-icon.collapsed {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}
.group-header.collapse-right > .group-title {
  flex-grow: 1;
}
.group-header.collapse-right > .group-title-suffix {
  text-align: right;
}
.group-header.collapse-right > .group-collapse-icon {
  transition: transform 0s;
  margin-right: 0;
  margin-left: 8px;
  margin-top: 0;
}
.group-header.collapse-right > .group-collapse-icon::before {
  content: '\E014';
}
.group-header.collapse-right > .group-collapse-icon.collapsed {
  -webkit-transform: rotatex(180deg);
  -ms-transform: rotatex(180deg);
  transform: rotatex(180deg);
}
.group.collapse-bottom > .group-header.custom-header-widget {
  cursor: default;
}
.group.collapse-bottom > .group-body {
  margin-bottom: 0;
}
.group.collapse-bottom > .group-footer {
  display: flex;
}
.collapsible.group.collapse-bottom > .group-footer {
  cursor: pointer;
}
.group.collapse-bottom > .group-footer > .group-collapse-border {
  flex-grow: 1;
  margin-top: 8px;
  margin-bottom: 8px;
  border-style: solid;
  border-width: 0 0 1px 0;
  border-color: #CCCCCC;
}
.group.collapse-bottom > .group-footer > .group-collapse-icon {
  transition: transform 0s;
  margin: 0;
}
.group.collapse-bottom > .group-footer > .group-collapse-icon::before {
  content: '\E015';
  padding: 0 4px;
}
.group.collapse-bottom > .group-footer > .group-collapse-icon.collapsed {
  -webkit-transform: rotatex(180deg);
  -ms-transform: rotatex(180deg);
  transform: rotatex(180deg);
}
.group.collapse-bottom > .group-footer:hover > .group-collapse-icon::before {
  color: #FE9915;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.simple-tab-box {
  position: absolute;
  min-width: 50px;
  min-height: 50px;
}
.simple-tab-box > .simple-tab-area {
  position: relative;
  height: 51px;
  /* Has the same effect as "border-bottom: 1px solid @border-color", but is over-drawable by child */
  /* elements (such as the selected view-tab). The border would not be, because of "overflow: hidden". */
}
.simple-tab-box > .simple-tab-area::before {
  content: '';
  background-color: #CCCCCC;
  width: 100%;
  height: 1px;
  position: absolute;
  top: calc(100% - 1px);
  left: 0;
}
.simple-tab-box > .tab-content {
  height: 100%;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.carousel {
  overflow: hidden;
}
.carousel-filmstrip {
  transition: transform 200ms;
}
.carousel-item {
  display: inline-block;
  position: relative;
  overflow: hidden;
}
.carousel-status {
  font-size: 14pt;
  font-weight: bold;
  text-align: center;
}
.carousel-status > .status-item {
  color: #CCCCCC;
  display: inline;
  margin-right: 6px;
}
.carousel-status > .current-item {
  color: #000;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.collapse-handle {
  position: absolute;
  display: table;
  z-index: 10;
  bottom: 0;
  margin-bottom: 9px;
  border-radius: 3px;
}
.collapse-handle.one-visible {
  cursor: pointer;
}
.collapse-handle.one-visible:active > .collapse-handle-body {
  background-color: #EFEFEF;
}
.collapse-handle.right-aligned {
  right: 0;
}
.collapse-handle.left-aligned {
  left: 0;
}
.collapse-handle-body {
  position: relative;
  display: table-cell;
  padding: 8px 6px;
  background-color: #fff;
  color: rgba(1, 71, 134, 0.75);
  border: 1px solid rgba(1, 71, 134, 0.75);
  border-radius: 3px;
  cursor: pointer;
}
.collapse-handle-body::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: block;
}
.collapse-handle-body.left.both-visible {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.collapse-handle-body.left::before {
  content: '\E012';
}
.collapse-handle-body.right.both-visible {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: none;
}
.collapse-handle-body.right::before {
  content: '\E013';
}
.collapse-handle:active > .collapse-handle-body {
  color: #014786;
  background-color: #EFEFEF;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-tab.simple-tab {
  width: 220px;
  padding: 6px 10px 0 20px;
}
.desktop-tab.simple-tab.small {
  width: 130px;
}
.desktop-tab.simple-tab > .title {
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-header {
  position: absolute;
  top: 0;
  height: 51px;
  background-color: #fff;
  /* jquery sets overflow to hidden while animating which makes bench-drop-shadow invisible -> prevent it */
  overflow: visible !important;
  /* NOSONAR (see comment above) */
  /* Has the same effect as "border-bottom: 1px solid @border-color", but is over-drawable by child */
  /* elements (such as the selected view-tab). The border would not be, because of "overflow: hidden". */
}
.desktop-header::before {
  content: '';
  background-color: #CCCCCC;
  width: 100%;
  height: 1px;
  position: absolute;
  top: calc(100% - 1px);
  left: 0;
}
.desktop-header > .simple-tab-area {
  height: 51px;
}
.desktop-header > .simple-tab-area > .simple-tab.selected::before {
  content: '';
  position: absolute;
  top: 3px;
  left: 0;
  width: 10px;
  height: calc(100% -  3px);
  box-shadow: -10px 0 10px 0 rgba(0, 0, 0, 0.4);
  clip-path: polygon(0 -100%, 0 200%, -100px 200%, -100px -100%);
  top: 0;
  width: 20px;
  height: 110%;
}
.desktop-header > .simple-tab-area > .simple-tab.selected:not(:first-child)::before {
  box-shadow: -7px 0 10px 0 rgba(0, 0, 0, 0.4);
}
.desktop-header.animate-remove {
  -webkit-animation-name: slideout-right;
  -moz-animation-name: slideout-right;
  -o-animation-name: slideout-right;
  animation-name: slideout-right;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.desktop-header > .view-button-box {
  height: 100%;
}
.desktop-header > .view-button-box > .view-tab {
  height: 100%;
}
.desktop-header > .view-button-box > .view-button-tab,
.desktop-header > .view-button-box > .view-tab > .view-button-tab,
.desktop-header > .view-button-box > .view-tab > .view-menu {
  /* 1px smaller than the header because of the bottom border (see .selected rule for .simple-tab) */
  height: calc(100% - 1px);
  vertical-align: top;
  background-color: #014786;
  color: #fff;
}
.desktop-header > .view-button-box > .view-button-tab.last,
.desktop-header > .view-button-box > .view-tab > .view-button-tab.last,
.desktop-header > .view-button-box > .view-tab > .view-menu.last {
  border-right-color: #CCCCCC;
}
.desktop-header > .view-button-box > .view-button-tab:hover:not(.selected) > .font-icon,
.desktop-header > .view-button-box > .view-tab > .view-button-tab:hover:not(.selected) > .font-icon,
.desktop-header > .view-button-box > .view-tab > .view-menu:hover:not(.selected) > .font-icon {
  color: #fff;
}
.desktop-header:not(.in-background) > .view-button-box > .view-button-tab.selected,
.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-button-tab.selected,
.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-menu.selected {
  background-color: #FEFEFE;
  color: #014786;
  height: 100%;
  padding-bottom: 1px;
}
.desktop-header:not(.in-background) > .view-button-box > .view-button-tab.selected.popup-open,
.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-button-tab.selected.popup-open,
.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-menu.selected.popup-open {
  height: calc(100% - 1px);
}
.outline-content-has-menubar.desktop-header:not(.in-background) > .view-button-box > .view-button-tab.selected,
.outline-content-has-menubar.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-button-tab.selected,
.outline-content-has-menubar.desktop-header:not(.in-background) > .view-button-box > .view-tab > .view-menu.selected {
  background-color: #FAFAFA;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-navigation {
  position: absolute;
  height: 100%;
  width: 290px;
  min-width: 49px;
  background-color: #014786;
  color: #EFEFEF;
}
.desktop-navigation.single-view-button > .navigation-body > .outline > .outline-title {
  height: 50px;
  margin-left: 35px;
  margin-bottom: 9px;
  border-bottom: none;
  padding-left: 20px;
}
.desktop-navigation.single-view-button > .navigation-body > .outline > .outline-title > .outline-title-text {
  padding-top: 0;
  padding-bottom: 0;
}
.desktop-navigation.single-view-button > .navigation-body > .outline > .outline-title > .menubar {
  height: 50px;
  /* 100% not possible because outline-title must not be position relative due to menu item focus border */
  top: 0;
}
.desktop-navigation.single-view-button > .navigation-body > .outline.breadcrumb > .outline-title > .outline-title-text {
  padding-left: 0;
}
.desktop-navigation.single-view-button > .navigation-body > .outline.breadcrumb:not(.search-outline) > .outline-title {
  margin-bottom: 0;
}
.desktop-navigation.single-view-button > .navigation-body > .outline.breadcrumb:not(.search-outline) > .tree-data {
  margin-top: 9px;
  border-top: 1px solid rgba(255, 255, 255, 0.8);
}
.desktop-navigation.single-view-button > .navigation-body > .search-outline > .outline-title {
  margin-bottom: 0;
}
.desktop-navigation.single-view-button > .navigation-body > .search-outline > .search-outline-panel {
  padding-top: 10px;
  padding-bottom: 8px;
}
.desktop-navigation.single-view-button > .navigation-body > .search-outline > .search-outline-panel.has-status {
  padding-bottom: 14px;
}
.desktop-navigation.single-view-button > .navigation-body > .search-outline > .search-outline-panel > .search-outline-field {
  height: 32px;
}
.desktop-navigation.single-view-button > .navigation-body > .search-outline > .search-outline-panel > .clear-icon {
  top: 10px;
  height: 32px;
}
.desktop-navigation.single-view-button > .view-button-box .view-button-tab {
  padding-left: 20px;
  text-align: left;
  /* for IE */
  text-align: initial;
}
.desktop-navigation-breadcrumb {
  width: 240px;
}
.navigation-body {
  position: absolute;
}
.desktop-navigation > .desktop-tool-box {
  background-color: #fff;
  text-align: right;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-navigation-handle.collapse-handle {
  position: absolute;
}
.desktop-navigation-handle.collapse-handle:active > .collapse-handle-body,
.desktop-navigation-handle.collapse-handle.active > .collapse-handle-body {
  background-color: #1561A7;
}
.desktop-navigation-handle.collapse-handle > .collapse-handle-body {
  background-color: #014786;
  border-color: rgba(239, 239, 239, 0.75);
  color: rgba(239, 239, 239, 0.75);
}
.desktop-navigation-handle.collapse-handle.navigation-closed > .collapse-handle-body {
  /* increase border radius a little, otherwise it is barely visible */
  border-radius: 4px;
}
.desktop-navigation-handle.collapse-handle.right-aligned.both-visible {
  right: 5px;
}
.desktop-navigation-handle.collapse-handle.right-aligned:not(.both-visible) > .collapse-handle-body {
  border-right: 0;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.desktop-navigation-handle.collapse-handle.left-aligned.both-visible {
  right: 5px;
}
.desktop-navigation-handle.collapse-handle.left-aligned:not(.both-visible) > .collapse-handle-body {
  border-left: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.navigation-handle-key-box {
  margin-top: -6px;
}
.navigation-handle-key-box.left {
  margin-right: -4px;
}
.navigation-handle-key-box.right {
  margin-left: -4px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-notifications {
  position: fixed;
  right: 10px;
  top: 0;
  height: 100%;
  width: 250px;
  margin-top: 57px;
  pointer-events: none;
  /* Don't block access to the elements in the background */
}
/*** Animation: slide-in ***/
@-webkit-keyframes desktop-notification-slide-in {
  00% {
    left: 250px;
    margin-bottom: 0;
  }
  /* NOSONAR see comment on top */
  80% {
    left: 15px;
  }
  /* NOSONAR */
  100% {
    left: 0;
    margin-bottom: 20px;
  }
  /* NOSONAR */
}
@keyframes desktop-notification-slide-in {
  00% {
    left: 250px;
    margin-bottom: 0;
  }
  /* NOSONAR see comment on top */
  80% {
    left: 15px;
  }
  /* NOSONAR */
  100% {
    left: 0;
    margin-bottom: 20px;
  }
  /* NOSONAR */
}
/**
 * Slides in the notification from the right end of the screen
 * and increases the size of the bottom margin to move down existing
 * notifications.
 */
.desktop-notification-slide-in {
  -webkit-animation-name: desktop-notification-slide-in;
  -moz-animation-name: desktop-notification-slide-in;
  -o-animation-name: desktop-notification-slide-in;
  animation-name: desktop-notification-slide-in;
  -webkit-animation-duration: 0.3s;
  -moz-animation-duration: 0.3s;
  -o-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: ease-out;
  -moz-animation-timing-function: ease-out;
  -o-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
}
/*** Animation: fade-out ***/
@-webkit-keyframes desktop-notification-fade-out {
  00% {
    opacity: 1;
    margin-bottom: 20px;
  }
  /* NOSONAR see comment on top */
  100% {
    opacity: 0;
    margin-bottom: -37px;
  }
  /* NOSONAR */
}
@keyframes desktop-notification-fade-out {
  00% {
    opacity: 1;
    margin-bottom: 20px;
  }
  /* NOSONAR see comment on top */
  100% {
    opacity: 0;
    margin-bottom: -37px;
  }
  /* NOSONAR */
}
.desktop-notification-fade-out {
  -webkit-animation-name: desktop-notification-fade-out;
  -moz-animation-name: desktop-notification-fade-out;
  -o-animation-name: desktop-notification-fade-out;
  animation-name: desktop-notification-fade-out;
  -webkit-animation-duration: 0.3s;
  -moz-animation-duration: 0.3s;
  -o-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: ease-out;
  -moz-animation-timing-function: ease-out;
  -o-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
}
.desktop-notification {
  position: relative;
  width: 250px;
  float: right;
  border-left: 3px solid #014786;
  background-color: #fff;
  margin-bottom: 20px;
  pointer-events: auto;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.desktop-notification.ok {
  border-left-color: #0DAF66;
}
.desktop-notification.info {
  border-left-color: #2B73B3;
}
.desktop-notification.warning {
  border-left-color: #FDAD4F;
}
.desktop-notification.error {
  border-left-color: #FF6060;
}
.desktop-notification-content {
  border: 1px solid #CCCCCC;
  border-left-width: 0;
  padding: 10px;
  /* Prevent overlay of text and close icon */
}
.desktop-notification-content.closable {
  padding-right: 25px;
}
.desktop-notification-content > .closer {
  position: absolute;
  right: 10px;
  top: 10px;
}
.desktop-notification-message {
  display: inline-block;
}
.desktop-notification-loader {
  display: inline-block;
}
.desktop-notification-loader.animated::after {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  margin-top: -3px;
  margin-left: 16px;
  margin-right: 6px;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 14px;
  height: 14px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.outline.tree.in-background > .tree-data > .tree-node.selected {
  background-color: #508DC3;
  color: #fff;
}
.outline.tree > .tree-data > .scrollbar > .scrollbar-thumb.y-axis {
  padding-left: 2px;
}
.outline.tree > .tree-data > .scrollbar:hover.y-axis > .scrollbar-thumb.y-axis,
.outline.tree > .tree-data > .scrollbar.y-axis > .scrollbar-thumb.y-axis.scrollbar-thumb-move {
  padding-left: 0;
}
.outline.tree > .tree-data > .scrollbar > .scrollbar-thumb > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.2);
}
.outline.tree > .tree-data > .scrollbar > .scrollbar-thumb-move > .scrollbar-thumb-handle,
.outline.tree > .tree-data > .scrollbar > .scrollbar-thumb:hover > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.4);
}
.outline.tree > .tree-data > .key-box {
  top: 7px;
}
.outline.tree > .tree-data > .tree-node,
.outline.tree > .tree-data > .animation-wrapper > .tree-node {
  color: #EFEFEF;
  background-color: transparent;
  cursor: pointer;
  border: 0;
  /* leave some space for the scrollbar */
  padding-right: 8px;
  /* set top/bottom padding for item */
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 37px;
}
.outline.tree > .tree-data > .tree-node.group,
.outline.tree > .tree-data > .animation-wrapper > .tree-node.group {
  background-color: #1561A7;
}
.outline.tree > .tree-data > .tree-node.selected,
.outline.tree > .tree-data > .animation-wrapper > .tree-node.selected {
  color: #333333;
  background-color: #FEFEFE;
  border: 0;
}
.outline.tree > .tree-data > .tree-node > .text,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .text {
  font-size: 14px;
}
.outline.tree > .tree-data > .tree-node > .image-icon,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .image-icon {
  margin-top: auto;
}
.outline.tree > .tree-data > .tree-node > .font-icon,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .font-icon {
  line-height: 15px;
}
.outline.tree > .tree-data > .tree-node > .menubar,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .menubar {
  border: 0;
  background-color: inherit;
}
.outline.tree > .tree-data > .tree-node > .tree-node-control,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .tree-node-control {
  padding-top: 8px;
  padding-left: 17px;
  line-height: 14px;
}
.outline.tree > .tree-data > .tree-node > .tree-node-control::before,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .tree-node-control::before {
  font-size: 20px;
  /* always use same color as the tree-node label */
  color: inherit;
}
.outline.tree > .tree-data > .tree-node > .tree-node-control:hover::before,
.outline.tree > .tree-data > .animation-wrapper > .tree-node > .tree-node-control:hover::before {
  color: #FE9915;
}
.outline-title {
  cursor: pointer;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin: 0 12px 12px 12px;
  border-bottom: 1px solid #FEFEFE;
}
.outline-title::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.outline-title > .icon {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  font-size: 20px;
  padding-right: 10px;
}
.outline-title > .key-box {
  top: 19px;
}
.outline-title > .menubar {
  display: block;
  background-color: transparent;
  width: auto;
  position: absolute;
  right: 12px;
  top: 13px;
  border: none;
  color: #EFEFEF;
}
.outline-title > .menubar > .menubox > .menu-item:not(.disabled) {
  color: #EFEFEF;
}
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):hover,
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):active {
  color: #EFEFEF;
}
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):focus,
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):not(.menu-button):focus {
  color: #EFEFEF;
}
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):focus::after,
.outline-title > .menubar > .menubox > .menu-item:not(.disabled):not(.menu-button):focus::after {
  border-color: #EFEFEF;
  box-shadow: 0 0 5px #EFEFEF;
}
.outline-title > .menubar > .menubox > .menu-item:not(.menu-textandicon):focus::after {
  outline: none;
  border: 1px solid #fff;
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}
.outline-title-text {
  /* outline title height should be the same as main menubar and desktop header height (if there are no view buttons visible) */
  padding: 20px 2px 12px 6px;
  display: inline-block;
  vertical-align: middle;
}
/* bread crumb style (different colors and bigger font and arrow than original breadcrumb style) */
.outline.tree.breadcrumb > .outline-title {
  margin: 0;
  border-bottom-color: rgba(255, 255, 255, 0.8);
}
.outline.tree.breadcrumb > .outline-title.touch:active {
  background-color: #01549f;
}
.outline.tree.breadcrumb > .outline-title > .outline-title-text {
  padding-left: 18px;
}
.outline.tree.breadcrumb.node-selected > .outline-title {
  border-bottom-color: rgba(255, 255, 255, 0.3);
}
.outline.tree.breadcrumb > .tree-data > .tree-node,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node {
  border-bottom: 1px solid rgba(255, 255, 255, 0.8);
  padding: 12px 18px;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.group,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.group {
  background-color: transparent;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.child-of-selected,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.child-of-selected {
  background-color: #1561A7;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.child-of-selected:active,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.child-of-selected:active {
  background-color: #014786;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected {
  border-bottom-color: rgba(255, 255, 255, 0.3);
}
.outline.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::before,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::before {
  display: none;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::after,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::after {
  display: none;
}
.outline.tree.breadcrumb > .tree-data > .tree-node:active,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node:active {
  background-color: #01549f;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.selected,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected {
  background-color: #FEFEFE;
  color: #333333;
  cursor: default;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.selected::before,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::before {
  border-top-color: #FEFEFE;
  border-width: 8px 13px 0 13px;
  bottom: -8px;
}
.outline.tree.breadcrumb > .tree-data > .tree-node.selected::after,
.outline.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::after {
  border: 0;
  border-top-color: #FEFEFE;
}
.outline.tree.breadcrumb > .tree-data.has-detail-content > .tree-node.selected > .text,
.outline.tree.breadcrumb > .tree-data.has-detail-content > .animation-wrapper > .tree-node.selected > .text {
  font-weight: bold;
}
.outline.tree.breadcrumb:focus > .tree-data > .tree-node.parent-of-selected,
.outline.tree.breadcrumb.focused > .tree-data > .tree-node.parent-of-selected,
.outline.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.parent-of-selected,
.outline.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.parent-of-selected {
  border-color: rgba(255, 255, 255, 0.8);
}
.outline.tree.breadcrumb:focus > .tree-data > .tree-node.parent-of-selected::before,
.outline.tree.breadcrumb.focused > .tree-data > .tree-node.parent-of-selected::before,
.outline.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.parent-of-selected::before,
.outline.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.parent-of-selected::before {
  border-color: transparent;
}
.outline.tree.breadcrumb:focus > .tree-data > .tree-node.selected,
.outline.tree.breadcrumb.focused > .tree-data > .tree-node.selected,
.outline.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.selected,
.outline.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.selected {
  border-color: rgba(255, 255, 255, 0.8);
}
.outline.tree.breadcrumb:focus > .tree-data > .tree-node.selected::before,
.outline.tree.breadcrumb.focused > .tree-data > .tree-node.selected::before,
.outline.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.selected::before,
.outline.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.selected::before {
  border-top-color: #FEFEFE;
}
.compact.outline.breadcrumb > .outline-title > .outline-title-text {
  padding-left: 16px;
}
.compact.outline.breadcrumb > .tree-data > .tree-node {
  padding: 0;
}
.compact.outline.breadcrumb > .tree-data > .tree-node > .text {
  display: inline-block;
  padding: 12px 16px;
}
.compact.outline.breadcrumb > .tree-data > .tree-node > .icon {
  padding: 12px 0 12px 16px;
}
.compact.outline.breadcrumb > .tree-data > .tree-node > .node-menubar {
  position: absolute;
  right: 0;
  top: 0;
  width: auto;
  padding: 5px 16px 0 0;
}
.compact.outline.breadcrumb > .tree-data > .tree-node > .detail-menubar {
  padding: 0 16px 12px 16px;
}
.compact.outline.breadcrumb > .tree-data > .tree-node > .form > .root-group-box > .group-box-body {
  padding-left: 6px;
  padding-right: 16px;
}
.compact.outline.breadcrumb > .tree-data > .tree-node.child-of-selected.animate-prev-selected {
  -webkit-animation-name: tree-node-prev-selection;
  -moz-animation-name: tree-node-prev-selection;
  -o-animation-name: tree-node-prev-selection;
  animation-name: tree-node-prev-selection;
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  -o-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease;
  -moz-animation-timing-function: ease;
  -o-animation-timing-function: ease;
  animation-timing-function: ease;
}
.compact.outline.breadcrumb > .tree-data.detail-content-visible > .tree-node > .menubar {
  padding-bottom: 0;
}
/*** Previous Selection Animation ***/
@-webkit-keyframes tree-node-prev-selection {
  00% {
    background-color: #014786;
  }
  100% {
    background-color: #1561A7;
  }
}
/* NOSONAR */
@keyframes tree-node-prev-selection {
  00% {
    background-color: #014786;
  }
  100% {
    background-color: #1561A7;
  }
}
/* NOSONAR */
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.search-outline.tree > .outline-title {
  border-bottom: none;
  margin-bottom: 0;
}
.search-outline-panel {
  position: relative;
  border-bottom: 1px solid #FEFEFE;
  padding-bottom: 14px;
  margin: 0 12px 12px 12px;
}
.search-outline-panel ~ .tree {
  height: calc(100% -  70px);
}
.search-outline-field {
  border: 1px solid #014786;
  height: 35px;
  border-radius: 5px;
  width: 100%;
}
.search-outline-field:focus {
  border-color: #014786;
  box-shadow: 0 0 5px #fff;
}
.search-outline-field.has-text {
  padding-right: 25px;
}
.search-outline-field.has-text ~ .clear-icon {
  display: block;
}
.search-outline-field ~ .clear-icon {
  display: none;
  position: absolute;
  right: 0;
  top: 0;
  height: 35px;
  line-height: 35px;
  padding-right: 10px;
  cursor: pointer;
}
.search-outline-field ~ .clear-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 13px;
  content: '\E045';
  color: #999999;
}
.search-outline-status {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
  padding-right: 8px;
  text-align: right;
  padding-top: 10px;
  margin-bottom: -4px;
}
.outline.breadcrumb > .search-outline-panel {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 0;
  border-bottom-color: rgba(255, 255, 255, 0.8);
}
.node-selected.outline.breadcrumb > .search-outline-panel {
  border-bottom-color: rgba(255, 255, 255, 0.3);
}
.outline.breadcrumb > .search-outline-panel > .search-outline-field {
  margin-right: 12px;
  margin-left: 12px;
  width: calc(100% -  12px - 12px);
}
.outline.breadcrumb > .search-outline-panel > .search-outline-field ~ .clear-icon {
  margin-right: 12px;
  padding-right: 10px;
}
.outline.breadcrumb > .search-outline-panel > .search-outline-status {
  text-align: left;
  padding-left: 18px;
}
.compact.outline.breadcrumb > .search-outline-panel > .search-outline-status {
  padding-left: 16px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.navigate-button.up {
  color: #014786;
  border-color: #014786;
}
.navigate-button.up > .font-icon {
  color: #014786;
}
.menubar > .menubox > .navigate-button.menu-item.down.menu-button:not(.last) {
  /* Right and left margin of the navigate buttons should be equal.
    Setting this margin-right is especially necessary if on the right side of these buttons is another button. */
  margin-right: 20px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.outline-overview {
  position: relative;
  height: 100%;
  width: 100%;
  display: table;
}
.outline-overview-content {
  color: #999999;
  text-align: center;
  display: table-cell;
  vertical-align: middle;
  padding-bottom: 150px;
}
.outline-overview-icon {
  font-size: 40px;
  padding-bottom: 20px;
}
.outline-overview-title {
  font-size: 20px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.popup-blocked-title {
  margin-right: 15px;
  /* leave space for close icon */
}
.popup-blocked-link {
  display: block;
  margin-top: 10px;
  outline: none;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.desktop-tool-box {
  position: absolute;
  top: 0;
  white-space: nowrap;
  padding-right: 20px;
}
.desktop-tool-box.compact {
  padding-right: 15px;
}
.desktop-tool-box-item.menu-item {
  height: 50px;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 14px;
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;
  margin-left: 20px;
  margin-right: 20px;
}
.desktop-tool-box-item.menu-item.last {
  margin-right: 0;
}
.desktop-tool-box-item.menu-item.compact {
  margin-left: 10px;
  margin-right: 10px;
}
.desktop-tool-box-item.menu-item.compact.last {
  margin-right: 0;
}
.desktop-tool-box-item.menu-item.compact > .submenu-icon {
  display: none;
}
.desktop-tool-box-item.menu-item > .font-icon {
  font-size: 17px;
}
.desktop-tool-box-item.menu-item > .icon.image-icon {
  /* Increase max image height, no need to limit it to 16px. 33px is the desktop logo height */
  max-height: 33px;
}
.desktop-tool-box-item.menu-item.menu-textandicon > .icon {
  padding-right: 6px;
}
/* header: tools popup */
.desktop-tool-box-item.popup-head {
  height: 50px;
  border-left: 1px solid #CCCCCC;
  border-right: 1px solid #CCCCCC;
  cursor: pointer;
  box-shadow: none;
  border-top: none;
  /* OVERRIDE .desktop-tool-box-item.menu-item */
  margin-left: 0;
  margin-right: 0;
  position: absolute;
}
.popup.down > .desktop-tool-box-item.popup-head {
  /* above selector is too less specific */
  padding-top: 0;
}
.desktop-tool-box-item.popup-head.selected > .font-icon {
  font-size: 17px;
}
/* key boxes */
.desktop-tool-box-item.menu-item .key-box {
  bottom: 4px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.view-tab {
  display: inline-block;
  position: relative;
  height: 50px;
}
.view-tab > .key-box {
  bottom: 4px;
}
.view-button-tab {
  white-space: nowrap;
  border-right: solid 1px #CCCCCC;
  text-align: center;
  min-width: 50px;
  background-color: #EFEFEF;
  color: #5C5C5C;
}
.view-button-tab::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.view-button-tab:hover {
  cursor: pointer;
}
.view-button-tab:hover:not(.selected) > .font-icon {
  color: #014786;
}
.view-button-tab:active:not(.selected) > .font-icon {
  color: #014786;
}
.view-button-tab.selected {
  background-color: #014786;
  color: #fff;
}
.view-button-tab.selected.last {
  border-right-color: transparent;
}
.view-button-tab.disabled {
  color: #666666;
}
.view-button-tab.disabled:hover {
  cursor: default;
  color: #666666;
}
.view-button-tab.disabled:hover:not(.selected) > .font-icon {
  color: #666666;
}
.view-button-tab.view-menu-popup-head {
  position: absolute;
  background-color: #fff;
  color: #014786;
}
.view-button-tab > .icon {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  font-size: 20px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.view-button-box {
  display: inline-block;
  vertical-align: top;
  height: 50px;
  white-space: nowrap;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
  overflow: hidden;
  position: relative;
  /* if covered by glass pane */
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.view-tab > .menu-item {
  height: 50px;
  display: inline-block;
  padding-left: 10px;
  padding-right: 10px;
  border-right: solid 1px #CCCCCC;
}
.view-tab > .menu-item > .icon {
  top: 0;
}
.view-tab > .view-button-tab {
  display: inline-block;
  height: 50px;
}
.view-tab > .submenu-icon {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  position: relative;
  vertical-align: middle;
  display: inline-block;
  line-height: normal;
  height: auto;
  /* Make IE trigger the :active state if the text or icon is pressed */
  pointer-events: none;
}
.view-menu {
  padding-left: 10px;
  padding-right: 10px;
  border-right: solid 1px #CCCCCC;
  background-color: #EFEFEF;
  color: #5C5C5C;
}
.view-menu.view-menu-popup-head {
  position: absolute;
  background-color: #fff;
  color: #014786;
}
.view-menu.selected {
  background-color: #014786;
  color: #fff;
}
.view-menu.selected.last {
  border-right-color: transparent;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.view-menu-popup-body {
  position: relative;
  background-color: #fff;
  border-right: solid 1px #CCCCCC;
  border-top: solid 1px #CCCCCC;
  overflow: hidden;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.view-menu-popup-head > .icon {
  transform: rotate(180deg);
}
.view-menu-item {
  padding: 0 15px 0 15px;
  height: 50px;
  border-top: solid 1px #CCCCCC;
  cursor: pointer;
  color: #333333;
  font-size: 16px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  position: relative;
}
.view-menu-item::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.view-menu-item:first-child {
  border-top-color: transparent;
}
.view-menu-item:hover {
  color: #014786;
}
.view-menu-item.disabled {
  color: #999999;
  cursor: default;
}
.view-menu-item.selected {
  border-top: 1px solid #014786;
  background-color: #E9F0F6;
  border-color: #014786;
}
.view-menu-item.selected + .view-menu-item {
  border-top-color: #014786;
}
.view-menu-item.selected.last {
  border-color: #014786;
}
.view-menu-item.last {
  border-bottom: 1px solid #CCCCCC;
}
.view-menu-item > .key-box {
  top: 14px;
}
.view-menu-item > .icon {
  position: relative;
  font-size: 20px;
  margin-right: 10px;
  vertical-align: middle;
}
.view-menu-item > .content {
  vertical-align: middle;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.simple-tab-area {
  position: absolute;
  top: 0;
  white-space: nowrap;
}
.simple-tab-area > .simple-overflow-tab-item {
  border-right: 1px solid #CCCCCC;
  display: inline-block;
  height: 100%;
  width: 30px;
  padding-top: 17px;
  text-align: center;
  cursor: pointer;
  vertical-align: top;
}
.simple-tab-area > .simple-overflow-tab-item::after {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #333333;
  content: '\E014';
}
.simple-tab-area > .simple-overflow-tab-item.animate-modality-highlight {
  -webkit-animation-name: flash-gray;
  -moz-animation-name: flash-gray;
  -o-animation-name: flash-gray;
  animation-name: flash-gray;
  -webkit-animation-duration: 0.4s;
  -moz-animation-duration: 0.4s;
  -o-animation-duration: 0.4s;
  animation-duration: 0.4s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.simple-tab {
  position: relative;
  display: inline-block;
  vertical-align: top;
  /* 1px smaller than the header because of the bottom border (see .selected rule below) */
  height: calc(100% - 1px);
  padding: 5px;
  background-color: #EFEFEF;
  color: #333333;
  border-right: 1px solid #CCCCCC;
}
.simple-tab.last {
  border-right-width: 0;
}
.simple-tab:not(.no-hover) {
  cursor: pointer;
}
.simple-tab:not(.no-hover):hover > .title {
  color: #014786;
}
.simple-tab.small {
  width: 130px;
}
.simple-tab:active > .title {
  color: #014786;
}
.simple-tab.disabled {
  color: #999999;
  cursor: default;
}
.simple-tab.selected {
  cursor: default;
  background-color: #FEFEFE;
  /* full size of header to draw over the border-bottom */
  height: 100%;
}
.simple-tab.selected > .title {
  color: #014786;
}
.simple-tab.animate-modality-highlight {
  -webkit-animation-name: flash-gray;
  -moz-animation-name: flash-gray;
  -o-animation-name: flash-gray;
  animation-name: flash-gray;
  -webkit-animation-duration: 0.4s;
  -moz-animation-duration: 0.4s;
  -o-animation-duration: 0.4s;
  animation-duration: 0.4s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
.simple-tab > .title,
.simple-tab > .sub-title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.simple-tab > .sub-title {
  padding-top: 2px;
}
.simple-tab > .icon {
  float: right;
  margin-left: 5px;
}
.simple-tab > .status-container {
  float: right;
  position: relative;
}
.simple-tab > .status-container > .status {
  vertical-align: middle;
  display: inline-block;
  margin-left: 5px;
}
.simple-tab > .status-container > .status.closer {
  margin-left: 7px;
}
.simple-tab > .icon-container {
  float: left;
}
.simple-tab > .icon-container > .icon {
  margin-right: 5px;
  vertical-align: middle;
}
.simple-tab > .icon-container > .icon.font-icon {
  font-size: 14px;
}
.simple-tab.closable .closer {
  display: none;
}
.simple-tab.closable.selected .closer {
  display: inline-block;
}
/* key boxes */
.simple-tab .key-box {
  bottom: 4px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.file-chooser {
  position: absolute;
  top: 25%;
  left: 50%;
  width: 400px;
  box-shadow: 4px 10px 18px -6px rgba(0, 0, 0, 0.5);
  border-top: 5px solid #014786;
  border-radius: 3px;
  background-color: #fff;
  /* Helper class used during width calculation - required on very narrow screens (e.g. Word AddIn) */
}
.file-chooser > .closable {
  position: absolute;
  right: 5px;
  margin: 8px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 17px;
  cursor: pointer;
  color: #999999;
}
.file-chooser > .closable::before {
  content: '\E045';
}
.file-chooser > .closable:hover {
  color: #014786;
}
.file-chooser.calc-helper {
  top: 0;
  left: 0;
}
.file-chooser.animate-open {
  -webkit-animation-name: short-drop;
  -moz-animation-name: short-drop;
  -o-animation-name: short-drop;
  animation-name: short-drop;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.file-chooser.animate-modality-highlight {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  -webkit-animation-name: shake;
  -moz-animation-name: shake;
  -o-animation-name: shake;
  animation-name: shake;
  -webkit-animation-duration: 0.2s;
  -moz-animation-duration: 0.2s;
  -o-animation-duration: 0.2s;
  animation-duration: 0.2s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
.file-chooser-content {
  border: 0 solid #CCCCCC;
  border-left-width: 1px;
  border-right-width: 1px;
  background-color: #fff;
  padding: 10px 20px;
}
.file-chooser-content > .legacy-upload-form > .legacy-upload-file-input {
  margin-top: 15px;
  margin-bottom: 10px;
  padding: 5px;
}
.file-chooser-title {
  margin-right: 30px;
  /* Leave space for 'x' closable */
  word-wrap: break-word;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #014786;
}
.file-chooser-label {
  padding-top: 8px;
  padding-bottom: 8px;
}
.file-chooser-files {
  position: relative;
  min-height: 100px;
  max-height: 100px;
  border-top: 1px solid #CCCCCC;
  padding-top: 10px;
  margin-top: 10px;
  list-style-type: none;
  padding-left: 20px;
}
.file-chooser-files > .file {
  text-indent: -20px;
  word-break: break-all;
}
.file-chooser-files > .file::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\F15B';
  float: left;
  width: 20px;
  padding-left: 2px;
}
.file-chooser-files > .file > .remove {
  line-height: normal;
  /* override line-height of .menu-item */
  display: inline;
}
.file-chooser-files > .file > .remove > .remove-link {
  text-decoration: underline;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.file-input {
  cursor: pointer;
  /* Don't allow text selection because mouse down opens the chooser.
   * Reason: The browser would still be in selecting mode after the chooser closes,
   * every click outside of the field would immediately open the chooser again (at least in FF).
   */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.file-input:not(.disabled):not(.alternative):active {
  background-color: #F6F6F6;
}
.file-input.alternative:not(.disabled):active {
  border-bottom-color: #014786;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
.file-input.has-error:not(.disabled):not(.alternative):active {
  background-color: #FEE0E0;
}
.file-input.has-error.alternative:not(.disabled):active {
  border-bottom-color: #FF6060;
}
.file-input.disabled {
  cursor: default;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.legacy-upload-form > .legacy-upload-file-input {
  width: 100%;
}
.legacy-upload-form > .legacy-upload-file-input > iframe {
  display: none;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.form {
  position: relative;
  background-color: #FEFEFE;
}
.view:not(.detail-form) > .root-group-box > .main-menubar {
  background-color: inherit;
  padding-left: 0;
  padding-right: 0;
  margin-left: 20px;
  margin-right: 20px;
}
.view:not(.detail-form) > .root-group-box > .main-menubar > .menu-button.disabled {
  /* use regular button color since menubar has no color */
  background-color: #F6F6F6;
}
.dialog {
  position: absolute;
  background-color: #FEFEFE;
  border: solid 1px #CCCCCC;
  border-top: 5px solid #014786;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  box-shadow: 4px 10px 18px -6px rgba(0, 0, 0, 0.5);
  margin: 10px;
  /* minimum padding to desktop */
  margin-bottom: 15px;
  /* min-width and min-height are read by Resizable.js to prevent a dialog from becoming too small
     You can overrule these values with a specific CSS class on a dialog/form when you require a
     larger or smaller min-size. */
  min-width: 250px;
  min-height: 100px;
  top: 0;
  /* must be specified otherwise dialogs will be positioned at end of document and increase document size */
  /* remove border and rounded corners in full screen mode */
}
.dialog.animate-open {
  -webkit-animation: fade-in ease-in 1;
  -moz-animation: fade-in ease-in 1;
  -o-animation: fade-in ease-in 1;
  animation: fade-in ease-in 1;
  -webkit-animation-duration: 0.15s;
  -moz-animation-duration: 0.15s;
  -o-animation-duration: 0.15s;
  animation-duration: 0.15s;
}
.dialog.animate-open.ie {
  /* IE sometimes doesn't complete the animation so that dialog is nearly invisible */
  -webkit-animation-duration: 0;
  -moz-animation-duration: 0;
  -o-animation-duration: 0;
  animation-duration: 0;
}
.dialog.animate-modality-highlight {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  -webkit-animation-name: shake;
  -moz-animation-name: shake;
  -o-animation-name: shake;
  animation-name: shake;
  -webkit-animation-duration: 0.2s;
  -moz-animation-duration: 0.2s;
  -o-animation-duration: 0.2s;
  animation-duration: 0.2s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
.dialog.full-width,
.dialog.full-height {
  border-radius: 0;
}
.dialog.full-width {
  border-right: 0;
  border-left: 0;
}
.dialog.full-height {
  border-bottom: 0;
}
.dialog > .resizable-nw,
.dialog > .resizable-n,
.dialog > .resizable-ne {
  margin-top: -5px;
}
.dialog > .header {
  overflow: auto;
  /* clearfix */
  zoom: 1;
  /* clearfix */
  margin-top: 10px;
  margin-left: 20px;
  margin-right: 14px;
}
.dialog > .header.no-title {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 1;
}
.dialog > .header.no-title > .title,
.dialog > .header.no-title > .sub-title {
  display: none !important;
  /* NOSONAR (!important is okay here) */
}
.dialog > .header > .icon-container {
  float: left;
}
.dialog > .header > .icon-container > .icon {
  margin-right: 5px;
}
.dialog > .header > .icon-container > .icon.font-icon {
  font-size: 14px;
}
.dialog > .header > .title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #014786;
}
.dialog > .header > .sub-title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 13px;
  color: #014786;
}
.dialog > .header > .status-container {
  float: right;
}
.dialog > .header > .status-container > .status {
  /* make sure close icon overlaps drag-handle */
  position: relative;
  vertical-align: middle;
  display: inline-block;
  margin-left: 5px;
}
.dialog > .header > .status-container > .status.closer {
  margin-left: 7px;
}
@media (max-width: 375px) {
  .dialog {
    /* no need to have a margin on small screens */
    /* otherwise on iphone5, cancel button on a dialog would always be stacked in ellipsis if there is another menu item */
    margin: 0;
  }
  .dialog > .resizable-handle {
    /* Remove handle, it is not useful anymore
         and it increases the dialog size which has the effect that the body may be scrolled (on iphone).
         Important is necessary because jquery ui sets it to display: block using inline style */
    display: none !important;
    /* NOSONAR (see comment above)*/
  }
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.form-menu-popup > .popup-head {
  background-color: #FEFEFE;
}
.form-menu-popup > .popup-body > .form > .root-group-box > .main-menubar {
  background-color: #FAFAFA;
}
.form-menu-popup > .popup-deco {
  background-color: #FEFEFE;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.scout-info-form-container {
  width: 100%;
  margin-top: 5px;
  margin-bottom: 5px;
  display: flex;
}
.scout-info-form-logo-container {
  flex: none;
}
.scout-info-form-text-container {
  flex-grow: 1;
}
.scout-info-form-logo {
  display: inline-block;
  max-height: 100px;
  max-width: 200px;
  margin-right: 20px;
}
.scout-info-form-table {
  border-spacing: 0;
}
.scout-info-form-table-cell-description {
  padding-right: 10px;
  vertical-align: top;
}
.scout-info-form-table-cell-value {
  vertical-align: top;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.form-field {
  border-spacing: 0;
  /* FormFieldLayout uses absolute positioning, make sure it is positioned relatively to its container */
  position: relative;
  /* Class that applies the same vertical padding to the .field as to the label (useful e.g. for html fields) */
  /* Convenience class to add to a field when the mandatory indicator should not be displayed (e.g. inside a FormFieldMenu) */
}
.form-field > label {
  position: absolute;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-top: 8px;
  padding-bottom: 8px;
  margin-left: 10px;
  /* Add small spacing between label and field */
  padding-right: 10px;
}
.form-field > label.empty {
  /* explicitly disable ellipsis, because IE would display it for very narrow columns even if content is '&nbsp;' */
  text-overflow: clip;
}
.disabled.form-field > label {
  color: #666666;
}
.read-only.form-field > label {
  color: #333333;
}
.form-field > label.top {
  color: #888888;
  font-size: 11px;
  padding-bottom: 4px;
}
.alternative.form-field > label.top {
  /* Reduce space between input and label if there is no border */
  padding-bottom: 0;
}
.disabled.form-field > label.top,
.read-only.form-field > label.top {
  /* Always use same color for top labels even if it is disabled or read only */
  color: #888888;
}
.focused.form-field > label {
  color: #014786;
}
.has-error.form-field > label {
  color: #FF6060;
}
.form-field > .field {
  position: absolute;
}
.form-field.borderless-field-padding-y > .field {
  padding-top: 8px;
  padding-bottom: 8px;
}
.form-field > .mandatory-indicator {
  position: absolute;
  visibility: hidden;
}
.form-field > .mandatory-indicator::before {
  content: '*';
  font-size: 15px;
}
.form-field.mandatory > .mandatory-indicator:not(.read-only) {
  visibility: visible;
}
.form-field.disabled.alternative > .mandatory-indicator {
  color: #999999;
}
.form-field.no-mandatory-indicator > .mandatory-indicator {
  display: none;
}
.form-field.no-mandatory-indicator > label.top {
  margin-left: 0;
}
.form-field > .status {
  position: absolute;
  margin-left: 10px;
  height: 16px;
  /* Same as font-size of status icon */
  text-align: center;
}
.form-field > .status::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}
.form-field.has-menus.has-tooltip:not(.has-info):not(.has-warning):not(.has-error) > .status::before {
  content: '\E008';
}
.form-field.has-menus > .status {
  visibility: visible;
  cursor: pointer;
}
.form-field.has-menus > .status::before {
  content: '\E041';
  color: #666666;
  font-size: 18px;
}
.form-field.has-menus > .status:hover::before {
  color: #014786;
}
.form-field.has-menus > .status:active::before {
  color: #014786;
}
.form-field.has-tooltip > .status {
  visibility: visible;
  cursor: pointer;
}
.form-field.has-tooltip > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.form-field.has-tooltip > .status:hover::before {
  color: #014786;
}
.form-field.has-tooltip > .status:active::before {
  color: #014786;
}
.form-field.has-info > .status {
  visibility: visible;
  cursor: pointer;
}
.form-field.has-info > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.form-field.has-info > .status:hover::before {
  color: #014786;
}
.form-field.has-info > .status:active::before {
  color: #014786;
}
.form-field.has-warning > .status {
  visibility: visible;
  cursor: pointer;
}
.form-field.has-warning > .status::before {
  content: '\E001';
  color: #2B73B3;
  font-size: 16px;
}
.form-field.has-warning > .status:hover::before {
  color: #1561A7;
}
.form-field.has-warning > .status:active::before {
  color: #1561A7;
}
.form-field.has-error > .status {
  visibility: visible;
  cursor: pointer;
}
.form-field.has-error > .status::before {
  content: '\E001';
  color: #FF6060;
  font-size: 16px;
}
.form-field.has-error > .status:hover::before {
  color: #DF2632;
}
.form-field.has-error > .status:active::before {
  color: #DF2632;
}
.form-field .disabled-overlay {
  position: absolute;
}
.form-field.cell-editor-form-field {
  position: absolute;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.lookup-box.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.lookup-box > .field > .structure.tree,
.lookup-box > .field > .structure.table {
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  overflow: hidden;
  /* necessary due to rounded borders and background color*/
}
.lookup-box > .field > .structure.tree.alternative,
.lookup-box > .field > .structure.table.alternative {
  border-radius: 0;
}
.lookup-box > .field > .structure.tree:focus,
.lookup-box > .field > .structure.table:focus,
.lookup-box > .field > .structure.tree.focused,
.lookup-box > .field > .structure.table.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.lookup-box > .field > .structure.tree.ie,
.lookup-box > .field > .structure.table.ie {
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.value-field > input,
.value-field > .input-field,
.value-field > .field > input,
.value-field > .field > .input-field,
.value-field > .file-input {
  /* Mainly necessary if label is invisible or on top and use ui height is set -> Makes sure the status is aligned and inputs are always the same height*/
  min-height: 30px;
}
.value-field > .icon,
.value-field > .field > .icon,
.value-field > .clear-icon,
.value-field > .field > .clear-icon {
  display: none;
  position: absolute;
  padding-right: 10px;
}
.value-field > .icon::before,
.value-field > .field > .icon::before,
.value-field > .clear-icon::before,
.value-field > .field > .clear-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 13px;
  color: #999999;
}
.value-field.alternative > .icon,
.value-field.alternative > .field > .icon,
.value-field.alternative > .clear-icon,
.value-field.alternative > .field > .clear-icon {
  padding-right: 4px;
}
.value-field > .clear-icon,
.value-field > .field > .clear-icon {
  cursor: pointer;
}
.value-field > .clear-icon::before,
.value-field > .field > .clear-icon::before {
  content: '\E045';
}
.value-field > .clear-icon:hover::before,
.value-field > .field > .clear-icon:hover::before {
  color: #FE9915;
}
.value-field > .icon,
.value-field > .field > .icon {
  cursor: text;
}
.value-field.halign-right > .clear-icon,
.value-field.halign-right > .field > .clear-icon {
  padding-left: 10px;
  padding-right: 0;
}
.value-field.alternative.halign-right > .clear-icon,
.value-field.alternative.halign-right > .field > .clear-icon {
  padding-left: 4px;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).focused > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).focused > .clear-icon::before,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).focused > .field > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).focused > .field > .clear-icon::before {
  color: #014786;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).has-error > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).has-error > .clear-icon::before,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).has-error > .field > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).has-error > .field > .clear-icon::before,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).has-error > .field > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).has-error > .field > .clear-icon::before {
  color: #FF6060;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).disabled > .clear-icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).disabled > .clear-icon,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).disabled > .field > .clear-icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).disabled > .field > .clear-icon,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).compact > .clear-icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).compact > .clear-icon,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).compact > .field > .clear-icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).compact > .field > .clear-icon {
  display: none;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).alternative.has-error:focus > .field > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).alternative.has-error:focus > .field > .clear-icon::before,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).alternative.has-error.focused > .field > .clear-icon::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).alternative.has-error.focused > .field > .clear-icon::before {
  color: #FF6060;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .clear-icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .clear-icon {
  display: block;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .icon,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .icon {
  display: none;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .clear-icon:hover::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .clear-icon:hover::before,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .field > .clear-icon:hover::before,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .field > .clear-icon:hover::before {
  color: #FE9915;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > input,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .input-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .input-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .field > input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .field > input,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .field > .input-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .field > .input-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .file-input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .file-input {
  padding-right: 30px;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > input.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .input-field.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .input-field.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .field > input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .field > input.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .field > .input-field.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .field > .input-field.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .file-input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .file-input.alternative {
  padding-right: 23px;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .file-input,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .file-input {
  padding-left: 30px;
  padding-right: 10px;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .file-input.alternative,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .file-input.alternative {
  padding-left: 23px;
  padding-right: 0;
}
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.value-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .file-input.cell-editor-field,
.value-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .file-input.cell-editor-field {
  padding-right: 7px;
}
.value-field.has-icon:not(.compact):not(.disabled).focused > .icon::before,
.value-field.has-icon:not(.compact):not(.disabled).focused > .field > .icon::before {
  color: #014786;
}
.value-field.has-icon:not(.compact):not(.disabled).has-error > .icon::before,
.value-field.has-icon:not(.compact):not(.disabled).has-error > .field > .icon::before,
.value-field.has-icon:not(.compact):not(.disabled).has-error > .field > .icon::before {
  color: #FF6060;
}
.value-field.has-icon:not(.compact):not(.disabled).disabled > .icon,
.value-field.has-icon:not(.compact):not(.disabled).disabled > .field > .icon,
.value-field.has-icon:not(.compact):not(.disabled).compact > .icon,
.value-field.has-icon:not(.compact):not(.disabled).compact > .field > .icon {
  display: none;
}
.value-field.has-icon:not(.compact):not(.disabled).alternative.has-error:focus > .field > .icon::before,
.value-field.has-icon:not(.compact):not(.disabled).alternative.has-error.focused > .field > .icon::before {
  color: #FF6060;
}
.value-field.has-icon:not(.compact):not(.disabled) > .icon,
.value-field.has-icon:not(.compact):not(.disabled) > .field > .icon {
  display: block;
}
.value-field.has-icon:not(.compact):not(.disabled) > input,
.value-field.has-icon:not(.compact):not(.disabled) > .input-field,
.value-field.has-icon:not(.compact):not(.disabled) > .field > input,
.value-field.has-icon:not(.compact):not(.disabled) > .field > .input-field,
.value-field.has-icon:not(.compact):not(.disabled) > .file-input {
  padding-right: 30px;
}
.value-field.has-icon:not(.compact):not(.disabled) > input.alternative,
.value-field.has-icon:not(.compact):not(.disabled) > .input-field.alternative,
.value-field.has-icon:not(.compact):not(.disabled) > .field > input.alternative,
.value-field.has-icon:not(.compact):not(.disabled) > .field > .input-field.alternative,
.value-field.has-icon:not(.compact):not(.disabled) > .file-input.alternative {
  padding-right: 23px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.widget-field > .menubar {
  background-color: transparent;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.accordion-field > .accordion {
  /* In fact set by the FormField.less as well,
    /* but since scrollbars are rendered before the field class is set, scrollbar sets position: relative first
    /* which breaks the form field layout */
  position: absolute;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.button-field > .button {
  /* The 18px min-height is required because in Chrome the height of the ::after element
   * is not calculated properly when height is set to 100%. This has the effect that buttons
   * change their size when a button changes its focus state. See ticket 194111.
   */
}
.button-field > .button::after {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 18px;
}
.button-field > .button > .button-label {
  padding: 4px 0;
}
.button-field > .button.selected {
  border-style: inset;
  border-right-color: #CCCCCC;
  border-bottom-color: #CCCCCC;
}
.button-field > .field {
  margin-left: 10px;
}
.button-field > .field.link-button {
  /* add a transparent border to align text with normal buttons which also have a border */
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
}
.logical-grid-layout > .button-field > .field.link-button {
  /* make sure link is centered when button has a fixed height (which is the case with logical grid layout) */
  white-space: nowrap;
}
.logical-grid-layout > .button-field > .field.link-button::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.button-field > .field.link-button > .link.menu-item {
  /* Draw underline in child element, otherwise the position would not be correct in FF */
  text-decoration: none;
  vertical-align: middle;
  color: #014786;
}
.button-field > .field.link-button > .link.menu-item > .text {
  text-decoration: underline;
  overflow: hidden;
  text-overflow: ellipsis;
}
.button-field > .field.link-button > .link.menu-item > .text,
.button-field > .field.link-button > .link.menu-item > .submenu-icon,
.button-field > .field.link-button > .link.menu-item > .icon {
  /* Reset IE hack for link buttons because it breaks ellipsis tooltip */
  pointer-events: auto;
  /* Make sure button is not clickable if it is covered by a glass pane */
}
.glasspane-parent.button-field > .field.link-button > .link.menu-item > .text,
.glasspane-parent.button-field > .field.link-button > .link.menu-item > .submenu-icon,
.glasspane-parent.button-field > .field.link-button > .link.menu-item > .icon,
.glasspane-parent .button-field > .field.link-button > .link.menu-item > .text,
.glasspane-parent .button-field > .field.link-button > .link.menu-item > .submenu-icon,
.glasspane-parent .button-field > .field.link-button > .link.menu-item > .icon {
  pointer-events: none;
}
.button-field > .field.link-button > .link.menu-item:hover {
  color: #0162b9;
}
.button-field > .field.link-button > .link.menu-item:active,
.button-field > .field.link-button > .link.menu-item.active {
  color: #2F3C45;
}
.button-field > .field.link-button > .link.menu-item.disabled {
  color: #999999;
}
.button-field > .field.link-button:focus {
  outline: none;
}
.button-field > .field.link-button:focus > .link.menu-item::after {
  position: absolute;
  content: '';
  left: -3px;
  top: -3px;
  width: calc(100% +  6px);
  height: calc(100% +  6px);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-radius: 3px;
}
.button-field > .field.link-button > .link.menu-item > .icon.image-icon {
  /* override hack in Menu.css */
  top: 0;
}
.button-field > .key-box {
  position: absolute;
  top: 4px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.bean-field {
  /* whole bean-field must be selectable, otherwise focusUtils.js would bail out
     if a user starts a selection on the padding of the .bean-field element and
     not exactly on the .field child element. */
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.bean-field > .field {
  margin-left: 10px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.browser-field.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.browser-field > .field {
  margin-left: 10px;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
}
.browser-field > .field.alternative {
  border-radius: 0;
}
.browser-field > .field > .button {
  display: inline-block;
}
.browser-field > .field > .button,
.browser-field > .field > .alt {
  margin-top: 14px;
  margin-left: 10px;
}
/*
 * Copyright (c) 2010-2019 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.calendar-field > .group-box-body {
  padding-right: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.check-box-field > .field {
  padding: 6px 0;
  outline: none;
  display: flex;
  /* only the label should be clickable, not the whole field */
  /* Same spacings as defined in CellEditorPopup.less, but as margin, not as padding */
}
.check-box-field > .field > .check-box,
.check-box-field > .field > .label {
  color: #333333;
  cursor: pointer;
  vertical-align: middle;
}
.check-box-field > .field > .label {
  padding-top: 2px;
  padding-left: 7px;
  max-width: calc(100% -  18px);
  overflow: hidden;
  text-overflow: ellipsis;
}
.check-box-field > .field > .label.empty {
  /* Make the label invisible if there is no text to not artificially make the check box wider than it should be
      The check box square defines the height. */
  display: none;
}
.check-box-field > .field.has-inner-alignment.halign-left {
  justify-content: flex-start;
}
.check-box-field > .field.has-inner-alignment.halign-center {
  justify-content: center;
}
.check-box-field > .field.has-inner-alignment.halign-right {
  justify-content: flex-end;
}
.check-box-field > .field > .check-box {
  flex: none;
  /* never shrink check-box */
  display: inline-block;
  position: relative;
  width: 18px;
  height: 18px;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  text-align: center;
}
.check-box-field > .field > .check-box:focus {
  outline: none;
  border-color: #014786;
}
.check-box-field > .field > .check-box::before {
  position: absolute;
  display: block;
  line-height: 18px;
  width: 16px;
}
.check-box-field > .field > .check-box.checked::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\E005';
  color: #014786;
  font-size: 11px;
}
.check-box-field > .field > .check-box.undefined::before {
  /* tri-state */
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: calc(100% - 6px);
  height: calc(100% - 6px);
  border-radius: 1px;
  background-color: #014786;
}
.check-box-field > .field > .check-box.disabled {
  background-color: #F6F6F6;
}
.check-box-field > .field > .check-box.disabled::before {
  color: #999999;
}
.check-box-field > .field > .check-box.disabled.undefined::before {
  /* tri-state */
  background-color: #999999;
}
.check-box-field > .field > .cell-editor-field.check-box {
  padding: 0;
  margin: 0 4px 0 8px;
  vertical-align: top;
}
.check-box-field > .field > .cell-editor-field.check-box.last {
  margin-right: 14px !important;
}
.check-box-field > .field.halign-right > .cell-editor-field.check-box {
  margin-right: 8px;
  margin-left: 4px;
}
.check-box-field > .field.halign-center > .cell-editor-field.check-box {
  margin-right: 8px;
}
.check-box-field.cell-editor-form-field > .field {
  /* 1px because cell editor popup starts at the table row which has a 1px border and check box field does not have a border */
  padding-top: 5.5px;
}
.check-box-field.disabled > .field > .check-box {
  cursor: default;
}
.check-box-field.disabled > .field > .label {
  cursor: default;
  color: #666666;
}
.check-box-field.disabled > .field.read-only > .label {
  color: #333333;
}
.checkbox-indentation {
  margin-left: 25px;
}
.radiobutton-group-body > .checkbox-indentation {
  margin-left: 15px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.clipboard-field > .field {
  margin-left: 10px;
  background-color: #E9F0F6;
  padding: 7px 10px;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  white-space: pre-wrap;
}
.clipboard-field > .field > img {
  display: none;
}
.clipboard-form-label.label-field > .field {
  padding-top: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.date-field.focused > .icon.date::before,
.date-field.focused > .field > .icon.date::before {
  color: #014786;
}
.date-field.has-error > .icon.date::before,
.date-field.has-error > .field > .icon.date::before,
.date-field.has-error > .field > .icon.date::before {
  color: #FF6060;
}
.date-field.disabled > .icon.date,
.date-field.disabled > .field > .icon.date,
.date-field.compact > .icon.date,
.date-field.compact > .field > .icon.date {
  display: none;
}
.date-field.alternative.has-error:focus > .field > .icon.date::before,
.date-field.alternative.has-error.focused > .field > .icon.date::before {
  color: #FF6060;
}
.date-field.focused > .icon.time::before,
.date-field.focused > .field > .icon.time::before {
  color: #014786;
}
.date-field.has-error > .icon.time::before,
.date-field.has-error > .field > .icon.time::before,
.date-field.has-error > .field > .icon.time::before {
  color: #FF6060;
}
.date-field.disabled > .icon.time,
.date-field.disabled > .field > .icon.time,
.date-field.compact > .icon.time,
.date-field.compact > .field > .icon.time {
  display: none;
}
.date-field.alternative.has-error:focus > .field > .icon.time::before,
.date-field.alternative.has-error.focused > .field > .icon.time::before {
  color: #FF6060;
}
.date-field > .field > input,
.date-field > .field > .input-field {
  position: absolute;
}
.date-field > .field .icon.date-clear,
.date-field > .field .icon.time-clear {
  cursor: pointer;
  display: none;
}
.date-field > .field .icon.date-clear::before,
.date-field > .field .icon.time-clear::before {
  content: '\E045';
}
.date-field > .field .icon.date::before {
  content: '\E003';
}
.date-field > .field .icon.time::before {
  content: '\E004';
}
.date-field.date-focused > .icon.date::before,
.date-field.date-focused > .field > .icon.date::before,
.date-field.time-focused > .icon.time::before,
.date-field.time-focused > .field > .icon.time::before {
  color: #014786;
}
.date-field:not(.disabled):not(.compact-date) > .field > .icon.date {
  display: block;
}
.date-field:not(.disabled):not(.compact-date) > .field > input.date {
  padding-right: 30px;
}
.date-field:not(.disabled):not(.compact-date) > .field > input.date.alternative {
  padding-right: 23px;
}
.date-field:not(.disabled):not(.compact-time) > .field > .icon.time {
  display: block;
}
.date-field:not(.disabled):not(.compact-time) > .field > input.time {
  padding-right: 30px;
}
.date-field:not(.disabled):not(.compact-time) > .field > input.time.alternative {
  padding-right: 23px;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).focused > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).focused > .icon.date-clear::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).focused > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).focused > .field > .icon.date-clear::before {
  color: #014786;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).has-error > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).has-error > .icon.date-clear::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).has-error > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).has-error > .field > .icon.date-clear::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).has-error > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).has-error > .field > .icon.date-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).disabled > .icon.date-clear,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).disabled > .icon.date-clear,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).disabled > .field > .icon.date-clear,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).disabled > .field > .icon.date-clear,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).compact > .icon.date-clear,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).compact > .icon.date-clear,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).compact > .field > .icon.date-clear,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).compact > .field > .icon.date-clear {
  display: none;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).alternative.has-error:focus > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).alternative.has-error:focus > .field > .icon.date-clear::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).alternative.has-error.focused > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).alternative.has-error.focused > .field > .icon.date-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).date-focused > .icon.date::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).date-focused > .icon.date::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).date-focused > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).date-focused > .field > .icon.date-clear::before {
  color: #014786;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).has-error.date-focused > .icon.date::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).has-error.date-focused > .icon.date::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).has-error.date-focused > .field > .icon.date-clear::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).has-error.date-focused > .field > .icon.date-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).date-focused > .icon.date::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).date-focused > .icon.date::before,
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date).date-focused > .field > .icon.date-clear:hover::before,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date).date-focused > .field > .icon.date-clear:hover::before {
  color: #FE9915;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date) > .field > .date-clear,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date) > .field > .date-clear {
  display: block;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date) > .field > .icon.date,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date) > .field > .icon.date {
  display: none;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date) > .field > input.date,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date) > .field > input.date {
  padding-right: 30px;
}
.date-field.clearable-always.date-has-text:not(.disabled):not(.compact-date) > .field > input.date.alternative,
.date-field.clearable-focused.date-has-text.date-focused:not(.disabled):not(.compact-date) > .field > input.date.alternative {
  padding-right: 23px;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).focused > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).focused > .icon.time-clear::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).focused > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).focused > .field > .icon.time-clear::before {
  color: #014786;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).has-error > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).has-error > .icon.time-clear::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).has-error > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).has-error > .field > .icon.time-clear::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).has-error > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).has-error > .field > .icon.time-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).disabled > .icon.time-clear,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).disabled > .icon.time-clear,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).disabled > .field > .icon.time-clear,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).disabled > .field > .icon.time-clear,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).compact > .icon.time-clear,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).compact > .icon.time-clear,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).compact > .field > .icon.time-clear,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).compact > .field > .icon.time-clear {
  display: none;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).alternative.has-error:focus > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).alternative.has-error:focus > .field > .icon.time-clear::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).alternative.has-error.focused > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).alternative.has-error.focused > .field > .icon.time-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).time-focused > .icon.time::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).time-focused > .icon.time::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).time-focused > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).time-focused > .field > .icon.time-clear::before {
  color: #014786;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).has-error.time-focused > .icon.time::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).has-error.time-focused > .icon.time::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).has-error.time-focused > .field > .icon.time-clear::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).has-error.time-focused > .field > .icon.time-clear::before {
  color: #FF6060;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).time-focused > .icon.time::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).time-focused > .icon.time::before,
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time).time-focused > .field > .icon.time-clear:hover::before,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time).time-focused > .field > .icon.time-clear:hover::before {
  color: #FE9915;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time) > .field > .time-clear,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time) > .field > .time-clear {
  display: block;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time) > .field > .icon.time,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time) > .field > .icon.time {
  display: none;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time) > .field > input.time,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time) > .field > input.time {
  padding-right: 30px;
}
.date-field.clearable-always.time-has-text:not(.disabled):not(.compact-time) > .field > input.time.alternative,
.date-field.clearable-focused.time-has-text.time-focused:not(.disabled):not(.compact-time) > .field > input.time.alternative {
  padding-right: 23px;
}
.date-field > .field {
  /** Prediction input field is in the back of the actual input field -> make actual input field transparent */
}
.date-field > .field > .input-field[placeholder]:empty::before {
  /* placeholder only works for input elements -> this fake placeholder is intended for a before element*/
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
  content: attr(placeholder);
}
.date-field > .field > .input-field[placeholder].disabled:empty::before {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.date-field > .field > .predict {
  color: #999999;
  background-color: #fff;
}
.date-field > .field > .predict.alternative {
  background-color: transparent;
}
.date-field > .field > .predict.has-error {
  background-color: #FEE0E0;
}
.date-field > .field > .predict + input {
  background-color: transparent;
}
.date-field.date-clearable > .field > .icon.date-clear {
  display: block;
}
.date-field.date-clearable > .field > .icon.date {
  display: none;
}
.date-field.time-clearable > .field > .icon.time-clear {
  display: block;
}
.date-field.time-clearable > .field > .icon.time {
  display: none;
}
.date-picker-popup.bottom,
.time-picker-popup.bottom {
  margin-top: 5px;
}
.date-picker-popup.top,
.time-picker-popup.top {
  margin-bottom: 5px;
}
.touch-popup-field.time > .field > input.date,
.touch-popup-field.time > .field > .icon.date,
.touch-popup-field.time > .field > .icon.date-clear {
  display: none !important;
  /* NOSONAR (!important is okay here) */
}
.touch-popup-field.date > .field > input.time,
.touch-popup-field.date > .field > .icon.time,
.touch-popup-field.date > .field > .icon.time-clear {
  display: none !important;
  /* NOSONAR (!important is okay here) */
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.file-chooser-field > .icon {
  cursor: pointer;
}
.file-chooser-field > .icon::before {
  content: '\F15B';
}
.file-chooser-field > .file-input > input {
  display: none;
}
.file-chooser-field > .file-input > .file-input-text {
  overflow-x: hidden;
}
.file-chooser-field > .file-input > .file-input-text[placeholder]:empty::before {
  /* placeholder only works for input elements -> this fake placeholder is intended for a before element*/
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
  content: attr(placeholder);
}
.file-chooser-field > .file-input > .file-input-text[placeholder].disabled:empty::before {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.file-chooser-field > .legacy-upload-form > .legacy-upload-file-input {
  padding: 3px;
  height: 100%;
}
/*
 * Copyright (c) 2010-2019 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.root-group-box {
  /* necessary if dialog gets really small */
  overflow: hidden;
}
.root-group-box > .group-box-body,
.root-group-box > .group-box-title {
  /* group-box-body may be scrollable. */
  /* that's why the body has a padding instead of the root-group-box (to place the scrollbars inside the body) */
  padding-left: 10px;
  padding-right: 20px;
}
.root-group-box > .group-box-body > .scrollbar {
  /* override margin reset from group-box-body (see below) */
}
.root-group-box > .group-box-body > .scrollbar > .scrollbar-thumb.y-axis {
  padding-left: 5px;
}
.root-group-box > .group-box-body > .scrollbar:hover.y-axis > .scrollbar-thumb.y-axis,
.root-group-box > .group-box-body > .scrollbar.y-axis > .scrollbar-thumb.y-axis.scrollbar-thumb-move {
  padding-left: 3px;
}
.group-box > .menubar {
  margin-left: 10px;
  margin-right: 0;
  background-color: inherit;
}
.group-box > .menubar > .menu-button.disabled {
  /* use regular button color since menubar has no color */
  background-color: #F6F6F6;
}
.group-box.collapsed > .menubar {
  display: none;
}
.root-group-box.loading > .loading-indicator,
.group-box.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.root-group-box.loading > .loading-indicator::before,
.group-box.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
.root-group-box.right-padding-invisible > .group-box-body,
.group-box.right-padding-invisible > .group-box-body {
  padding-right: 0;
}
.group-box-title {
  width: calc(100% -  10px);
  margin-top: 8px;
  margin-left: 10px;
  border-bottom: 3px solid #CCCCCC;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 12px 0 12px 0;
  position: relative;
}
.group-box.has-sub-label > .group-box-title {
  padding-bottom: 6px;
}
.group-box-title.has-menubar {
  padding-top: 6.25px;
  padding-bottom: 6.25px;
}
.group-box-title.has-menubar > .menubar {
  display: inline-block;
  border: none;
  background-color: transparent;
}
.group-box-title > .group-box-control {
  display: inline-block;
  color: #333333;
  cursor: pointer;
  /* adjust control position (use absolute positioning, otherwise the layout would be disturbed, */
  /* because the control div is higher than the title span */
  position: absolute;
  padding-left: 15px;
  text-align: center;
  vertical-align: middle;
  width: 25px;
}
.group-box-title > .group-box-control::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  line-height: 15px;
  font-weight: bold;
  content: '\F107';
}
.group-box.collapsed > .group-box-title > .group-box-control::before {
  content: '\E015';
}
.group-box-title > .label {
  display: inline-block;
  vertical-align: middle;
  font-weight: bold;
  color: #333333;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% -  25px);
}
.group-box-title > .sub-label {
  font-size: 10px;
  color: #666666;
  padding-top: 3px;
}
.group-box-title > .status {
  margin-left: 10px;
  padding: 4px 0;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
}
.group-box-title > .status::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}
.group-box.has-tooltip > .group-box-title > .status {
  visibility: visible;
  cursor: pointer;
}
.group-box.has-tooltip > .group-box-title > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.group-box.has-tooltip > .group-box-title > .status:hover::before {
  color: #014786;
}
.group-box.has-tooltip > .group-box-title > .status:active::before {
  color: #014786;
}
.group-box.has-info > .group-box-title > .status {
  visibility: visible;
  cursor: pointer;
}
.group-box.has-info > .group-box-title > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.group-box.has-info > .group-box-title > .status:hover::before {
  color: #014786;
}
.group-box.has-info > .group-box-title > .status:active::before {
  color: #014786;
}
.group-box.has-warning > .group-box-title > .status {
  visibility: visible;
  cursor: pointer;
}
.group-box.has-warning > .group-box-title > .status::before {
  content: '\E001';
  color: #2B73B3;
  font-size: 16px;
}
.group-box.has-warning > .group-box-title > .status:hover::before {
  color: #1561A7;
}
.group-box.has-warning > .group-box-title > .status:active::before {
  color: #1561A7;
}
.group-box.has-error > .group-box-title > .status {
  visibility: visible;
  cursor: pointer;
}
.group-box.has-error > .group-box-title > .status::before {
  content: '\E001';
  color: #FF6060;
  font-size: 16px;
}
.group-box.has-error > .group-box-title > .status:hover::before {
  color: #DF2632;
}
.group-box.has-error > .group-box-title > .status:active::before {
  color: #DF2632;
}
.group-box-title.expandable {
  /* Expansion can also be performed on the title itself */
  cursor: pointer;
}
.group-box-body {
  position: relative;
  padding: 14px 0 16px 0;
  /* position scrollbar as right as possible to prevent overlapping field parts. */
}
.group-box-body.y-padding-invisible {
  padding-top: 0;
  padding-bottom: 0;
}
.collapsed > .group-box-body {
  display: none;
}
.group-box-body > .scrollbar > .scrollbar-thumb.y-axis {
  padding-left: 8px;
}
.group-box-body > .scrollbar:hover.y-axis > .scrollbar-thumb.y-axis,
.group-box-body > .scrollbar.y-axis > .scrollbar-thumb.y-axis.scrollbar-thumb-move {
  padding-left: 6px;
}
.group-box.top-padding-invisible > .group-box-body {
  padding-top: 0;
}
.group-box.bottom-padding-invisible > .group-box-body {
  padding-bottom: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.html-field {
  /* whole html-field must be selectable, otherwise focusUtils.js would bail out
     if a user starts a selection on the padding of the .html-field element and
     not exactly on the .field child element. */
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.html-field > .field {
  margin-left: 10px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.image-field.alternative > label.top {
  /* NOSONAR over qualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.image-field > .field {
  overflow: hidden;
  margin-left: 10px;
}
.image-field > .field > .font-icon {
  font-size: 20px;
}
.image-field > .field.clickable {
  cursor: pointer;
}
.image-field > .field.has-inner-alignment {
  display: flex;
}
.image-field > .field.has-inner-alignment > .font-icon {
  display: flex;
  align-items: inherit;
  justify-content: inherit;
}
.image-field > .field.has-inner-alignment.halign-left {
  justify-content: flex-start;
}
.image-field > .field.has-inner-alignment.halign-center {
  justify-content: center;
}
.image-field > .field.has-inner-alignment.halign-right {
  justify-content: flex-end;
}
.image-field > .field.has-inner-alignment.valign-top {
  align-items: flex-start;
}
.image-field > .field.has-inner-alignment.valign-middle {
  align-items: center;
}
.image-field > .field.has-inner-alignment.valign-bottom {
  align-items: flex-end;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.label-field > .field {
  padding-top: 8px;
  padding-bottom: 8px;
  margin-left: 10px;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  overflow: hidden;
  text-overflow: ellipsis;
}
.label-field > .field[placeholder]:empty::before {
  /* placeholder only works for input elements -> this fake placeholder is intended for a before element*/
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
  content: attr(placeholder);
}
.label-field > .field[placeholder].disabled:empty::before {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.label-field > .field.has-inner-alignment.halign-left {
  text-align: left;
}
.label-field > .field.has-inner-alignment.halign-center {
  text-align: center;
}
.label-field > .field.has-inner-alignment.halign-right {
  text-align: right;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.list-box.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.list-box > .field > .table {
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  overflow: hidden;
  /* necessary due to rounded borders and background color*/
}
.list-box > .field > .table.alternative {
  border-radius: 0;
}
.list-box > .field > .table:focus,
.list-box > .field > .table.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.list-box > .field > .table.ie {
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.mode-selector-field > .mode-selector {
  margin-left: 10px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.number-field > .field.has-inner-alignment.halign-left {
  text-align: left;
}
.number-field > .field.has-inner-alignment.halign-center {
  text-align: center;
}
.number-field > .field.has-inner-alignment.halign-right {
  text-align: right;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.planner-field.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.planner-field > .planner {
  margin-left: 10px;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
}
.planner-field > .planner.alternative {
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.radio-button > .field {
  position: relative;
  padding: 6px 0;
  margin-left: 10px;
  outline: none;
  overflow: hidden;
  display: flex;
}
.radio-button > .field > .radio-button-circle,
.radio-button > .field > .label,
.radio-button > .field > .icon {
  /* only the label should be clickable, not the whole field */
  cursor: pointer;
  vertical-align: middle;
}
.radio-button > .field > .label {
  color: #333333;
  padding-top: 2px;
  padding-left: 7px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.radio-button > .field > .label.empty {
  /* Make the label invisible if there is no text to not artificially make the button wider than it should be
      Compared to the Button.js the circle defines the height */
  display: none;
}
.radio-button > .field > .icon {
  padding-left: 7px;
}
.radio-button > .field > .radio-button-circle {
  width: 18px;
  height: 18px;
  min-width: 18px;
  min-height: 18px;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-radius: 50%;
  text-align: center;
  position: relative;
}
.radio-button > .field > .radio-button-circle:focus {
  border-color: #014786;
  outline: none;
}
.radio-button > .field > .radio-button-circle.checked::before {
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
  width: calc(100% -  8px);
  height: calc(100% -  8px);
  box-shadow: 0 0 1px 0 #014786;
  background-color: #014786;
  border-radius: 50%;
}
.radio-button > .field > .radio-button-circle.disabled {
  background-color: #F6F6F6;
  cursor: default;
}
.radio-button > .field > .radio-button-circle.disabled.checked::before {
  background-color: #999999;
}
.radio-button.disabled > .field > .label,
.radio-button.disabled > .field > .icon {
  cursor: default;
  color: #666666;
}
.radiobutton-indentation {
  margin-left: 25px;
}
.radiobutton-group-body > .radiobutton-indentation {
  margin-left: 15px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.radiobutton-group-body > .radio-button > .field {
  /* radio button group has a mandatory indicator, no need to create a margin */
  margin-left: 0;
}
.radiobutton-group-body.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.radiobutton-group-body.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.dropdown-field > .icon {
  cursor: pointer;
}
.dropdown-field > .icon::before {
  content: '\F107';
  font-size: 16px;
}
.dropdown-field.popup-open > .icon::before {
  content: '\F106';
}
.dropdown-field > .field {
  cursor: pointer;
}
.dropdown-field > .field.disabled {
  cursor: default;
}
.proposal-field > .icon::before {
  content: '\E04F';
}
.smart-field {
  /* Multiline SmartField */
  /* DIV below the smart field containing the additional lines */
}
.smart-field > .icon::before,
.smart-field > .field > .icon::before {
  content: '\E042';
}
.smart-field.popup-open > .multiline.field.focused {
  box-shadow: none;
}
.smart-field.popup-open > .field > .multiline-input.has-error:focus {
  border-bottom-color: #FF6060;
}
.smart-field.popup-open > .field > .multiline-input:focus {
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-bottom-color: #014786;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}
.smart-field.popup-open > .field > .multiline-input.alternative:focus {
  box-shadow: none;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.smart-field.popup-open > .field > .multiline-lines.focused {
  border-color: #CCCCCC;
}
.smart-field.has-error > .multiline.field.focused {
  box-shadow: 0 0 5px #FF6060;
}
.smart-field > .multiline.field.focused {
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.smart-field > .field > .multiline-input {
  border-bottom-color: #CCCCCC;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  width: 100%;
  padding-left: 10px;
}
.smart-field > .field > .multiline-input:focus {
  box-shadow: none;
}
.smart-field > .field > .multiline-input.has-error:focus {
  border-bottom-color: #FF6060;
}
.smart-field > .field > .multiline-input.alternative,
.smart-field > .field > .multiline-input.read-only {
  border-bottom-color: #CCCCCC;
}
.smart-field > .field > .multiline-input.alternative.has-error,
.smart-field > .field > .multiline-input.read-only.has-error {
  border-bottom-color: #FF6060;
}
.smart-field > .field > .multiline-input.alternative {
  padding-left: 0;
  padding-right: 0;
}
.smart-field > .field > .multiline-input.alternative:focus {
  border-bottom-color: #014786;
}
.smart-field > .field > .multiline-input.alternative.has-error {
  border-bottom-color: #FF6060;
}
.smart-field > .field > .multiline-lines {
  background-color: #fff;
  border: solid 1px #CCCCCC;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
  border-top: none;
  padding: 3px 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.smart-field > .field > .multiline-lines.disabled {
  background-color: #F6F6F6;
}
.smart-field > .field > .multiline-lines.focused {
  border-color: #014786;
}
.smart-field > .field > .multiline-lines.has-error {
  border-color: #FF6060;
}
.smart-field.alternative > .field > .multiline-lines,
.smart-field.read-only > .field > .multiline-lines {
  border: 0;
  padding-top: 6px;
}
.smart-field.alternative > .field > .multiline-lines.disabled,
.smart-field.read-only > .field > .multiline-lines.disabled {
  color: #999999;
  background-color: transparent;
}
.smart-field.alternative > .field > .multiline-lines {
  padding-left: 0;
  padding-right: 0;
}
.smart-field.disabled.read-only > .field > .multiline-lines {
  color: #333333;
}
.dropdown-field > .input-field[placeholder]:empty::before,
.proposal-field > .input-field[placeholder]:empty::before,
.smart-field > .input-field[placeholder]:empty::before,
.dropdown-field > .multiline > .input-field[placeholder]:empty::before,
.proposal-field > .multiline > .input-field[placeholder]:empty::before,
.smart-field > .multiline > .input-field[placeholder]:empty::before {
  /* placeholder only works for input elements -> this fake placeholder is intended for a before element*/
  color: #999999;
  opacity: 1;
  /* necessary for firefox */
  content: attr(placeholder);
}
.dropdown-field > .input-field[placeholder].disabled:empty::before,
.proposal-field > .input-field[placeholder].disabled:empty::before,
.smart-field > .input-field[placeholder].disabled:empty::before,
.dropdown-field > .multiline > .input-field[placeholder].disabled:empty::before,
.proposal-field > .multiline > .input-field[placeholder].disabled:empty::before,
.smart-field > .multiline > .input-field[placeholder].disabled:empty::before {
  /* Fade a little to make it distinguishable from real text. Don't use opacity here because it affects background as well (IE). */
  color: rgba(153, 153, 153, 0.7);
}
.dropdown-field.loading > .icon,
.proposal-field.loading > .icon,
.smart-field.loading > .icon {
  -webkit-animation: pulsate-in-out 2.2s ease-in-out infinite;
  -moz-animation: pulsate-in-out 2.2s ease-in-out infinite;
  -o-animation: pulsate-in-out 2.2s ease-in-out infinite;
  animation: pulsate-in-out 2.2s ease-in-out infinite;
}
.dropdown-field > .field.halign-left,
.proposal-field > .field.halign-left,
.smart-field > .field.halign-left,
.dropdown-field > .field.halign-left > .multiline-input,
.proposal-field > .field.halign-left > .multiline-input,
.smart-field > .field.halign-left > .multiline-input {
  text-align: left;
}
.dropdown-field > .field.halign-center,
.proposal-field > .field.halign-center,
.smart-field > .field.halign-center,
.dropdown-field > .field.halign-center > .multiline-input,
.proposal-field > .field.halign-center > .multiline-input,
.smart-field > .field.halign-center > .multiline-input {
  text-align: center;
}
.dropdown-field > .field.halign-right,
.proposal-field > .field.halign-right,
.smart-field > .field.halign-right,
.dropdown-field > .field.halign-right > .multiline-input,
.proposal-field > .field.halign-right > .multiline-input,
.smart-field > .field.halign-right > .multiline-input {
  text-align: right;
}
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field {
  padding-left: 0;
  padding-right: 30px;
}
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.alternative,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.alternative,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.alternative,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.alternative {
  padding-left: 0;
  padding-right: 23px;
}
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input.cell-editor-field,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .input-field.cell-editor-field,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > input.cell-editor-field,
.dropdown-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.proposal-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.smart-field.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.dropdown-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.proposal-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field,
.smart-field.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > .field > .input-field.cell-editor-field {
  padding-right: 30px;
}
.dropdown-field.halign-right:not(.disabled) > .field > .multiline-lines,
.proposal-field.halign-right:not(.disabled) > .field > .multiline-lines,
.smart-field.halign-right:not(.disabled) > .field > .multiline-lines {
  padding-right: 30px;
}
.dropdown-field.alternative.halign-right:not(.disabled) > .field > .multiline-lines,
.proposal-field.alternative.halign-right:not(.disabled) > .field > .multiline-lines,
.smart-field.alternative.halign-right:not(.disabled) > .field > .multiline-lines {
  padding-right: 23px;
}
.dropdown-field.halign-right > .clear-icon,
.proposal-field.halign-right > .clear-icon,
.smart-field.halign-right > .clear-icon,
.dropdown-field.halign-right > .field > .clear-icon,
.proposal-field.halign-right > .field > .clear-icon,
.smart-field.halign-right > .field > .clear-icon {
  padding-left: 0;
  padding-right: 10px;
}
.dropdown-field.alternative.halign-right > .clear-icon,
.proposal-field.alternative.halign-right > .clear-icon,
.smart-field.alternative.halign-right > .clear-icon,
.dropdown-field.alternative.halign-right > .field > .clear-icon,
.proposal-field.alternative.halign-right > .field > .clear-icon,
.smart-field.alternative.halign-right > .field > .clear-icon {
  padding-left: 0;
  padding-right: 4px;
}
.dropdown-field-popup,
.smart-field-popup,
.proposal-field-popup {
  position: absolute;
  border: solid 1px #014786;
  border-radius: 3px;
  overflow: hidden;
  background-color: #fff;
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.dropdown-field-popup.bottom,
.smart-field-popup.bottom,
.proposal-field-popup.bottom {
  margin-top: 5px;
}
.dropdown-field-popup.top,
.smart-field-popup.top,
.proposal-field-popup.top {
  margin-bottom: 5px;
}
.dropdown-field-popup.touch,
.smart-field-popup.touch,
.proposal-field-popup.touch {
  background-color: #EFEFEF;
}
.dropdown-field-popup.alternative,
.smart-field-popup.alternative,
.proposal-field-popup.alternative {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
.proposal-chooser > .active-filter {
  padding-left: 7px;
  padding-right: 7px;
  position: absolute;
}
.proposal-chooser > .status {
  padding: 7px 8px 0 10px;
}
.proposal-chooser > .active-filter,
.proposal-chooser > .status {
  background-color: #EFEFEF;
  border-top: solid 1px #014786;
  height: 30px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.proposal-chooser.empty > .active-filter,
.proposal-chooser.empty > .status {
  border-top: 0;
}
.proposal-chooser > .active-filter > .radiobutton-group {
  width: 100%;
  height: 30px;
}
.proposal-chooser > .active-filter > .radiobutton-group > .radiobutton-group-body {
  width: 100%;
  height: 30px;
}
.proposal-chooser > .active-filter > .radiobutton-group > .radiobutton-group-body > .radio-button {
  position: relative;
  display: inline-block;
  margin-right: 10px;
}
.proposal-chooser > .table {
  /* Avoids a bug where the table is overlapping the status-field by 1 pixel */
  overflow: hidden;
}
.proposal-chooser > .table > .table-data > .table-row {
  /* Use text-field-padding-x for the first cell, so the text in the
       * table is exactly left-aligned with the text in the text-field above */
}
.proposal-chooser > .table > .table-data > .table-row > .table-cell.first {
  padding-left: 10px;
}
.proposal-chooser > .table > .table-data > .table-row.selected {
  background-color: #E9F0F6;
  border-color: #014786;
}
.proposal-chooser:not(.touch) > .table > .table-data > .table-row.selected.last {
  /* Change color of last element to avoid double-border effect */
  border-bottom-color: #E9F0F6;
}
.proposal-chooser:not(.touch) > .table > .table-data > .table-row.last {
  border-bottom-color: transparent;
}
.proposal-chooser > .tree > .tree-data > .tree-node.selected {
  /* tree is not focused but should look as if it were */
  background-color: #E9F0F6;
  border-color: #014786;
}
.proposal-chooser > .tree > .tree-data > .tree-node.selected.last {
  /* Change color of last element to avoid double-border effect */
  border-bottom-color: #E9F0F6;
}
.proposal-chooser > .tree > .tree-data > .tree-node.first {
  border-top-color: #F6F6F6;
}
.proposal-chooser > .tree > .tree-data > .tree-node.last {
  border-bottom-color: transparent;
}
.proposal-chooser > .tree > .tree-data > .tree-node.inactive {
  font-style: italic;
}
.status > .ellipsis {
  padding-left: 3px;
}
.animate-dot {
  position: relative;
  -webkit-animation-name: animateDot;
  -moz-animation-name: animateDot;
  -o-animation-name: animateDot;
  animation-name: animateDot;
  -webkit-animation-duration: 1650ms;
  -moz-animation-duration: 1650ms;
  -o-animation-duration: 1650ms;
  animation-duration: 1650ms;
  -webkit-animation-iteration-count: infinite;
  -moz-animation-iteration-count: infinite;
  -o-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}
.delay-0 {
  -webkit-animation-delay: 0ms;
  -moz-animation-delay: 0ms;
  -o-animation-delay: 0ms;
  animation-delay: 0ms;
}
.delay-1 {
  -webkit-animation-delay: 200ms;
  -moz-animation-delay: 200ms;
  -o-animation-delay: 200ms;
  animation-delay: 200ms;
}
.delay-2 {
  -webkit-animation-delay: 400ms;
  -moz-animation-delay: 400ms;
  -o-animation-delay: 400ms;
  animation-delay: 400ms;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.dropdown-field-popup.animate-open,
.smart-field-popup.animate-open,
.proposal-field-popup.animate-open {
  /* Changed initial transform from 0 to 0.5 because in Chrome browser v72 on zoom levels > 100%
     * the proposal-chooser popup produced an accidental flickering animation where the proposal table
     * jumped a few pixels to the left. With 0.5 this does not happen - only god knows why. See #241249.
     */
  -webkit-transform: scaleY(0.5);
  -ms-transform: scaleY(0.5);
  transform: scaleY(0.5);
  -webkit-animation-name: grow-y;
  -moz-animation-name: grow-y;
  -o-animation-name: grow-y;
  animation-name: grow-y;
  -webkit-animation-duration: 0.125s;
  -moz-animation-duration: 0.125s;
  -o-animation-duration: 0.125s;
  animation-duration: 0.125s;
}
.dropdown-field-popup.animate-open.bottom,
.smart-field-popup.animate-open.bottom,
.proposal-field-popup.animate-open.bottom {
  -webkit-transform-origin: top;
  -moz-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
}
.dropdown-field-popup.animate-open.top,
.smart-field-popup.animate-open.top,
.proposal-field-popup.animate-open.top {
  -webkit-transform-origin: bottom;
  -moz-transform-origin: bottom;
  -ms-transform-origin: bottom;
  transform-origin: bottom;
}
.dropdown-field-popup.animate-remove,
.smart-field-popup.animate-remove,
.proposal-field-popup.animate-remove {
  -webkit-animation-name: shrink-y;
  -moz-animation-name: shrink-y;
  -o-animation-name: shrink-y;
  animation-name: shrink-y;
  -webkit-animation-duration: 0.125s;
  -moz-animation-duration: 0.125s;
  -o-animation-duration: 0.125s;
  animation-duration: 0.125s;
}
.dropdown-field-popup.animate-remove.bottom,
.smart-field-popup.animate-remove.bottom,
.proposal-field-popup.animate-remove.bottom {
  -webkit-transform-origin: top;
  -moz-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
}
.dropdown-field-popup.animate-remove.top,
.smart-field-popup.animate-remove.top,
.proposal-field-popup.animate-remove.top {
  -webkit-transform-origin: bottom;
  -moz-transform-origin: bottom;
  -ms-transform-origin: bottom;
  transform-origin: bottom;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.split-box > .split-area > .first-field,
.split-box > .split-area > .second-field {
  overflow: hidden;
  position: absolute;
}
.split-box > .split-area > .first-field.collapsed,
.split-box > .split-area > .second-field.collapsed {
  display: none;
}
.split-box > .split-area > .splitter {
  position: absolute;
  background-color: #CCCCCC;
  background-clip: content-box;
  /* don't color padding */
}
.split-box > .split-area > .splitter:not(.disabled):not(.dragging):hover {
  background-color: #014786;
}
.split-box > .split-area > .splitter.x-axis {
  height: 100%;
  width: 31px;
  padding-left: 19px;
  padding-right: 9px;
  cursor: col-resize;
}
.split-box > .split-area > .splitter.y-axis {
  margin-left: 10px;
  width: calc(100% -  10px);
  height: 15px;
  padding-top: 6px;
  padding-bottom: 6px;
  cursor: row-resize;
}
.split-box > .split-area > .splitter.dragging {
  opacity: 0.25;
}
.split-box > .split-area > .splitter.disabled {
  cursor: default;
}
.split-box > .split-area > .temp-splitter {
  position: absolute;
  z-index: 2;
}
.split-box > .split-area > .temp-splitter.x-axis {
  height: 100%;
  width: 1px;
  border-left: 1px dashed #014786;
  margin-left: 20px;
  margin-right: 10px;
}
.split-box > .split-area > .temp-splitter.y-axis {
  margin-left: 10px;
  width: calc(100% -  10px);
  height: 1px;
  border-top: 1px dashed #014786;
  margin-top: 7px;
  margin-bottom: 7px;
}
.split-box > .collapse-handle.right-aligned {
  /* align with status icons */
  right: 3px;
}
.split-box-collapse-key-box {
  margin-top: -6px;
  margin-left: 4px;
}
.split-box-collapse-key-box.left {
  margin-top: 6px;
  margin-left: 4px;
}
.split-box-collapse-key-box.right {
  margin-top: 6px;
  margin-left: -4px;
}
.split-box:not(.single-field):not(.second-field-collapsed) > .split-area > .first-field.x-axis {
  margin-right: 31px;
}
.split-box:not(.single-field):not(.second-field-collapsed) > .split-area > .first-field.y-axis {
  margin-bottom: 15px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.string-field {
  /* adjust paddings in case of both icons (icon and clear-icon) are visible */
}
.string-field > textarea.ie9 {
  /* NOSONAR overqualify by purpose to only modify textareas on IE 9*/
  width: 100%;
}
.string-field.multiline > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.string-field > .field.has-inner-alignment.halign-left {
  text-align: left;
}
.string-field > .field.has-inner-alignment.halign-center {
  text-align: center;
}
.string-field > .field.has-inner-alignment.halign-right {
  text-align: right;
}
.string-field.has-icon.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > input,
.string-field.has-icon.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > input {
  padding-right: 50px;
}
.string-field.has-icon.clearable-always.has-text:not(.loading):not(.disabled):not(.compact).halign-right > input,
.string-field.has-icon.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact).halign-right > input {
  padding-left: 25px;
  padding-right: 25px;
}
.string-field.has-icon.clearable-always.has-text:not(.loading):not(.disabled):not(.compact) > .icon,
.string-field.has-icon.clearable-focused.has-text.focused:not(.loading):not(.disabled):not(.compact) > .icon {
  display: block;
}
.string-field.has-icon > .icon {
  cursor: pointer;
}
.string-field.has-icon > .icon::before {
  content: '\F061';
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* arrow-width / 2 */
.tab-box > .status {
  margin-bottom: 3px;
}
.tab-box-header {
  margin-top: 8px;
  margin-left: 10px;
  white-space: nowrap;
  position: relative;
  margin-bottom: 3px;
}
.tab-box-header > .tab-box-header-bottom-border {
  position: absolute;
  left: 0;
  bottom: 0;
  margin-bottom: -3px;
  width: 100%;
  height: 3px;
  background-color: #CCCCCC;
}
.tab-box-header > .tab-area {
  position: absolute;
}
.tab-box-header > .tab-area::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.tab-box-header > .tab-area > .selection-marker {
  position: absolute;
  bottom: 0;
  margin-bottom: -3px;
  height: 3px;
  background-color: #014786;
  transition: left 0.3s, width 0.3s;
}
.tab-box-header > .tab-area.focused > .tab-item.selected {
  color: #2B73B3;
}
.tab-box-header > .tab-area.focused > .selection-marker {
  background: #2B73B3;
}
.tab-box-header > .tab-area > .tab-item > .title > .sub-label {
  display: none;
}
.tab-box-header > .tab-area.has-sub-label > .tab-item > .title > .sub-label {
  display: block;
}
.tab-box-header > .tab-area.has-sub-label > .overflow-tab-item.menu-item {
  padding-top: 12px;
  padding-bottom: 20px;
}
.tab-box-header > .tab-area.spread-even {
  width: 100%;
  display: flex;
}
.tab-box-header > .tab-area.spread-even > .tab-item {
  flex-grow: 1;
  flex-basis: 0;
  text-align: center;
}
.tab-box-header > .tab-area.spread-even > .tab-item.first {
  padding-left: 20px;
}
.tab-box-header > .menubar {
  position: absolute;
  background-color: inherit;
  border-bottom: none;
  padding-left: 12px;
}
.tab-box-header > .menubar > .menu-button.disabled {
  /* use regular button color since menubar has no color */
  background-color: #F6F6F6;
}
.tab-box-header > .status {
  position: absolute;
  margin-left: 10px;
  text-align: center;
}
.tab-box-header > .status::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}
.tab-box.has-tooltip > .tab-box-header > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-box.has-tooltip > .tab-box-header > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.tab-box.has-tooltip > .tab-box-header > .status:hover::before {
  color: #014786;
}
.tab-box.has-tooltip > .tab-box-header > .status:active::before {
  color: #014786;
}
.tab-box.has-info > .tab-box-header > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-box.has-info > .tab-box-header > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.tab-box.has-info > .tab-box-header > .status:hover::before {
  color: #014786;
}
.tab-box.has-info > .tab-box-header > .status:active::before {
  color: #014786;
}
.tab-box.has-warning > .tab-box-header > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-box.has-warning > .tab-box-header > .status::before {
  content: '\E001';
  color: #2B73B3;
  font-size: 16px;
}
.tab-box.has-warning > .tab-box-header > .status:hover::before {
  color: #1561A7;
}
.tab-box.has-warning > .tab-box-header > .status:active::before {
  color: #1561A7;
}
.tab-box.has-error > .tab-box-header > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-box.has-error > .tab-box-header > .status::before {
  content: '\E001';
  color: #FF6060;
  font-size: 16px;
}
.tab-box.has-error > .tab-box-header > .status:hover::before {
  color: #DF2632;
}
.tab-box.has-error > .tab-box-header > .status:active::before {
  color: #DF2632;
}
.tab-item {
  position: relative;
  display: inline-block;
  vertical-align: bottom;
  font-family: Arial, sans-serif;
  font-weight: bold;
  font-size: 13px;
  color: #333333;
  background-color: transparent;
  padding: 0 20px;
  cursor: pointer;
}
.tab-item::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 3px;
  margin-bottom: -3px;
  display: none;
}
.tab-item.first {
  padding-left: 0;
}
.tab-item.overflown {
  display: none;
}
.tab-item.selected {
  color: #014786;
}
.tab-item.marked::after {
  display: block;
  background-color: #999999;
}
.tab-item:hover {
  color: #014786;
}
.tab-item:active {
  color: #014786;
}
.tab-item:focus {
  outline: none;
}
.tab-item > .title {
  display: inline-block;
  vertical-align: middle;
  padding: 12px 0 12px;
}
.tab-item > .title > .label {
  vertical-align: middle;
}
.tab-item > .title > .sub-label {
  padding-top: 3px;
  font-size: 10px;
  color: #666666;
}
.tab-area.has-sub-label > .tab-item > .title {
  padding-bottom: 6px;
}
.tab-item > .status {
  display: inline-block;
  vertical-align: middle;
  margin-left: 10px;
  text-align: center;
}
.tab-item > .status::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}
.tab-item.has-tooltip,
.tab-item.has-info,
.tab-item.has-warning,
.tab-item.has-error {
  padding-right: 10px;
}
.tab-item.has-tooltip > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-item.has-tooltip > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.tab-item.has-tooltip > .status:hover::before {
  color: #014786;
}
.tab-item.has-tooltip > .status:active::before {
  color: #014786;
}
.tab-item.has-info > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-item.has-info > .status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
.tab-item.has-info > .status:hover::before {
  color: #014786;
}
.tab-item.has-info > .status:active::before {
  color: #014786;
}
.tab-item.has-warning > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-item.has-warning > .status::before {
  content: '\E001';
  color: #2B73B3;
  font-size: 16px;
}
.tab-item.has-warning > .status:hover::before {
  color: #1561A7;
}
.tab-item.has-warning > .status:active::before {
  color: #1561A7;
}
.tab-item.has-error > .status {
  visibility: visible;
  cursor: pointer;
}
.tab-item.has-error > .status::before {
  content: '\E001';
  color: #FF6060;
  font-size: 16px;
}
.tab-item.has-error > .status:hover::before {
  color: #DF2632;
}
.tab-item.has-error > .status:active::before {
  color: #DF2632;
}
.overflow-tab-item.menu-item {
  padding: 12px 12px 12px;
  /* Reduce padding a little and compensate with margin to make popup header a little smaller */
  margin: 0 8px;
  font-weight: bold;
  /* This makes sure the overflow menu item is not larger than a tab item (especially if a larger font is used).
  It also prevents the popup from jumping. */
  line-height: 1;
}
.overflow-tab-item.menu-item::before {
  display: none;
}
.overflow-tab-item.menu-item > .text {
  padding: 0;
}
.overflow-tab-item.menu-item > .submenu-icon {
  padding-left: 4px;
  line-height: 15px;
}
.overflow-tab-item.menu-item:focus {
  outline: none;
  color: #014786;
}
.overflow-tab-item.menu-item:focus > .text {
  text-decoration: underline;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tag-chooser-popup {
  position: absolute;
  border: solid 1px #014786;
  border-radius: 3px;
  overflow: hidden;
  background-color: #fff;
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  min-width: 150px;
  max-width: 250px;
}
.tag-chooser-popup.bottom {
  margin-top: 5px;
}
.tag-chooser-popup.top {
  margin-bottom: 5px;
}
.tag-chooser-popup.touch {
  background-color: #EFEFEF;
}
.tag-chooser-popup.alternative {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tag-field.focused > .field {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.tag-field.focused > .field.alternative {
  border-bottom-color: #014786;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
.tag-field > .field {
  background-color: #fff;
  color: #333333;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  padding: 7px 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  user-select: none;
  padding: 0 0 0 3px;
}
.tag-field > .field.disabled {
  background-color: #F6F6F6;
  color: #666666;
}
.tag-field > .field:focus,
.tag-field > .field.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.tag-field > .field.has-error {
  border-color: #FF6060;
  background-color: #FEE0E0;
}
.tag-field > .field.has-error:focus,
.tag-field > .field.has-error.focused {
  box-shadow: 0 0 5px #FF6060;
}
.tag-field > .field.read-only {
  background-color: transparent;
  border-color: transparent;
  border-bottom: dashed 1px #CCCCCC;
  color: #333333;
}
.tag-field > .field.alternative {
  background-color: transparent;
  border-color: transparent;
  border-bottom-color: #CCCCCC;
  border-radius: 0;
  border-left-width: 0;
  border-right-width: 0;
  padding-left: 0;
  padding-right: 0;
}
.tag-field > .field.alternative.disabled {
  color: #999999;
  border-bottom-style: dashed;
  border-bottom-color: #CCCCCC;
}
.tag-field > .field.alternative:focus,
.tag-field > .field.alternative.focused {
  color: #014786;
  border-bottom-color: #014786;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
.tag-field > .field.alternative.has-error {
  color: #FF6060;
  border-bottom-color: #FF6060;
}
.tag-field > .field.alternative.has-error:focus,
.tag-field > .field.alternative.has-error.focused {
  border-bottom-color: #FF6060;
  border-bottom-width: 2px;
  box-shadow: none;
  padding-bottom: 0;
}
.tag-field > .field.alternative.read-only {
  color: #333333;
}
.tag-field > .field:not(.multiline) {
  white-space: nowrap;
}
.tag-field > .field > .tag-bar {
  display: inline-block;
}
.tag-field > .field > input {
  border: none;
  padding: 0 3px;
  height: 100%;
  background-color: transparent;
}
.tag-field > .field > input.fullwidth {
  width: 100%;
  padding: 0 0 0 7px;
}
.tag-field > .field > input.fullwidth.alternative {
  padding-left: 0;
  padding-right: 0;
}
.tag-field > .field > input.focused,
.tag-field > .field > input:focus {
  box-shadow: none;
}
.tag-field > .field > input.has-error {
  background-color: transparent;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-field.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.table-field > .table {
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  overflow: hidden;
  /* necessary due to rounded borders and background color*/
}
.table-field > .table.alternative {
  border-radius: 0;
}
.table-field > .table:focus,
.table-field > .table.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.table-field > .table.ie {
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tree-field.alternative > label.top {
  /* NOSONAR overqualify by purpose to make it more specific than default rule in FormField.less */
  padding-bottom: 4px;
}
.tree-field > .tree {
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  overflow: hidden;
  /* necessary due to rounded borders and background color*/
}
.tree-field > .tree.alternative {
  border-radius: 0;
}
.tree-field > .tree:focus,
.tree-field > .tree.focused {
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
.tree-field > .tree.ie {
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.wizard-steps {
  overflow: hidden;
  margin-left: 10px;
  margin-right: 0;
}
.wizard-steps-body {
  height: 50px;
  overflow: hidden;
  white-space: nowrap;
  /* Allows the last wizard-step to be 100% without line break */
  border-bottom: 1px solid #CCCCCC;
  /* This creates a new stacking context: */
  position: relative;
  z-index: 0;
}
.wizard-step {
  display: inline-block;
  height: 49px;
  line-height: 49px;
  position: relative;
  /* Spacing */
  padding-left: 15px;
  padding-right: 15px;
  /* Step content */
  /* Hover state */
  /* Step types */
}
.wizard-step > .wizard-step-content {
  display: inline-table;
  line-height: normal;
  vertical-align: middle;
  table-layout: fixed;
  max-width: 200px;
  min-height: 30px;
}
.wizard-step > .wizard-step-content > .wizard-step-content-icon-container {
  vertical-align: middle;
  display: inline-block;
  width: 33px;
  height: 33px;
  border-radius: 50%;
  padding: 4px;
  margin-right: 12px;
  font-weight: bold;
}
.wizard-step > .wizard-step-content > .wizard-step-content-icon-container > .wizard-step-content-icon {
  text-align: center;
  height: 100%;
  width: 100%;
  border-radius: 50%;
  border: 1px solid;
  line-height: 23px;
}
.wizard-step > .wizard-step-content > .wizard-step-content-text {
  vertical-align: middle;
  display: inline-block;
}
.wizard-step > .wizard-step-content > .wizard-step-content-text > .wizard-step-title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: bold;
}
.wizard-step > .wizard-step-content > .wizard-step-content-text > .wizard-step-sub-title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 12px;
}
.wizard-step.first {
  /* 3px = box-shadow width */
  padding-left: 3px;
}
.wizard-step.last {
  padding-right: 3px;
}
.wizard-step.last > .wizard-step-content {
  max-width: none;
}
.wizard-step.action-enabled:hover {
  cursor: pointer;
}
.wizard-step.action-enabled:hover > .wizard-step-content > .wizard-step-content-text > .wizard-step-title {
  color: #014786;
}
.wizard-step.active-step > .wizard-step-content > .wizard-step-content-icon-container {
  padding: 3px;
  border: 1px solid #014786;
  box-shadow: 0 0 3px #014786;
}
.wizard-step.disabled {
  color: #999999;
}
.wizard-step.disabled > .wizard-step-content > .wizard-step-content-icon-container > .wizard-step-content-icon {
  background-color: inherit;
  color: #999999;
  border-color: #999999;
}
.wizard-step:not(.disabled).active-step {
  color: #014786;
}
.wizard-step:not(.disabled).active-step > .wizard-step-content > .wizard-step-content-icon-container > .wizard-step-content-icon {
  background-color: #014786;
  color: #fff;
  border-color: #014786;
}
.wizard-step:not(.disabled).before-active > .wizard-step-content > .wizard-step-content-icon-container > .wizard-step-content-icon {
  background-color: inherit;
  color: #2F3C45;
  border-color: #2F3C45;
}
.wizard-step:not(.disabled).after-active > .wizard-step-content > .wizard-step-content-icon-container > .wizard-step-content-icon {
  background-color: inherit;
  color: #2F3C45;
  border-color: #2F3C45;
}
.wizard-steps > .scrollbar > .scrollbar-thumb.x-axis {
  padding-top: 6px;
}
.wizard-steps > .scrollbar:hover.x-axis > .scrollbar-thumb.x-axis,
.wizard-steps > .scrollbar.x-axis > .scrollbar-thumb.x-axis.scrollbar-thumb-move {
  padding-top: 4px;
}
.wizard-step-separator {
  display: inline-block;
  max-height: 48px;
  position: relative;
  /* Spacing */
  padding-left: 15px;
  padding-right: 15px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 28px;
  color: #999999;
  vertical-align: middle;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.wrapped-form-field > .form {
  background-color: transparent;
  /* Reset padding set in GroupBox.css */
  /* Reset margin set in GroupBox.css */
  /* Reset values set in MenuBar.css */
}
.wrapped-form-field > .form > .root-group-box > .group-box-body,
.wrapped-form-field > .form > .root-group-box > .group-box-title {
  padding-left: 0;
  padding-right: 0;
}
.wrapped-form-field > .form > .root-group-box {
  overflow: visible;
  /* allow overflow for the root-group-box for wrapped forms */
}
.wrapped-form-field > .form > .root-group-box > .group-box-body > .scrollbar {
  /* position scrollbar as right as possible to prevent overlapping field parts. */
}
.wrapped-form-field > .form > .root-group-box > .group-box-body > .scrollbar > .scrollbar-thumb.y-axis {
  padding-left: 8px;
}
.wrapped-form-field > .form > .root-group-box > .group-box-body > .scrollbar:hover.y-axis > .scrollbar-thumb.y-axis,
.wrapped-form-field > .form > .root-group-box > .group-box-body > .scrollbar.y-axis > .scrollbar-thumb.y-axis.scrollbar-thumb-move {
  padding-left: 6px;
}
.wrapped-form-field > .form > .root-group-box > .menubar {
  margin-left: 10px;
  margin-right: 0;
  padding-left: 0;
  background-color: inherit;
}
.wrapped-form-field > .form > .root-group-box > .menubar > .menu-button.disabled {
  /* use regular button color since menubar has no color */
  background-color: #F6F6F6;
}
.glasspane {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  -webkit-animation: fade-in ease-in 1;
  -moz-animation: fade-in ease-in 1;
  -o-animation: fade-in ease-in 1;
  animation: fade-in ease-in 1;
  -webkit-animation-duration: 0.25s;
  -moz-animation-duration: 0.25s;
  -o-animation-duration: 0.25s;
  animation-duration: 0.25s;
  outline: none;
  z-index: 100;
  cursor: default;
}
.glasspane.busy {
  /* Make glasspane transparent and disable animation */
  background-color: transparent;
  -webkit-animation: none;
  -moz-animation: none;
  -o-animation: none;
  animation: none;
  cursor: wait;
}
.glasspane.dark {
  background-color: rgba(0, 0, 0, 0.1);
  -webkit-animation: fade-in ease-in 1;
  -moz-animation: fade-in ease-in 1;
  -o-animation: fade-in ease-in 1;
  animation: fade-in ease-in 1;
  -webkit-animation-duration: 0.25s;
  -moz-animation-duration: 0.25s;
  -o-animation-duration: 0.25s;
  animation-duration: 0.25s;
}
.glasspane-parent {
  pointer-events: none;
  /* Disable hover effects and clicks */
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.iframe.no-scrolling {
  overflow: hidden;
}
.iframe.iphone {
  height: 100%;
}
.iframe-wrapper {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.iframe-wrapper > iframe {
  display: block;
  width: 100%;
  border: 0;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.image {
  /* vertical-align-bottom is necessary to remove the bottom margin of the image */
  vertical-align: bottom;
}
.image.autofit {
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
}
.image.chrome-fix {
  padding-bottom: 0.01px;
}
.image.empty {
  visibility: hidden;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.key-box {
  position: absolute;
  min-width: 34px;
  padding: 4px 5px;
  z-index: 100;
  color: #000;
  background-color: #FFDB9D;
  line-height: normal;
  text-align: center;
  border: 1px solid #FFDB9D;
  font-size: 11px;
  font-weight: normal;
}
.key-box.disabled {
  border-color: #CCCCCC;
  background-color: #CCCCCC;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.logical-grid-layout {
  position: relative;
}
.logical-grid-layout > * {
  position: absolute;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.context-menu > .menu-item {
  border-top: solid 1px #CCCCCC;
  display: block;
  width: 100%;
  padding: 11px 15px;
}
.context-menu > .menu-item > .text {
  overflow: hidden;
  text-overflow: ellipsis;
  /* default is inline, inline-block is necessary so that max-width set by JS is respected */
  display: inline-block;
}
.context-menu > .menu-item.menu-textandicon > .icon {
  margin-right: 10px;
}
.context-menu > .menu-item.selected {
  border-top: 1px solid #014786;
  border-color: #014786;
  background-color: #E9F0F6;
}
.context-menu > .menu-item.next-to-selected {
  border-top-color: #014786;
}
.context-menu > .menu-item.context-menu-item-first {
  border-top: 1px solid transparent;
}
.context-menu > .menu-item.context-menu-item-last {
  border-bottom: 1px solid transparent;
}
.context-menu > .menu-item.selected.context-menu-item-first {
  border-top: 1px solid #014786;
}
.context-menu > .menu-item.selected.context-menu-item-last {
  border-color: #014786;
}
.context-menu > .menu-item.expanded > .submenu-icon {
  -webkit-transform: rotateX(180deg);
  -ms-transform: rotateX(180deg);
  transform: rotateX(180deg);
  top: 0;
}
.context-menu > .menu-item > .key-box {
  bottom: auto;
  top: 7px;
}
.popup-head ~ .context-menu.bottom > .menu-item.selected.context-menu-item-first {
  border-color: #014786;
}
.popup-head ~ .context-menu.top > .menu-item.selected.context-menu-item-last {
  border-color: #014786;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.menu-item {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  color: #333333;
  cursor: pointer;
}
.menu-item::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.menu-item > .key-box {
  bottom: -3px;
}
.menu-item:hover {
  color: #014786;
}
.menu-item:active,
.menu-item.active {
  color: #014786;
}
.menu-item.disabled {
  color: #999999;
  cursor: default;
}
.menu-item.menu-textandicon > .icon {
  margin-right: 8px;
}
.menu-item > .icon,
.menu-item > .text,
.menu-item > .submenu-icon {
  position: relative;
  vertical-align: middle;
  display: inline-block;
  line-height: normal;
  height: auto;
  /* Make IE trigger the :active state if the text or icon is pressed */
  pointer-events: none;
}
.menu-item > .text {
  /* Icon is bigger than the text -> increase text size to make menu items with and without font icons about equal height. */
  /* Otherwise menu items in context menus have a different size, and the popup of a menu with submenus may not be positioned correctly. */
  padding-top: 1px;
  padding-bottom: 1px;
}
.menu-item:not(.menu-button) > .icon {
  /* Move "a bit" towards the top, because the icon would not look centered with the text's baseline otherwise. */
  top: -1px;
}
.menu-item > .icon.font-icon {
  font-size: 18px;
}
.menu-item > .icon.image-icon {
  /* Prevent large image icons from overlapping the menu item */
  max-height: 18px;
  /* Ensure the default image icon size is taken from the beginning, so that the text does not "jump" when */
  /* the image loading is complete. (For larger icons, the width will be increased afterwards.) */
  min-width: 18px;
}
.menu-item > .icon.with-label {
  margin-right: 8px;
}
.menu-item.disabled > .icon.image-icon {
  -webkit-filter: grayscale(100%);
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  filter: grayscale(100%);
  opacity: 0.5;
}
.menu-item > .submenu-icon {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  padding-left: 8px;
  top: -1px;
}
.menu-item > .font-icon {
  font-size: 18px;
}
.menu-item.menu-open {
  color: #014786;
}
.menu-item.combo-menu-child.menu-icononly:not(:first-child) {
  margin-left: 8px;
}
.menu-item.combo-menu-child.menu-icononly:not(:first-child) > .submenu-icon {
  padding-left: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.form-field-menu {
  cursor: default;
}
.form-field-menu:hover {
  color: #333333;
}
.form-field-menu:not(.has-text):not(.has-icon) > .form-field > label {
  margin-left: 0;
}
.form-field-menu > .form-field {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  /* remove margin left since the menu-item already has a padding */
}
.form-field-menu > .form-field > label {
  margin-left: 8px;
}
.form-field-menu > .form-field.disabled:not(.read-only) > label {
  /* Use same disabled color as for menu items */
  color: #999999;
}
.form-field-menu > .check-box-field.disabled:not(.read-only) > .field > .label,
.form-field-menu > .radiobutton-group > .radiobutton-group-body > .radio-button.disabled:not(.read-only) > .field > .label,
.form-field-menu > .radio-button.disabled:not(.read-only) > .field > .label {
  /* Use same disabled color as for menu items */
  color: #999999;
}
/* Inside context menu popup -> set preferred size */
.context-menu > .menu-item.form-field-menu {
  display: flex;
  align-items: center;
}
.context-menu > .menu-item.form-field-menu > .text,
.context-menu > .menu-item.form-field-menu > .icon {
  flex: none;
}
.context-menu > .menu-item.form-field-menu > .form-field {
  flex: 1 1 auto;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* Mixins */
#scout {
  /* standard main-menubar */
  /* a transparent main-menubar with a smaller bottom border */
}
/* Styles */
.menubar {
  position: relative;
  width: 100%;
  background-color: #FAFAFA;
  border-bottom: 1px solid #CCCCCC;
  /* default style is 'top' */
  vertical-align: middle;
  white-space: nowrap;
}
.menubar.bottom {
  border-bottom: 0;
  border-top: 1px solid #CCCCCC;
}
.menubar > .menubox {
  display: inline-block;
  height: 100%;
  /* child menus of combo-menu must have the same padding, but not the all the other styles of > .menu-item */
  /* Menu items within a top-level combo-menu should have a focus-border too */
}
.menubar > .menubox::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.menubar > .menubox.right {
  float: right;
}
.menubar > .menubox > .menu-separator {
  display: inline-block;
  vertical-align: middle;
  width: 1px;
  margin-right: 20px;
  background-color: #CCCCCC;
  height: 15px;
}
.menubar > .menubox > .menu-separator.overflown {
  display: none;
}
.menubar > .menubox > .combo-menu > .menu-item {
  padding-top: 6px;
  padding-bottom: 6px;
}
.menubar > .menubox > .menu-item {
  display: inline-block;
  padding-top: 6px;
  padding-bottom: 6px;
  /* By making sure menu items are always at least the same height as form fields, it is easier to align them with each other, especially when zoomed */
  min-height: 30px;
  /* ---------------------------------- */
}
.menubar > .menubox > .menu-item.overflown {
  display: none;
}
.menubar > .menubox > .menu-item:focus {
  outline: none;
}
.menubar > .menubox > .menu-item:focus:not(.disabled) {
  color: #014786;
  /* Draw border for icon only items */
}
.menubar > .menubox > .menu-item:focus:not(.disabled):not(.menu-button) {
  color: #014786;
}
.menubar > .menubox > .menu-item:focus:not(.disabled):not(.menu-button)::after {
  color: #014786;
}
.menubar > .menubox > .menu-item:focus:not(.disabled).menu-icononly::after {
  position: absolute;
  content: '';
  left: -3px;
  top: -3px;
  width: calc(100% +  6px);
  height: calc(100% +  6px);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-radius: 3px;
}
.menubar > .menubox > .menu-item:focus:not(.disabled):not(.menu-icononly):not(.menu-button) > .text {
  text-decoration: underline;
}
.menubar > .menubox > .menu-item:not(.last) {
  margin-right: 20px;
}
.menubar > .menubox > .menu-item.form-field-menu {
  padding-top: 4px;
  padding-bottom: 4px;
}
.menubar > .menubox > .menu-item.menu-button {
  height: 30px;
  padding: 2px 7px;
  text-align: center;
  color: #014786;
  background-color: #fff;
  border: 1px solid #014786;
  border-radius: 3px;
  min-width: 110px;
  margin-top: 4px;
  margin-bottom: 4px;
  /* TODO [7.0] cgu/BSH: Actually, we wanted to use .overflow-ellipsis-nowrap to support */
  /* ellipsis, but this breaks the focus, because the ::before inline element gets */
  /* cut off. We should find a better solution for this. */
  /*white-space: nowrap;*/
}
.menubar > .menubox > .menu-item.menu-button:hover {
  color: #014786;
}
.menubar > .menubox > .menu-item.menu-button:hover > .font-icon {
  color: #014786;
}
.menubar > .menubox > .menu-item.menu-button:active,
.menubar > .menubox > .menu-item.menu-button.active {
  color: #014786;
  background-color: #EFEFEF;
}
.menubar > .menubox > .menu-item.menu-button:active > .font-icon,
.menubar > .menubox > .menu-item.menu-button.active > .font-icon {
  color: #014786;
}
.menubar > .menubox > .menu-item.menu-button:focus::after {
  position: absolute;
  content: '';
  left: -3px;
  top: -3px;
  width: calc(100% +  6px);
  height: calc(100% +  6px);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-radius: 3px;
}
.menubar > .menubox > .menu-item.menu-button > .font-icon {
  color: #014786;
}
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled) {
  font-family: Arial, sans-serif;
  font-weight: bold;
  font-size: 13px;
  background-color: #2B73B3;
  /* border is necessary to align the text with text from buttons with a real border */
  border-color: transparent;
  color: #fff;
}
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled):focus {
  color: #fff;
}
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled):hover {
  background-color: #2B73B3;
}
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled):active,
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled).active {
  background-color: #014786;
  border-color: #014786;
}
.menubar > .menubox > .menu-item.menu-button.default-menu:not(.disabled) > .font-icon {
  font-weight: normal;
  color: #fff;
}
.menubar > .menubox > .menu-item.menu-button.disabled {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  color: #999999;
  cursor: default;
}
.menubar > .menubox > .menu-item.menu-button.disabled > .font-icon {
  color: #CCCCCC;
}
.menubar > .menubox > .menu-item.menu-button.selected {
  border-style: inset;
  border-right-color: #CCCCCC;
  border-bottom-color: #CCCCCC;
}
.menubar > .menubox > .menu-item.menu-button:not(.last) {
  margin-right: 20px;
}
.menubar > .menubox > .menu-item.menu-button.left-of-button {
  margin-right: 10px;
}
.menubar > .menubox > .menu-item.menu-button.small-gap {
  margin-right: 6px;
}
.menubar > .menubox > .menu-item.menu-button.small {
  min-width: 53px;
}
.menubar > .menubox > .menu-item.menu-button.small > .font-icon {
  font-size: 18px;
}
.menubar > .menubox > .combo-menu > .menu-item:focus {
  outline: none;
}
.menubar > .menubox > .combo-menu > .menu-item:focus:not(.disabled) {
  color: #014786;
  /* Draw border for icon only items */
}
.menubar > .menubox > .combo-menu > .menu-item:focus:not(.disabled):not(.menu-button) {
  color: #014786;
}
.menubar > .menubox > .combo-menu > .menu-item:focus:not(.disabled):not(.menu-button)::after {
  color: #014786;
}
.menubar > .menubox > .combo-menu > .menu-item:focus:not(.disabled).menu-icononly::after {
  position: absolute;
  content: '';
  left: -3px;
  top: -3px;
  width: calc(100% +  6px);
  height: calc(100% +  6px);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  border-radius: 3px;
}
.menubar > .menubox > .combo-menu > .menu-item:focus:not(.disabled):not(.menu-icononly):not(.menu-button) > .text {
  text-decoration: underline;
}
.main-menubar {
  background-color: #FAFAFA;
  padding-left: 20px;
  padding-right: 20px;
  margin-left: inherit;
  margin-right: inherit;
  padding-top: 2px;
  padding-bottom: 2px;
}
.main-menubar > .menu-button.disabled {
  background-color: #F6F6F6;
}
.main-menubar > .menubox {
  /* combo-menu itself should have no margins and no padding so its child menus
     * can render a focus border like regular top-level menus.  */
}
.main-menubar > .menubox > .menu-item,
.main-menubar > .menubox > .combo-menu > .menu-item {
  margin-top: 8px;
  margin-bottom: 7px;
}
.main-menubar > .menubox > .menu-item.menu-button,
.main-menubar > .menubox > .combo-menu > .menu-item.menu-button {
  margin-top: 8px;
  margin-bottom: 7px;
}
.main-menubar > .menubox > .menu-item.form-field-menu,
.main-menubar > .menubox > .combo-menu > .menu-item.form-field-menu {
  padding-top: 0;
  padding-bottom: 0;
}
.main-menubar > .menubox > .menu-item.small > .font-icon,
.main-menubar > .menubox > .combo-menu > .menu-item.small > .font-icon {
  font-size: 18px;
}
.main-menubar > .menubox > .menu-item.last,
.main-menubar > .menubox > .combo-menu > .menu-item.last {
  margin-right: 0;
}
.main-menubar > .menubox > .menu-separator {
  height: 18px;
}
.main-menubar > .menubox > .combo-menu.menu-item {
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.messagebox {
  position: absolute;
  top: 0;
  left: 0;
  min-width: 200px;
  max-width: 330px;
  box-shadow: 4px 10px 18px -6px rgba(0, 0, 0, 0.5);
  background-color: #fff;
  border-top: 5px solid #014786;
  border-radius: 3px;
  margin: 10px;
  /* minimum padding to desktop */
  margin-bottom: 15px;
  /* Helper class used during width calculation - required on very narrow screens (e.g. Word AddIn) */
  /* remove border and rounded corners in full screen mode */
}
.messagebox.severity-error {
  border-top-color: #FF6060;
}
.messagebox.calc-helper {
  top: 0;
  left: 0;
}
.messagebox.animate-open {
  -webkit-animation-name: short-drop;
  -moz-animation-name: short-drop;
  -o-animation-name: short-drop;
  animation-name: short-drop;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.messagebox.animate-modality-highlight {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  -webkit-animation-name: shake;
  -moz-animation-name: shake;
  -o-animation-name: shake;
  animation-name: shake;
  -webkit-animation-duration: 0.2s;
  -moz-animation-duration: 0.2s;
  -o-animation-duration: 0.2s;
  animation-duration: 0.2s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
.messagebox.full-width,
.messagebox.full-height {
  border-radius: 0;
}
.messagebox.full-width > .box-buttons > .box-button,
.messagebox.full-height > .box-buttons > .box-button {
  border-radius: 0;
}
.messagebox.full-width {
  border-right: 0;
  border-left: 0;
}
.messagebox.full-height > .box-buttons > .box-button {
  border-bottom: 0;
}
.messagebox-content {
  min-height: 30px;
  border-left: 1px solid #CCCCCC;
  border-right: 1px solid #CCCCCC;
  background-color: #fff;
  padding: 3px 26px 26px 26px;
  /* add a bit of extra space to the scrollbar on the right */
}
.messagebox-content > .scrollbar.y-axis {
  width: 16px;
}
.messagebox-label {
  padding-top: 20px;
  word-wrap: break-word;
}
.copyable {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.messagebox-header {
  font-weight: bold;
}
@media (max-width: 330px) {
  .messagebox {
    /* no need to have a margin on small screens */
    margin: 0;
  }
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.mode {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
  border: 1px solid #CCCCCC;
  height: 100%;
  padding: 5px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.mode.first {
  border-radius: 3px 0 0 3px;
}
.mode.last {
  border-radius: 0 3px 3px 0;
}
.mode.first.last {
  border-radius: 3px;
}
.mode:not(.last):not(.selected) {
  border-right: none;
  padding-right: 6px;
  /* account for the missing border, so that text does not jump */
}
.mode.after-selected {
  border-left: none;
  padding-left: 6px;
  /* account for the missing border, so that text does not jump */
}
.mode:hover {
  color: #014786;
}
.mode:not(.disabled):not(.selected):active {
  color: #014786;
  background-color: #EFEFEF;
}
.mode.selected {
  color: #fff;
  background-color: #1561A7;
  border: none;
}
.mode:not(.disabled) {
  cursor: pointer;
}
.mode.disabled,
.mode.alternative.disabled {
  color: #999999;
}
.mode.disabled.selected,
.mode.alternative.disabled.selected {
  background-color: #F6F6F6;
  border: solid 1px #CCCCCC;
}
.mode > .icon.with-label {
  margin-right: 8px;
}
.mode-selector.alternative > .mode.selected:not(.disabled) {
  background-color: inherit;
  border: 1px solid #1561A7;
  color: #1561A7;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.mode-selector {
  position: relative;
  background-color: #fff;
  white-space: nowrap;
  display: table;
  table-layout: fixed;
  overflow: hidden;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.notification {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 10px;
  margin: 10px 10px 0 10px;
  border: 1px solid transparent;
  color: #333333;
  /* When notification is a direct child of the main group-box: use different margins */
}
.notification.ok {
  background-color: #DDF4EA;
  border-color: #0DAF66;
}
.notification.info {
  background-color: #E9F0F6;
  border-color: #2B73B3;
}
.notification.warning {
  background-color: #FCF0E5;
  border-color: #FDAD4F;
}
.notification.error {
  background-color: #FEE0E0;
  border-color: #FF6060;
}
.root-group-box > .notification {
  margin-left: 20px;
  margin-right: 20px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.planner {
  position: absolute;
  overflow: hidden;
}
.planner > .menubar {
  padding-left: 5px;
  padding-right: 5px;
}
.planner > .menubar.bottom {
  position: absolute;
  bottom: 0;
}
.planner-scale {
  position: absolute;
  right: 0;
  height: 45px;
  border-bottom: 1px solid #CCCCCC;
  width: 100%;
  /* for horizontal scrollbars */
  overflow: hidden;
  white-space: nowrap;
}
.planner-scale .scale-item {
  display: inline-block;
  position: relative;
  white-space: nowrap;
  padding: 0 0 0 5px;
}
.planner-scale .scale-item.label-invisible {
  color: transparent;
}
.planner-scale > .timeline {
  display: inline-block;
  width: calc(100% -  150px);
}
.planner-scale > .timeline > .timeline-large {
  height: 50%;
  background-color: #EFEFEF;
  line-height: 22.5px;
}
.planner-scale > .timeline > .timeline-large > .scale-item > .planner-large-scale-item-line {
  height: 45px;
}
.planner-scale > .timeline > .timeline-small {
  height: 50%;
  line-height: 22.5px;
}
.planner-scale > .timeline > .timeline-small > .highlight {
  position: absolute;
  background-color: #E9F0F6;
  height: 50%;
}
.planner-scale-title {
  height: 100%;
  float: left;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0 5px;
  font-size: 17px;
  color: #666666;
  line-height: 45px;
  width: 150px;
}
.planner-grid {
  position: absolute;
  right: 0;
  width: 100%;
  overflow: hidden;
}
.planner-resource {
  height: 30px;
  width: 100%;
  border-bottom: 1px solid #CCCCCC;
}
.planner-resource > .resource-title {
  line-height: 30px;
  height: 100%;
  width: 150px;
  padding: 0 5px;
  float: left;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.planner-resource.selected > .resource-title {
  background-color: #E9F0F6;
}
.planner-resource > .resource-cells {
  position: relative;
  height: 100%;
  width: calc(100% -  150px);
  float: left;
}
.planner-resource > .resource-cells > .selector {
  position: absolute;
  border-top: 2px solid #014786;
  border-bottom: 2px solid #014786;
  z-index: 1;
  /* TODO [7.0] CRU/BSH/CGU Instead of assigning a z-index, find a better insertion point for the selector */
  top: 0;
}
.planner-resource > .resource-cells > .selector > .selector-resize-left {
  background-color: #FEFEFE;
  border-left: 2px solid #014786;
  border-right: 2px solid #014786;
  position: absolute;
  top: 0;
  left: 0;
  width: 6px;
  height: 100%;
  cursor: col-resize;
}
.planner-resource > .resource-cells > .selector > .selector-resize-right {
  background-color: #FEFEFE;
  border-left: 2px solid #014786;
  border-right: 2px solid #014786;
  position: absolute;
  top: 0;
  right: 0;
  width: 6px;
  height: 100%;
  cursor: col-resize;
}
.planner-activity {
  position: absolute;
  top: 1px;
  width: 0;
  color: #333333;
  height: 27px;
  line-height: 27px;
  background-color: #24B499;
  text-align: center;
  border: 1px solid #CCCCCC;
  overflow: hidden;
}
.planner-activity.selected {
  outline: 2px solid #014786;
}
.planner-activity-level {
  background-color: #fff;
}
.planner-small-scale-item-line {
  position: absolute;
  height: 100%;
  width: 1px;
  top: 0;
  background-color: rgba(0, 0, 0, 0.07);
  pointer-events: none;
}
.planner-large-scale-item-line {
  position: absolute;
  height: 100%;
  width: 1px;
  top: 0;
  background-color: rgba(0, 0, 0, 0.2);
  pointer-events: none;
}
/*
 * Copyright (c) 2014-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.planner-header {
  display: table;
  width: 100%;
  white-space: nowrap;
  padding: 8px 3px 12px 0;
}
.planner-range {
  display: table-cell;
  vertical-align: middle;
  white-space: nowrap;
  padding-left: 8px;
}
.planner-previous,
.planner-today,
.planner-next {
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  text-align: center;
  cursor: pointer;
  height: 30px;
  color: #333333;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  margin-right: 5px;
  line-height: 29px;
}
.planner-previous:hover,
.planner-today:hover,
.planner-next:hover {
  color: #014786;
}
.planner-today {
  width: 65px;
}
.planner-select {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  font-size: 16px;
  margin-left: 15px;
  margin-right: 15px;
}
.planner-previous:hover::before,
.planner-next:hover::before {
  color: #014786;
}
.planner-previous::before {
  line-height: 29px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 20px;
  width: 29px;
  content: '\E012';
  color: #333333;
  text-align: center;
}
.planner-next::before {
  line-height: 29px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 20px;
  width: 29px;
  content: '\E013';
  color: #333333;
  text-align: center;
}
.planner-commands {
  display: table-cell;
  text-align: right;
}
.planner-mode,
.planner-toggle-year,
.planner-toggle-list {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  height: 30px;
  line-height: 29px;
  cursor: pointer;
}
.planner-mode {
  width: 65px;
  text-align: center;
  border-top: 1px solid #CCCCCC;
  border-bottom: 1px solid #CCCCCC;
  border-left: 1px solid #CCCCCC;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.planner-mode.first {
  border-left: 1px solid #CCCCCC;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}
.planner-mode.last {
  border-right: 1px solid #CCCCCC;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  margin-right: 5px;
}
.planner-mode:hover {
  color: #014786;
}
.planner-mode.selected {
  color: #2F3C45;
  background-color: #E9F0F6;
}
.planner-mode.disabled {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  color: #999999;
  cursor: default;
}
.planner-toggle-year,
.planner-toggle-list {
  margin-left: 5px;
}
.planner-toggle-year:hover::before,
.planner-toggle-list:hover::before {
  color: #014786;
}
.planner-toggle-year::before {
  line-height: 29px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 18px;
  width: 29px;
  content: '\E029';
  color: #333333;
  text-align: center;
}
.planner-toggle-list::before {
  line-height: 29px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  position: relative;
  font-size: 18px;
  width: 29px;
  content: '\E01C';
  color: #333333;
  text-align: center;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.popup {
  position: absolute;
  top: 0;
}
.popup:focus {
  outline: none;
}
.popup.with-arrow {
  min-width: 14px;
  min-height: 14px;
}
.popup-arrow {
  position: absolute;
  border: inherit;
  background-color: inherit;
  width: 14px;
  height: 14px;
}
.popup-arrow.left {
  left: 0;
  transform: translate(-50%, -50%) rotate(45deg);
}
.popup-arrow.left.center {
  top: 50%;
}
.popup-arrow.left.bottomedge {
  transform: translate(-50%, 50%) rotate(45deg);
}
.popup-arrow.right {
  right: 0;
  transform: translate(50%, -50%) rotate(45deg);
}
.popup-arrow.right.center {
  top: 50%;
}
.popup-arrow.right.bottomedge {
  transform: translate(50%, 50%) rotate(45deg);
}
.popup-arrow.top {
  top: 0;
  transform: translate(-50%, -50%) rotate(45deg);
}
.popup-arrow.top.center {
  left: 50%;
}
.popup-arrow.top.rightedge {
  transform: translate(50%, -50%) rotate(45deg);
}
.popup-arrow.bottom {
  bottom: 0;
  transform: translate(-50%, 50%) rotate(45deg);
}
.popup-arrow.bottom.center {
  left: 50%;
}
.popup-arrow.bottom.rightedge {
  transform: translate(50%, 50%) rotate(45deg);
}
.popup-arrow.leftedge {
  left: 35px;
}
.popup-arrow.rightedge {
  right: 35px;
}
.popup-arrow.topedge {
  top: 35px;
}
.popup-arrow.bottomedge {
  bottom: 35px;
}
.popup-arrow-overlay {
  position: absolute;
  background-color: inherit;
  width: 100%;
  height: 100%;
}
.popup-head {
  position: absolute;
  padding: 0 13px;
  white-space: nowrap;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-top-width: 0;
  border-bottom-width: 0;
  color: #014786;
  /* Enable submenu */
}
.popup.bottom > .popup-head {
  padding-top: 10px;
  border-top-width: 1px;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.popup.top > .popup-head {
  padding-bottom: 3px;
  border-bottom-width: 1px;
  box-shadow: 2px -6px 14px -6px rgba(0, 0, 0, 0.2);
}
.popup-head > .submenu-icon {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: rotateX(180deg);
  -ms-transform: rotateX(180deg);
  transform: rotateX(180deg);
  top: 0;
}
.popup-head > .font-icon {
  font-size: 18px;
  color: #014786;
}
.popup-head.in-main-menubar > .font-icon {
  font-size: 22px;
}
.popup-deco {
  position: absolute;
  height: 1px;
  left: 1px;
  background-color: #fff;
}
.popup-body {
  position: relative;
  border: 1px solid #CCCCCC;
  background-color: #fff;
}
.popup-body.bottom {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.popup-body.top {
  box-shadow: 2px -6px 14px -6px rgba(0, 0, 0, 0.2);
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.mobile-popup {
  background-color: #FEFEFE;
  border-top: 5px solid #014786;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  margin-top: 30px;
  box-shadow: 0 0 30px 5px rgba(0, 0, 0, 0.5);
}
.mobile-popup.animate-open {
  -webkit-animation-name: slidein-bottom;
  -moz-animation-name: slidein-bottom;
  -o-animation-name: slidein-bottom;
  animation-name: slidein-bottom;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.mobile-popup.animate-remove {
  -webkit-animation-name: slideout-bottom;
  -moz-animation-name: slideout-bottom;
  -o-animation-name: slideout-bottom;
  animation-name: slideout-bottom;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.mobile-popup-header {
  position: absolute;
  width: 100%;
  padding-top: 10px;
  padding-left: 20px;
}
.mobile-popup-header > .title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #014786;
  width: 100%;
}
.mobile-popup-header > .closer {
  position: absolute;
  top: 0;
  right: 4px;
  padding: 10px;
}
.mobile-popup.closable > .mobile-popup-header > .title {
  margin-right: 30px;
  width: calc(100% -  30px);
}
.mobile-popup-widget {
  position: relative;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.touch-popup {
  position: absolute;
  border: solid 1px #014786;
  border-radius: 3px;
  overflow: hidden;
  background-color: #EFEFEF;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  margin: 45px 10px 10px 10px;
}
.touch-popup-field {
  position: absolute;
  margin: 6px;
}
.touch-popup-widget-container {
  position: absolute;
  border-top: solid 1px #CCCCCC;
  background-color: #fff;
}
.touch-popup-widget-container > .proposal-chooser > .table {
  overflow: inherit;
}
.touch-popup-header {
  margin: 8px 4px 2px 8px;
}
.touch-popup-title {
  font-size: 14px;
  color: #333333;
}
.touch-popup-close-icon {
  position: absolute;
  right: 7px;
  top: 7px;
}
@media (max-height: 568px) {
  .touch-popup {
    /* move popup to top on small screens, no need to waste space*/
    margin-top: 10px;
  }
}
/*
 * Copyright (c) 2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.widget-popup {
  background-color: #fff;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  box-shadow: 4px 10px 18px -6px rgba(0, 0, 0, 0.5);
  margin: 10px;
  /* minimum padding to window */
}
.widget-popup.animate-open {
  -webkit-animation-name: fadein-zoom-bounce;
  -moz-animation-name: fadein-zoom-bounce;
  -o-animation-name: fadein-zoom-bounce;
  animation-name: fadein-zoom-bounce;
  -webkit-animation-duration: 0.4s;
  -moz-animation-duration: 0.4s;
  -o-animation-duration: 0.4s;
  animation-duration: 0.4s;
}
.widget-popup.animate-remove {
  -webkit-animation-name: fadeout-shrink-blur;
  -moz-animation-name: fadeout-shrink-blur;
  -o-animation-name: fadeout-shrink-blur;
  animation-name: fadeout-shrink-blur;
  -webkit-animation-duration: 0.15s;
  -moz-animation-duration: 0.15s;
  -o-animation-duration: 0.15s;
  animation-duration: 0.15s;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}
.widget-popup > .popup-arrow.bottom,
.widget-popup > .popup-arrow.right {
  box-shadow: 4px 4px 18px -2px rgba(0, 0, 0, 0.5);
}
.widget-popup > .close-action {
  position: absolute;
  top: 0;
  right: 0;
  /* should lay over drag and resize handles */
  z-index: 11;
  padding: 10px;
  font-size: 17px;
}
.widget-popup > .popup-widget {
  position: relative;
  background-color: inherit;
  border-radius: 5px;
}
.widget-popup > .popup-arrow-overlay {
  border-radius: 5px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.scrollbar {
  position: absolute;
  z-index: 1;
  cursor: pointer;
  overflow: hidden;
  transition: opacity 250ms;
  /* Scrollbars are hidden in hybrid mode, see Scrollbar#onTouchStart */
}
.scrollbar > .scrollbar-thumb.y-axis {
  padding-left: 5px;
}
.scrollbar:hover.y-axis > .scrollbar-thumb.y-axis,
.scrollbar.y-axis > .scrollbar-thumb.y-axis.scrollbar-thumb-move {
  padding-left: 3px;
}
.scrollbar > .scrollbar-thumb.x-axis {
  padding-top: 5px;
}
.scrollbar:hover.x-axis > .scrollbar-thumb.x-axis,
.scrollbar.x-axis > .scrollbar-thumb.x-axis.scrollbar-thumb-move {
  padding-top: 3px;
}
.scrollbar.y-axis {
  height: calc(100% -  2 * 8px);
  width: 14px;
  margin-top: 8px;
  margin-bottom: 8px;
}
.scrollbar.y-axis.borderless {
  margin-left: 0;
  margin-right: 0;
}
.scrollbar.x-axis {
  width: calc(100% -  2 * 8px);
  height: 14px;
  margin-left: 8px;
  margin-right: 8px;
}
.scrollbar.x-axis.borderless {
  margin-top: 0;
  margin-bottom: 0;
}
.scrollbar-thumb-handle {
  height: 100%;
  border-radius: 4px;
  background-color: rgba(153, 153, 153, 0.3);
}
.scrollbar-thumb-handle.clipped-left {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.scrollbar-thumb-handle.clipped-right {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.scrollbar-thumb-handle.clipped-top {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.scrollbar-thumb-handle.clipped-bottom {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.scrollbar-thumb-handle.y-axis {
  width: 4px;
  top: 0;
  transition: width 125ms;
}
.scrollbar:hover > .scrollbar-thumb > .scrollbar-thumb-handle.y-axis,
.scrollbar-thumb-move > .scrollbar-thumb-handle.y-axis {
  width: 8px;
}
.scrollbar-thumb-handle.x-axis {
  height: 4px;
  left: 0;
  transition: height 125ms;
}
.scrollbar:hover > .scrollbar-thumb > .scrollbar-thumb-handle.x-axis,
.scrollbar-thumb-move > .scrollbar-thumb-handle.x-axis {
  height: 8px;
}
.scrollbar-thumb {
  cursor: pointer;
  position: absolute;
}
.scrollbar-thumb.y-axis {
  width: 14px;
  top: 0;
  transition: padding-left 125ms;
}
.scrollbar-thumb.x-axis {
  height: 14px;
  left: 0;
  transition: padding-top 125ms;
}
.scrollbar-thumb.scrollbar-thumb-move > .scrollbar-thumb-handle,
.scrollbar-thumb:hover > .scrollbar-thumb-handle {
  background-color: rgba(153, 153, 153, 0.45);
}
.container-too-small-for-thumb > .scrollbar-thumb-handle {
  border-radius: 0;
  background-color: rgba(153, 153, 153, 0.15);
}
.container-too-small-for-thumb.scrollbar-thumb-move > .scrollbar-thumb-handle,
.container-too-small-for-thumb.scrollbar-thumb:hover > .scrollbar-thumb-handle {
  background-color: rgba(153, 153, 153, 0.15);
}
.hybrid-scrollable {
  -ms-overflow-style: none;
}
.hybrid-scrollable::-webkit-scrollbar {
  display: none;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.resizable-handle {
  position: absolute;
  font-size: 0.1px;
  display: block;
  -ms-touch-action: none;
  touch-action: none;
  z-index: 10;
}
.resizable-s {
  cursor: s-resize;
  height: 10px;
  width: 100%;
  bottom: -5px;
  left: 0;
}
.resizable-e {
  cursor: e-resize;
  width: 10px;
  right: -5px;
  top: 0;
  height: 100%;
}
.resizable-se {
  cursor: se-resize;
  width: 20px;
  height: 20px;
  right: -5px;
  bottom: -5px;
}
.resizable-sw {
  cursor: sw-resize;
  width: 20px;
  height: 20px;
  left: -5px;
  bottom: -5px;
}
.resizable-w {
  cursor: w-resize;
  width: 10px;
  left: -5px;
  top: 0;
  height: 100%;
}
.resizable-nw {
  cursor: nw-resize;
  width: 20px;
  height: 20px;
  left: -5px;
  top: -5px;
}
.resizable-n {
  cursor: n-resize;
  width: 100%;
  height: 10px;
  left: 0;
  top: -5px;
}
.resizable-ne {
  cursor: ne-resize;
  width: 20px;
  height: 20px;
  right: -5px;
  top: -5px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.busyindicator {
  position: absolute;
  top: 25%;
  left: 50%;
  max-width: 300px;
  box-shadow: 4px 10px 18px -6px rgba(0, 0, 0, 0.5);
  border-top: 5px solid #014786;
  border-radius: 3px;
  /* Helper class used during width calculation - required on very narrow screens (e.g. Word AddIn) */
}
.busyindicator.calc-helper {
  top: 0;
  left: 0;
}
.busyindicator.animate-open {
  -webkit-animation-name: fade-in;
  -moz-animation-name: fade-in;
  -o-animation-name: fade-in;
  animation-name: fade-in;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  -o-animation-duration: 0.5s;
  animation-duration: 0.5s;
}
.busyindicator.animate-modality-highlight {
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  -webkit-animation-name: shake;
  -moz-animation-name: shake;
  -o-animation-name: shake;
  animation-name: shake;
  -webkit-animation-duration: 0.2s;
  -moz-animation-duration: 0.2s;
  -o-animation-duration: 0.2s;
  animation-duration: 0.2s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
  -moz-animation-timing-function: linear;
  -o-animation-timing-function: linear;
  animation-timing-function: linear;
}
.busyindicator-content {
  border-left: 1px solid #CCCCCC;
  border-right: 1px solid #CCCCCC;
  background-color: #fff;
  padding: 26px;
}
.busyindicator-content.no-buttons {
  border-bottom: 1px solid #CCCCCC;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}
.busyindicator-label {
  display: inline-block;
  margin-left: 32px;
  text-indent: -32px;
}
.busyindicator-label::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  width: 22px;
  height: 22px;
  margin-top: -3px;
  margin-right: 15px;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  border-radius: 50%;
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
}
.busyindicator-label.cancelled::before {
  -webkit-animation: pulsate-reverse 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate-reverse 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate-reverse 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate-reverse 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
}
.busyindicator-details {
  padding-top: 20px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/**
 * @param border-width: because firefox renders the border thinner, for some reason
 */
.slider-input {
  display: inline-block;
  vertical-align: middle;
  border: none;
  /* Get rid of Firefox's focus border. See:
     https://stackoverflow.com/questions/71074/how-to-remove-firefoxs-dotted-outline-on-buttons-as-well-as-links */
}
.slider-input:focus {
  border: none;
  box-shadow: none;
  outline: none;
}
.slider-input::-moz-focus-inner {
  border: 0;
}
.slider-value {
  display: inline-block;
  vertical-align: middle;
  color: #333333;
  padding-left: 6px;
  padding-top: 8px;
  padding-bottom: 8px;
}
.slider.field {
  /* Slider input/value have the container's height (see SliderLayout), therefore they shouldn't wrap, otherwise the layout breaks. */
  white-space: nowrap;
}
input[type=range] {
  -webkit-appearance: none;
  padding: 0;
  /* ---- Webkit, Chrome ---- */
  /* ---- Firefox ---- */
  /* ---- Internet Explorer, Edge ---- */
}
input[type=range]:focus {
  outline: none;
}
input[type=range]:not(.ms-edge)::-webkit-slider-runnable-track {
  height: 3px;
  cursor: pointer;
  animate: 0.2s;
  background: #CCCCCC;
}
input[type=range]:not(.ms-edge)::-webkit-slider-thumb {
  box-sizing: border-box;
  border: 1px solid #666666;
  height: 16px;
  width: 16px;
  border-radius: 8px;
  background-color: #DDDDDD;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -6.5px;
}
input[type=range]:not(.ms-edge):focus::-webkit-slider-thumb {
  background-color: #C1DEF9;
  border-color: #014786;
}
input[type=range]::-moz-range-track {
  height: 3px;
  cursor: pointer;
  animate: 0.2s;
  background: #CCCCCC;
}
input[type=range]::-moz-range-thumb {
  box-sizing: border-box;
  border: 1.5px solid #666666;
  height: 16px;
  width: 16px;
  border-radius: 8px;
  background-color: #DDDDDD;
  cursor: pointer;
}
input[type=range]:focus::-moz-range-thumb {
  background-color: #C1DEF9;
  border-color: #014786;
}
input[type=range]::-ms-track {
  height: 3px;
  cursor: pointer;
  animate: 0.2s;
  background: transparent;
  border-color: transparent;
  border-size: 0;
  color: transparent;
}
input[type=range]::-ms-fill-lower {
  background: #CCCCCC;
}
input[type=range]::-ms-fill-upper {
  background: #CCCCCC;
}
input[type=range]::-ms-thumb {
  box-sizing: border-box;
  border: 1px solid #666666;
  height: 16px;
  width: 16px;
  border-radius: 8px;
  background-color: #DDDDDD;
  cursor: pointer;
}
input[type=range]:focus::-ms-thumb {
  background-color: #C1DEF9;
  border-color: #014786;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.splitter {
  position: absolute;
  /* | */
}
.splitter.x-axis {
  top: 0;
  height: 100%;
  width: 16px;
}
.splitter.x-axis:not(.disabled) {
  cursor: col-resize;
}
.splitter.x-axis.line {
  padding-right: 7px;
  padding-left: 7px;
}
.splitter.y-axis {
  left: 0;
  width: 100%;
  height: 16px;
}
.splitter.y-axis:not(.disabled) {
  cursor: row-resize;
}
.splitter.y-axis.line {
  padding-top: 7px;
  padding-bottom: 7px;
}
.splitter.line {
  background-clip: content-box;
  background-color: #CCCCCC;
}
.splitter.line:not(.disabled):hover {
  background-color: #014786;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
#scout {
  /* args = keyframeName, timingFunction, iterationCount */
  /*** Fade In ***/
  /*** Fade Out ***/
  /*** Fade with Short Drop ***/
  /*** Fade out and shrink with blur ***/
  /*** Fade out and shrink ***/
  /*** Fade out and grow with blur ***/
  /*** Fade out and grow ***/
  /*** Fade in and grow with blur ***/
  /*** Fade in and grow ***/
  /*** Slide In Bottom ***
       Moves the element into screen from bottom up */
  /*** Slide Out Bottom ***
       Moves the element out of bottom screen border */
  /*** Slide Out Right ***
       Moves the element out of right screen border */
  /*** Grow Y ***
    Scales the element along the y axis until 1. Expects the element to be scaled (e.g. scaleY(0)) when the animation starts.
    To create a slide down animation (as known from jQuery) set transform-origin to top. */
  /*** Shrink Y ***
    Shrinks the element along the y axis until 0*/
  /*** Fade In Zoom Bounce ***/
  /*** Rotation ***/
  /*** Rotation-Reverse ***/
  /*** Pulse Opacity ***/
  /*** Pulsate ***/
  /*** Pulsate Reverse ***/
  /*** Pulsate In-Out ***/
  /*** Attention ***/
  /*** Rotate-X ***/
  /*** Animate Dot ***/
  /*** Shake ***/
  /*** Flash-Gray ***/
}
@-webkit-keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-webkit-keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@-webkit-keyframes short-drop {
  0% {
    -webkit-transform: translateY(-40px);
    -ms-transform: translateY(-40px);
    transform: translateY(-40px);
  }
  40% {
    -webkit-transform: translateY(7px);
    -ms-transform: translateY(7px);
    transform: translateY(7px);
  }
  100% {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
}
@keyframes short-drop {
  0% {
    -webkit-transform: translateY(-40px);
    -ms-transform: translateY(-40px);
    transform: translateY(-40px);
  }
  40% {
    -webkit-transform: translateY(7px);
    -ms-transform: translateY(7px);
    transform: translateY(7px);
  }
  100% {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
}
@-webkit-keyframes fadeout-shrink-blur {
  from {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
  to {
    opacity: 0;
    transform: scale(0.5, 0.5);
    filter: blur(10px);
  }
}
@keyframes fadeout-shrink-blur {
  from {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
  to {
    opacity: 0;
    transform: scale(0.5, 0.5);
    filter: blur(10px);
  }
}
@-webkit-keyframes fadeout-shrink {
  from {
    opacity: 1;
    transform: scale(1, 1);
  }
  to {
    opacity: 0;
    transform: scale(0, 0);
  }
}
@keyframes fadeout-shrink {
  from {
    opacity: 1;
    transform: scale(1, 1);
  }
  to {
    opacity: 0;
    transform: scale(0, 0);
  }
}
@-webkit-keyframes fadeout-grow-blur {
  from {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
  to {
    opacity: 0;
    transform: scale(2, 2);
    filter: blur(10px);
  }
}
@keyframes fadeout-grow-blur {
  from {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
  to {
    opacity: 0;
    transform: scale(2, 2);
    filter: blur(10px);
  }
}
@-webkit-keyframes fadeout-grow {
  from {
    opacity: 1;
    transform: scale(1, 1);
  }
  to {
    opacity: 0;
    transform: scale(2, 2);
  }
}
@keyframes fadeout-grow {
  from {
    opacity: 1;
    transform: scale(1, 1);
  }
  to {
    opacity: 0;
    transform: scale(2, 2);
  }
}
@-webkit-keyframes fadein-grow-blur {
  from {
    opacity: 0;
    transform: scale(0.5, 0.5);
    filter: blur(10px);
  }
  to {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
}
@keyframes fadein-grow-blur {
  from {
    opacity: 0;
    transform: scale(0.5, 0.5);
    filter: blur(10px);
  }
  to {
    opacity: 1;
    transform: scale(1, 1);
    filter: blur(0);
  }
}
@-webkit-keyframes fadein-grow {
  from {
    opacity: 0;
    transform: scale(0, 0);
  }
  to {
    opacity: 1;
    transform: scale(1, 1);
  }
}
@keyframes fadein-grow {
  from {
    opacity: 0;
    transform: scale(0, 0);
  }
  to {
    opacity: 1;
    transform: scale(1, 1);
  }
}
@-webkit-keyframes slidein-bottom {
  0% {
    -webkit-transform: translateY(100%);
    -ms-transform: translateY(100%);
    transform: translateY(100%);
  }
}
@keyframes slidein-bottom {
  0% {
    -webkit-transform: translateY(100%);
    -ms-transform: translateY(100%);
    transform: translateY(100%);
  }
}
@-webkit-keyframes slideout-bottom {
  100% {
    -webkit-transform: translateY(100%);
    -ms-transform: translateY(100%);
    transform: translateY(100%);
  }
}
@keyframes slideout-bottom {
  100% {
    -webkit-transform: translateY(100%);
    -ms-transform: translateY(100%);
    transform: translateY(100%);
  }
}
@-webkit-keyframes slideout-right {
  100% {
    -webkit-transform: translateX(100%);
    -ms-transform: translateX(100%);
    transform: translateX(100%);
  }
}
@keyframes slideout-right {
  100% {
    -webkit-transform: translateX(100%);
    -ms-transform: translateX(100%);
    transform: translateX(100%);
  }
}
@-webkit-keyframes grow-y {
  100% {
    -webkit-transform: scaleY(1);
    -ms-transform: scaleY(1);
    transform: scaleY(1);
  }
}
@keyframes grow-y {
  100% {
    -webkit-transform: scaleY(1);
    -ms-transform: scaleY(1);
    transform: scaleY(1);
  }
}
@-webkit-keyframes shrink-y {
  100% {
    -webkit-transform: scaleY(0);
    -ms-transform: scaleY(0);
    transform: scaleY(0);
  }
}
@keyframes shrink-y {
  100% {
    -webkit-transform: scaleY(0);
    -ms-transform: scaleY(0);
    transform: scaleY(0);
  }
}
@-webkit-keyframes fadein-zoom-bounce {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.75, 0.75);
    -ms-transform: scale(0.75, 0.75);
    transform: scale(0.75, 0.75);
  }
  65% {
    opacity: 1;
    -webkit-transform: scale(1.02, 1.02);
    -ms-transform: scale(1.02, 1.02);
    transform: scale(1.02, 1.02);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
}
@keyframes fadein-zoom-bounce {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.75, 0.75);
    -ms-transform: scale(0.75, 0.75);
    transform: scale(0.75, 0.75);
  }
  65% {
    opacity: 1;
    -webkit-transform: scale(1.02, 1.02);
    -ms-transform: scale(1.02, 1.02);
    transform: scale(1.02, 1.02);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
}
@-webkit-keyframes rotation {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    -ms-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@keyframes rotation {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    -ms-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@-webkit-keyframes rotation-reverse {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(-359deg);
    -ms-transform: rotate(-359deg);
    transform: rotate(-359deg);
  }
}
@keyframes rotation-reverse {
  0% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(-359deg);
    -ms-transform: rotate(-359deg);
    transform: rotate(-359deg);
  }
}
@-webkit-keyframes pulse-opacity {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.05;
  }
  100% {
    opacity: 1;
  }
}
@keyframes pulse-opacity {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.05;
  }
  100% {
    opacity: 1;
  }
}
@-webkit-keyframes pulsate {
  0% {
    -webkit-transform: scale(0.25);
    -ms-transform: scale(0.25);
    transform: scale(0.25);
    opacity: 0.35;
  }
  45% {
    opacity: 1;
  }
  96% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0.2;
  }
  100% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0.04;
  }
}
@keyframes pulsate {
  0% {
    -webkit-transform: scale(0.25);
    -ms-transform: scale(0.25);
    transform: scale(0.25);
    opacity: 0.35;
  }
  45% {
    opacity: 1;
  }
  96% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0.2;
  }
  100% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0.04;
  }
}
@-webkit-keyframes pulsate-reverse {
  0% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    -webkit-transform: scale(0.1);
    -ms-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 0;
  }
}
@keyframes pulsate-reverse {
  0% {
    -webkit-transform: scale(1.2);
    -ms-transform: scale(1.2);
    transform: scale(1.2);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    -webkit-transform: scale(0.1);
    -ms-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 0;
  }
}
@-webkit-keyframes pulsate-in-out {
  0% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
  50% {
    -webkit-transform: scale(0.1);
    -ms-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 0.01;
  }
  100% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes pulsate-in-out {
  0% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
  50% {
    -webkit-transform: scale(0.1);
    -ms-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 0.01;
  }
  100% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
    opacity: 1;
  }
}
@-webkit-keyframes attention {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  10% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    -ms-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1);
  }
  20% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}
@keyframes attention {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  10% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    -ms-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1);
  }
  20% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}
@-webkit-keyframes rotate-x {
  0% {
    -webkit-transform: perspective(120px) rotateY(0deg);
    -ms-transform: perspective(120px) rotateY(0deg);
    transform: perspective(120px) rotateY(0deg);
  }
  50% {
    -webkit-transform: perspective(120px) rotateY(-180deg);
    -ms-transform: perspective(120px) rotateY(-180deg);
    transform: perspective(120px) rotateY(-180deg);
  }
  100% {
    -webkit-transform: perspective(120px) rotateY(-360deg);
    -ms-transform: perspective(120px) rotateY(-360deg);
    transform: perspective(120px) rotateY(-360deg);
  }
}
@keyframes rotate-x {
  0% {
    -webkit-transform: perspective(120px) rotateY(0deg);
    -ms-transform: perspective(120px) rotateY(0deg);
    transform: perspective(120px) rotateY(0deg);
  }
  50% {
    -webkit-transform: perspective(120px) rotateY(-180deg);
    -ms-transform: perspective(120px) rotateY(-180deg);
    transform: perspective(120px) rotateY(-180deg);
  }
  100% {
    -webkit-transform: perspective(120px) rotateY(-360deg);
    -ms-transform: perspective(120px) rotateY(-360deg);
    transform: perspective(120px) rotateY(-360deg);
  }
}
@-webkit-keyframes animateDot {
  0% {
    color: #333333;
    bottom: 0;
  }
  25% {
    color: #CCCCCC;
    bottom: 4px;
  }
  50% {
    color: #333333;
    bottom: 0;
  }
  100% {
    color: #333333;
    bottom: 0;
  }
}
@keyframes animateDot {
  0% {
    color: #333333;
    bottom: 0;
  }
  25% {
    color: #CCCCCC;
    bottom: 4px;
  }
  50% {
    color: #333333;
    bottom: 0;
  }
  100% {
    color: #333333;
    bottom: 0;
  }
}
@-webkit-keyframes shake {
  0% {
    -webkit-transform: translate(2px, 1px) rotate(0deg);
    -ms-transform: translate(2px, 1px) rotate(0deg);
    transform: translate(2px, 1px) rotate(0deg);
  }
  10% {
    -webkit-transform: translate(-1px, -2px) rotate(-1deg);
    -ms-transform: translate(-1px, -2px) rotate(-1deg);
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    -webkit-transform: translate(-3px, 0) rotate(1deg);
    -ms-transform: translate(-3px, 0) rotate(1deg);
    transform: translate(-3px, 0) rotate(1deg);
  }
  30% {
    -webkit-transform: translate(0, 2px) rotate(0deg);
    -ms-transform: translate(0, 2px) rotate(0deg);
    transform: translate(0, 2px) rotate(0deg);
  }
  40% {
    -webkit-transform: translate(1px, -1px) rotate(1deg);
    -ms-transform: translate(1px, -1px) rotate(1deg);
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    -webkit-transform: translate(-1px, 2px) rotate(-1deg);
    -ms-transform: translate(-1px, 2px) rotate(-1deg);
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    -webkit-transform: translate(-3px, 1px) rotate(0deg);
    -ms-transform: translate(-3px, 1px) rotate(0deg);
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    -webkit-transform: translate(2px, 1px) rotate(-1deg);
    -ms-transform: translate(2px, 1px) rotate(-1deg);
    transform: translate(2px, 1px) rotate(-1deg);
  }
  80% {
    -webkit-transform: translate(-1px, -1px) rotate(1deg);
    -ms-transform: translate(-1px, -1px) rotate(1deg);
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    -webkit-transform: translate(2px, 2px) rotate(0deg);
    -ms-transform: translate(2px, 2px) rotate(0deg);
    transform: translate(2px, 2px) rotate(0deg);
  }
  100% {
    -webkit-transform: translate(1px, -2px) rotate(-1deg);
    -ms-transform: translate(1px, -2px) rotate(-1deg);
    transform: translate(1px, -2px) rotate(-1deg);
  }
}
@keyframes shake {
  0% {
    -webkit-transform: translate(2px, 1px) rotate(0deg);
    -ms-transform: translate(2px, 1px) rotate(0deg);
    transform: translate(2px, 1px) rotate(0deg);
  }
  10% {
    -webkit-transform: translate(-1px, -2px) rotate(-1deg);
    -ms-transform: translate(-1px, -2px) rotate(-1deg);
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    -webkit-transform: translate(-3px, 0) rotate(1deg);
    -ms-transform: translate(-3px, 0) rotate(1deg);
    transform: translate(-3px, 0) rotate(1deg);
  }
  30% {
    -webkit-transform: translate(0, 2px) rotate(0deg);
    -ms-transform: translate(0, 2px) rotate(0deg);
    transform: translate(0, 2px) rotate(0deg);
  }
  40% {
    -webkit-transform: translate(1px, -1px) rotate(1deg);
    -ms-transform: translate(1px, -1px) rotate(1deg);
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    -webkit-transform: translate(-1px, 2px) rotate(-1deg);
    -ms-transform: translate(-1px, 2px) rotate(-1deg);
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    -webkit-transform: translate(-3px, 1px) rotate(0deg);
    -ms-transform: translate(-3px, 1px) rotate(0deg);
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    -webkit-transform: translate(2px, 1px) rotate(-1deg);
    -ms-transform: translate(2px, 1px) rotate(-1deg);
    transform: translate(2px, 1px) rotate(-1deg);
  }
  80% {
    -webkit-transform: translate(-1px, -1px) rotate(1deg);
    -ms-transform: translate(-1px, -1px) rotate(1deg);
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    -webkit-transform: translate(2px, 2px) rotate(0deg);
    -ms-transform: translate(2px, 2px) rotate(0deg);
    transform: translate(2px, 2px) rotate(0deg);
  }
  100% {
    -webkit-transform: translate(1px, -2px) rotate(-1deg);
    -ms-transform: translate(1px, -2px) rotate(-1deg);
    transform: translate(1px, -2px) rotate(-1deg);
  }
}
@-webkit-keyframes flash-gray {
  0% {
    background-color: #EFEFEF;
  }
  25% {
    background-color: #CCCCCC;
  }
  50% {
    background-color: #EFEFEF;
  }
  75% {
    background-color: #CCCCCC;
  }
  100% {
    background-color: #EFEFEF;
  }
}
@keyframes flash-gray {
  0% {
    background-color: #EFEFEF;
  }
  25% {
    background-color: #CCCCCC;
  }
  50% {
    background-color: #EFEFEF;
  }
  75% {
    background-color: #CCCCCC;
  }
  100% {
    background-color: #EFEFEF;
  }
}
/*
 * Copyright (c) 2014-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* -------------------------------- */
/* Scout default theme              */
/* extends: -                       */
/* affects: Scout OSS               */
/* -------------------------------- */
/* -------------------------------- */
/* Color palette                    */
/* -------------------------------- */
/* -------------------------------- */
/* Global colors                    */
/* -------------------------------- */
/* Use lighter gray in alternative mode, only relevant for some fields with borders (e.g. text area) */
/* -------------------------------- */
/* Component specific colors        */
/* -------------------------------- */
/* always white to not change the look of the website */
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* Font face definition for custom icon font:

See GIT history for font-face definitions. Some how it wasn't possible
to produce a consistent look on all browsers with the font-face definition.
Simply using font-family works better and is more reliable. However, we still
could use 'Open Sans' in the font-family (when it's installed on the client
system) and fall back to Arial otherwise, without downloading a WOFF file.

Try these to switch between fonts:

@defaultFont: 'Open Sans', OpenSans, Arial, sans-serif;
@defaultFont: Arial, sans-serif;
 */
@font-face {
  font-family: scoutIcons;
  font-weight: normal;
  src: url('fonts/scoutIcons.woff') format('woff');
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* default font icons (sans-serif, arial) */
/* scoutIcons: custom icons */
/* scoutIcons: awesome icons */
/* repeat */
/* bars */
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
#scout {
  /* Use dashed line instead of solid to avoid visual conflict with editable fields */
  /* Font Mixins */
  /* Invisible pseudo element that enables vertical-align if container has height set */
  /* Mixin for chooser popups as used in smart-field */
  /* Mixin for scrollbar positioning */
  /*
  * Hides the scrollbars but lets the user still scroll (e.g. using mousewheel or touch). Does not work for Firefox.
  */
  /**
   * Uses the inverted colors of the scrollbars. Use this mixin in a widget that requires inverted scrollbars (e.g. a widget with white background in dark mode).
   */
}
#scout .status {
  text-align: center;
}
#scout .status::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}
#scout .menu-status {
  visibility: visible;
  cursor: pointer;
}
#scout .menu-status::before {
  content: '\E041';
  color: #666666;
  font-size: 18px;
}
#scout .menu-status:hover::before {
  color: #014786;
}
#scout .menu-status:active::before {
  color: #014786;
}
#scout .tooltip-status,
#scout .info-status {
  visibility: visible;
  cursor: pointer;
}
#scout .tooltip-status::before,
#scout .info-status::before {
  content: '\E002';
  color: #999999;
  font-size: 16px;
}
#scout .tooltip-status:hover::before,
#scout .info-status:hover::before {
  color: #014786;
}
#scout .tooltip-status:active::before,
#scout .info-status:active::before {
  color: #014786;
}
#scout .warning-status {
  visibility: visible;
  cursor: pointer;
}
#scout .warning-status::before {
  content: '\E001';
  color: #2B73B3;
  font-size: 16px;
}
#scout .warning-status:hover::before {
  color: #1561A7;
}
#scout .warning-status:active::before {
  color: #1561A7;
}
#scout .error-status {
  visibility: visible;
  cursor: pointer;
}
#scout .error-status::before {
  content: '\E001';
  color: #FF6060;
  font-size: 16px;
}
#scout .error-status:hover::before {
  color: #DF2632;
}
#scout .error-status:active::before {
  color: #DF2632;
}
#scout .cursor-grab {
  /* "grab" cursor with fallback for browsers that don't understand CSS3 cursors */
  cursor: move;
  cursor: -webkit-grab;
  cursor: -moz-grab;
  cursor: grab;
}
#scout .cursor-grabbing {
  /* "grabbing" cursor with fallback for browsers that don't understand CSS3 cursors */
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: grabbing;
}
#scout .chooser-popup {
  position: absolute;
  border: solid 1px #014786;
  border-radius: 3px;
  overflow: hidden;
  background-color: #fff;
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
}
#scout .chooser-popup.bottom {
  margin-top: 5px;
}
#scout .chooser-popup.top {
  margin-bottom: 5px;
}
#scout .chooser-popup.touch {
  background-color: #EFEFEF;
}
#scout .chooser-popup.alternative {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
#scout .hide-scrollbars {
  -ms-overflow-style: none;
}
#scout .hide-scrollbars::-webkit-scrollbar {
  display: none;
}
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.2);
}
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb.scrollbar-thumb-move > .scrollbar-thumb-handle,
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb:hover > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.4);
}
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb.container-too-small-for-thumb > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.15);
}
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb.container-too-small-for-thumb.scrollbar-thumb-move > .scrollbar-thumb-handle,
#scout .inverted-scrollbars > .scrollbar > .scrollbar-thumb.container-too-small-for-thumb.scrollbar-thumb:hover > .scrollbar-thumb-handle {
  background-color: rgba(255, 255, 255, 0.15);
}
/*
 * Copyright (c) 2010-2019 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
/* -------------------------------- */
/* Global sizes                     */
/* -------------------------------- */
/* --------------------------------------------------------------------------- */
/* The following CSS classes are used to to read the values from JavaScript,   */
/* see scout.HtmlEnvironment                                                   */
/* --------------------------------------------------------------------------- */
.html-env-logical-grid-row {
  height: 30px;
  margin-bottom: 10px;
}
.html-env-logical-grid-row.dense {
  height: 24px;
  margin-bottom: 8px;
}
.html-env-logical-grid-column {
  width: 420px;
  margin-right: 30px;
  margin-left: 4px;
}
.html-env-field-mandatory-indicator {
  width: 10px;
}
.html-env-field-label {
  width: 140px;
}
.html-env-field-status {
  width: 20px;
}
/* -------------------------------- */
/* Component specific sizes         */
/* -------------------------------- */
/* Necessary to align icon with text */
/* Adjustment to shift the checkbox a little upwards to align it with the text (resp. first line of the text in case of multiline table cells) */
/* not 50px because last pixel is the border (would not look good)*/
/* minus the border */
/* Align first tree node with menu item text on the right */
/* Same height as navigate buttons on the right + border */
/* also used in scout.Column.prototype.buildCell */
/* also used in scout.Column.prototype.buildCell */
/* bigger space when multiple icons are displayed */
/* Optimized for a tile height of 30px (logical-grid-height) */
/* minus the border */
/* -------------------------------- */
/* Other sizes                      */
/* -------------------------------- */
/*
 * Copyright (c) 2014-2019 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.switch {
  position: absolute;
  right: 0;
  display: flex;
}
.switch-label {
  margin-right: 8px;
}
.switch-button {
  width: 28px;
  position: relative;
  padding: 8px;
  border-radius: 8px;
  background: #EFEFEF;
  cursor: pointer;
  border: solid 1px #adadad;
}
.switch-button:before {
  content: '';
  display: block;
  position: absolute;
  line-height: 30px;
  text-indent: 40px;
  height: 14px;
  width: 14px;
  border-radius: 100%;
  top: 1px;
  left: 1px;
  right: auto;
  border: solid 1px #adadad;
  background-color: #fff;
}
.switch-button,
.switch-button:before {
  transition: 0.25s ease-in-out;
}
.switch-button.activated:before {
  border-color: #014786;
  background-color: #7eabd3;
  left: calc(100% - 15.5px);
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-row-level-padding {
  width: 20px;
}
.table {
  position: relative;
  /* Used for scout.Table.CheckableStyle.TABLE_ROW */
}
.table:focus,
.table.focused {
  outline: none;
}
.table:focus .table-row.selected,
.table.focused .table-row.selected {
  background-color: #E9F0F6;
  border-color: #014786;
}
.table > .menubar:not(.main-menubar) {
  padding-left: 8px;
  padding-right: 8px;
}
.table.checkable > .table-data > .table-row {
  cursor: pointer;
}
.table.checkable.disabled > .table-data > .table-row,
.table.checkable > .table-data > .table-row.disabled {
  cursor: default;
}
.table.table-row-check > .table-data > .table-row > .table-cell.first {
  /* Increase padding of first cell to make room for "selection" marker */
  padding-left: 14px;
}
.table.table-row-check > .table-data > .table-row.selected {
  /* Don't draw selection */
  background-color: transparent;
  border-color: #CCCCCC;
}
.table.table-row-check > .table-data > .table-row.selected > .table-cell {
  color: #333333;
}
.table.table-row-check > .table-data > .table-row.checked,
.table.table-row-check > .table-data > .table-row.checked.selected {
  /* Mark checked rows with a background color */
  background-color: #1561A7;
}
.table.table-row-check > .table-data > .table-row.checked > .table-cell,
.table.table-row-check > .table-data > .table-row.checked.selected > .table-cell {
  color: #fff;
}
.table.table-row-check:focus > .table-data > .table-row.selected,
.table.table-row-check.focused > .table-data > .table-row.selected {
  /* "Selection" marker */
}
.table.table-row-check:focus > .table-data > .table-row.selected::before,
.table.table-row-check.focused > .table-data > .table-row.selected::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\E013';
  position: absolute;
  top: 8px;
  left: 5px;
  color: #333333;
}
.table.table-row-check:focus > .table-data > .table-row.selected.checked::before,
.table.table-row-check.focused > .table-data > .table-row.selected.checked::before {
  color: #fff;
}
.table.checkable.header-invisible > .table-data > .table-row.selected.first {
  border-top-color: #fff;
}
.table.structured .table-row:not(.leaf) {
  background-color: #FAFAFA;
  font-weight: bold;
}
.table > .tile-accordion {
  padding-top: 20px;
  padding-left: 20px;
  padding-right: 15px;
}
.table > .tile-accordion .tile-grid {
  padding: 0;
}
.table > .tile-table-header {
  padding-left: 20px;
  padding-right: 20px;
}
.table > .tile-table-header > .group-box-body {
  padding-bottom: 6px;
}
.table-data {
  position: relative;
  overflow: hidden;
  width: 100%;
  /* Draw the .table-data DIV one pixel higher, over the header (for selection border). */
  /* - To make height calculation correct, this margin has to be subtracted again */
  /*   from .table-data's height. See TableLayout.layout(). */
  margin-top: -1px;
  padding-top: 1px;
}
.table-data > .scrollbar.y-axis {
  /* Make scrollbar visually centered */
  margin-top: 9px;
}
.table-data > .table-row,
.table-data > .table-data-fill,
.table-data > .scrollbar {
  opacity: 1;
  transition: opacity 250ms;
}
.table-data.loading > .table-row,
.table-data.loading > .table-data-fill,
.table-data.loading > .scrollbar {
  opacity: 0;
}
.table-data.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.table-data.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
.table-data-fill {
  background-color: #CCCCCC;
  /* actual style is set by JS, this is used for the line color (see _applyFillerStyle) */
}
.table-row,
.table-aggregate-row {
  position: relative;
  overflow: hidden;
  border-left: 0 solid transparent;
  border-right: 0 solid transparent;
  border-bottom: 1px solid #CCCCCC;
}
.table-row.sum-selection,
.table-aggregate-row.sum-selection {
  color: #014786;
}
.table-row:active,
.table-aggregate-row:active {
  background-color: #F6F6F6;
}
.table-row.selected,
.table-aggregate-row.selected {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  border-left-color: transparent;
  border-right-color: transparent;
}
.table-row.selected.select-top,
.table-aggregate-row.selected.select-top,
.table-row.selected.select-middle,
.table-aggregate-row.selected.select-middle {
  /* Disable bottom-border. Instead, we add the border in the ::after pseudo element, because otherwise */
  /* it would interfere with the 2px left border (missing control of 'border join behaviour' in CSS) */
  border-bottom: 0;
}
.table-row.selected.select-top::after,
.table-aggregate-row.selected.select-top::after,
.table-row.selected.select-middle::after,
.table-aggregate-row.selected.select-middle::after {
  border-bottom: 1px solid #CCCCCC;
  content: '';
  display: block;
}
.table-row.select-single,
.table-aggregate-row.select-single,
.table-row.select-top,
.table-aggregate-row.select-top {
  border-top: 1px solid #CCCCCC;
  /* Move the row 1px up to cover the bottom border of the previous row. */
  margin-top: -1px;
}
.table-row.checked,
.table-aggregate-row.checked {
  background-color: #1561A7;
}
.table-cell {
  color: #333333;
  display: table-cell;
  padding: 7px 4px 7px 8px;
  position: relative;
  overflow: hidden;
  text-overflow: ellipsis;
  vertical-align: top;
  /* for multiline text */
}
.table-cell > .width-fix {
  /* Some browsers (e.g. IE9) need an additional <div> with display:inline-block below the table-cell */
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  /* An additional max-width: must be added in browser. */
}
.table-row.disabled > .table-cell {
  /* Table row is disabled -> use lighter disabled color */
  color: #999999;
}
.disabled > .table-row > .table-cell {
  /* Whole table is disabled -> use darker disabled color */
  color: #666666;
}
.disabled.read-only > .table-data > .table-row > .table-cell {
  color: #333333;
}
.table-row.checked > .table-cell {
  color: #fff;
}
.table-cell.empty {
  /* explicitly disable ellipsis, because IE would display it for very narrow columns even if content is '&nbsp;' */
  text-overflow: clip;
}
.table-cell.last.halign-left,
.table-cell.last.halign-center,
.table-cell.last.halign-right {
  padding-right: 14px;
}
.table:not(.disabled) > .table-data > .table-row:not(.disabled) > .table-cell.editable::before {
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 0;
  border-color: #CCCCCC transparent transparent transparent;
}
.table:not(.disabled) > .table-data > .table-row:not(.disabled) > .table-cell.mandatory::before {
  position: absolute;
  content: '*';
  top: 0;
  left: 0;
  border: none;
  color: #CCCCCC;
}
.table:not(.disabled) > .table-data > .table-row:not(.disabled) > .table-cell.editable.has-error::before {
  border-color: #FF6060 transparent transparent transparent;
}
.table:not(.disabled) > .table-data > .table-row:not(.disabled) > .table-cell.mandatory.has-error::before {
  color: #FF6060;
}
.table-cell.table-node > .table-row-control {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  padding: 7px 8px 7px 13px;
  cursor: pointer;
  line-height: 14px;
  /* Necessary to align with the text, depends on the used font size */
}
.table-cell.table-node > .table-row-control::before {
  display: block;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  content: '\E013';
  color: inherit;
}
.expanded.table-cell.table-node > .table-row-control::before {
  /* This "imprecise" angle is a workround for firefox to prevent shifting the div a little when the animation finishes. */
  /* See https://bugzilla.mozilla.org/show_bug.cgi?id=739176 */
  -webkit-transform: rotate(89.99deg);
  -ms-transform: rotate(89.99deg);
  transform: rotate(89.99deg);
}
.table-cell.table-node > .table-row-control:hover::before {
  color: #FE9915;
}
.table-cell.checkable {
  /* same padding for left and right, it's by purpose */
  padding: 5px 8px 0 8px;
  cursor: pointer;
  text-overflow: clip;
}
.table-cell.checkable.disabled,
.table.disabled > .table-data > .table-row > .table-cell.checkable {
  cursor: default;
}
.table-cell > .check-box {
  display: inline-block;
  position: relative;
  width: 18px;
  height: 18px;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  text-align: center;
}
.table-cell > .check-box::before {
  position: absolute;
  display: block;
  line-height: 18px;
  width: 16px;
}
.table-cell > .check-box.checked::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\E005';
  color: #014786;
  font-size: 11px;
}
.table-cell > .check-box.undefined::before {
  /* tri-state */
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: calc(100% - 6px);
  height: calc(100% - 6px);
  border-radius: 1px;
  background-color: #014786;
}
.table-cell > .check-box.disabled,
.table.disabled > .table-data > .table-row > .table-cell > .check-box {
  background-color: #F6F6F6;
}
.table-cell > .check-box.disabled::before,
.table.disabled > .table-data > .table-row > .table-cell > .check-box::before {
  color: #999999;
}
.table-cell > .check-box.disabled.undefined::before,
.table.disabled > .table-data > .table-row > .table-cell > .check-box.undefined::before {
  /* tri-state */
  background-color: #999999;
}
.table-cell.halign-right {
  text-align: right;
  padding-right: 8px;
  padding-left: 4px;
}
.table-cell.halign-center {
  text-align: center;
  padding-right: 8px;
}
.table-icon-cell {
  text-overflow: clip;
}
.font-icon.table-cell-icon {
  color: #333333;
}
.disabled .font-icon.table-cell-icon {
  color: #999999;
}
.image-icon.table-cell-icon {
  /* vertical-align-bottom is necessary to remove the bottom margin of the image */
  vertical-align: bottom;
}
.with-text.table-cell-icon {
  margin-right: 8px;
}
.table-row.checked > .table-cell > .table-cell-icon {
  color: #fff;
}
.table-aggregate {
  overflow: hidden;
}
.table-aggregate-row {
  background-color: #FAFAFA;
}
.table-aggregate-cell {
  font-weight: bold;
  /* if aggregation is based on selected rows */
}
.table-aggregate-cell > .table-cell-icon {
  color: #333333;
}
.table-aggregate-cell.selection,
.table-aggregate-cell.selection > .table-cell-icon {
  color: #2B73B3;
}
.column-background-effect-bar-chart {
  background-color: #93EDDC;
}
.column-background-effect-gradient1-start {
  background-color: #FEB1AB;
}
.column-background-effect-gradient1-end {
  background-color: #B6ECD3;
}
.column-background-effect-gradient2-start {
  background-color: #B6ECD3;
}
.column-background-effect-gradient2-end {
  background-color: #FEB1AB;
}
/* key box */
.table-row > .key-box {
  top: calc(50% -  23px / 2);
}
.table-controls > .table-control > .key-box {
  bottom: 4px;
}
.table .key-box.char {
  top: calc(50% -  21px / 2);
}
/*** Animation: rotate from 0 -> 90 deg ***/
@-webkit-keyframes expand-rotate {
  00% {
    /* see comment on top */
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(89.99deg);
    -ms-transform: rotate(89.99deg);
    transform: rotate(89.99deg);
  }
}
@keyframes expand-rotate {
  00% {
    /* see comment on top */
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(89.99deg);
    -ms-transform: rotate(89.99deg);
    transform: rotate(89.99deg);
  }
}
.expand-rotate::before {
  -webkit-animation-name: expand-rotate;
  -moz-animation-name: expand-rotate;
  -o-animation-name: expand-rotate;
  animation-name: expand-rotate;
  -webkit-animation-duration: 0.3s;
  -moz-animation-duration: 0.3s;
  -o-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: ease-out;
  -moz-animation-timing-function: ease-out;
  -o-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
}
/*** Animation: rotate collapse  90 -> 0 deg ***/
@-webkit-keyframes collapse-rotate {
  00% {
    /* see comment on top */
    -webkit-transform: rotate(89.99deg);
    -ms-transform: rotate(89.99deg);
    transform: rotate(89.99deg);
  }
  100% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
}
@keyframes collapse-rotate {
  00% {
    /* see comment on top */
    -webkit-transform: rotate(89.99deg);
    -ms-transform: rotate(89.99deg);
    transform: rotate(89.99deg);
  }
  100% {
    -webkit-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    transform: rotate(0deg);
  }
}
.collapse-rotate::before {
  -webkit-animation-name: collapse-rotate;
  -moz-animation-name: collapse-rotate;
  -o-animation-name: collapse-rotate;
  animation-name: collapse-rotate;
  -webkit-animation-duration: 0.3s;
  -moz-animation-duration: 0.3s;
  -o-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  -o-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: ease-out;
  -moz-animation-timing-function: ease-out;
  -o-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
}
/* Required because arrow up/down symbol is not properly vertically aligned with the rest of the sort/group text */
.sort-symbol {
  top: -1.25px;
  position: relative;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-footer {
  position: absolute;
  bottom: 0;
  min-height: 52px;
  width: 100%;
  white-space: nowrap;
  border-top: 1px solid #CCCCCC;
  background-color: #EFEFEF;
}
.table-control-resize {
  position: absolute;
  width: 100%;
  left: 0;
  height: 16px;
  cursor: row-resize;
  z-index: 1;
  border-top: 3px solid #CCCCCC;
}
.table-control-container {
  position: absolute;
  overflow: hidden;
  outline: none;
  background-color: #FAFAFA;
  bottom: 52px;
  width: 100%;
  /* Default value for TableControl.js */
  height: 345px;
  display: none;
  z-index: 1;
  /* Reset nowrap, forms may have fields which need wrapping (e.g. label field) */
  white-space: normal;
}
.table-control-container.dense {
  height: 320px;
}
.table-control-container:not(.has-resizer) {
  border-top: 2px solid #CCCCCC;
}
.table-control-content {
  height: 100%;
  width: 100%;
}
.table-control-content > .form {
  background-color: #FAFAFA;
}
.table-control-content > .form > .root-group-box > .group-box-body {
  /* to make sure fields are not drawn over the menubar when making table control container very small */
  overflow: hidden;
}
.table-control-content > .form > .root-group-box > .main-menubar {
  background-color: inherit;
  padding-left: 0;
  padding-right: 0;
  margin-left: 20px;
  margin-right: 20px;
}
.table-control-content > .form > .root-group-box > .main-menubar > .menu-button.disabled {
  /* use regular button color since menubar has no color */
  background-color: #F6F6F6;
}
.table-control-content .tab-box > .tab-box-header {
  margin-top: 0;
  margin-left: 0;
}
.table-control-content .tab-box > .tab-box-header > .tab-box-header-bottom-border {
  display: none;
}
.table-control-content .tab-box > .tab-box-header .tab-area > .selection-marker {
  z-index: 2;
  height: 3px;
  bottom: auto;
  top: 0;
  margin-bottom: 0;
}
.table-control-content .tab-box > .tab-box-header .tab-area > .tab-item {
  z-index: 2;
}
.table-control-content .tab-box > .tab-box-header .tab-area > .tab-item > .title {
  padding-top: 12px;
  padding-bottom: 12px;
}
.table-control-content .tab-box > .tab-box-header .tab-area > .tab-item.first {
  /* align with the form fields */
  padding-left: 10px;
}
.table-control-content .tab-box > .tab-box-header .tab-area > .tab-item::after {
  top: 0;
  height: 3px;
  margin-bottom: auto;
}
.table-controls {
  position: absolute;
  height: 100%;
}
.table-footer > .table-controls ~ .table-controls {
  margin-left: -1px;
}
.table-info {
  position: absolute;
  right: 0;
}
.table-filter {
  display: inline-block;
  position: relative;
  vertical-align: top;
  margin-top: 13px;
  margin-right: 14px;
}
.table-text-filter {
  min-height: 26px;
  width: 200px;
  font-size: 13px;
}
.table-text-filter:focus.has-text {
  padding-right: 25px;
}
.table-text-filter:focus.has-text ~ .clear-icon {
  display: block;
}
.table-text-filter ~ .clear-icon {
  display: none;
  position: absolute;
  right: 0;
  top: 0;
  min-height: 26px;
  line-height: 26px;
  padding-right: 10px;
  cursor: pointer;
}
.table-text-filter ~ .clear-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 13px;
  content: '\E045';
  color: #999999;
}
.table-info-load,
.table-info-status,
.table-info-filter,
.table-info-selection {
  position: relative;
  display: inline-block;
  vertical-align: top;
  padding-top: 7px;
  padding-bottom: 0;
  height: 51px;
  /* subtract border-top of .table-footer */
  color: #333333;
  cursor: pointer;
  line-height: 19px;
  overflow: hidden;
  white-space: nowrap;
  /* margins are used instead of paddings for a better animation */
}
.table-info-load::before,
.table-info-status::before,
.table-info-filter::before,
.table-info-selection::before {
  content: '';
  position: absolute;
  top: 9px;
  left: 0;
  height: 34px;
  border-right: 1px solid #CCCCCC;
}
.table-info-load > span,
.table-info-status > span,
.table-info-filter > span,
.table-info-selection > span {
  margin-left: 14px;
  margin-right: 13px;
  /* because left padding includes the ::before border */
}
.table-info-load.disabled,
.table-info-status.disabled,
.table-info-filter.disabled,
.table-info-selection.disabled {
  cursor: default;
}
.table-info-load.disabled > .table-info-button,
.table-info-status.disabled > .table-info-button,
.table-info-filter.disabled > .table-info-button,
.table-info-selection.disabled > .table-info-button {
  color: #333333;
}
.table-info-load > .table-info-button,
.table-info-status > .table-info-button,
.table-info-filter > .table-info-button,
.table-info-selection > .table-info-button {
  color: #014786;
}
.table-info-load > .table-info-button > .key-box,
.table-info-status > .table-info-button > .key-box,
.table-info-filter > .table-info-button > .key-box,
.table-info-selection > .table-info-button > .key-box {
  bottom: 2px;
}
.table-info-load:hover > .table-info-button,
.table-info-status:hover > .table-info-button,
.table-info-filter:hover > .table-info-button,
.table-info-selection:hover > .table-info-button {
  color: #0162b9;
}
.table-info-load:active > .table-info-button,
.table-info-status:active > .table-info-button,
.table-info-filter:active > .table-info-button,
.table-info-selection:active > .table-info-button {
  color: #014786;
}
.table-info-tooltip {
  line-height: 30px;
  /* move tooltip a little down, make sure it is on the same height as other table footer tooltips (table-control, table-status) */
  margin-top: 6px;
}
.table-info-status {
  padding-top: 0;
  line-height: 52px;
  color: #333333;
  /* normal */
  /* error */
  /* warning */
}
.table-info-status:hover {
  color: #666666;
}
.table-info-status > .font-icon {
  display: inline-block;
  line-height: normal;
  vertical-align: middle;
  padding-top: 8px;
  /* controls distance to tooltip */
  padding-bottom: 11px;
  /* larger than padding-top, to move icon to optical middle */
}
.table-info-status > .font-icon::before {
  content: '\E002';
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 22px;
}
.table-info-status.error > .font-icon::before {
  -webkit-animation: attention 5s linear infinite;
  -moz-animation: attention 5s linear infinite;
  -o-animation: attention 5s linear infinite;
  animation: attention 5s linear infinite;
  content: '\E001';
}
.table-info-status.error.tooltip-active {
  color: #FF6060;
}
.table-info-status.error.tooltip-active:hover {
  color: #DF2632;
}
.table-info-status.warning > .font-icon::before {
  content: '\E001';
}
.table-info-status.warning.tooltip-active {
  color: #2B73B3;
}
.table-info-status.warning.tooltip-active:hover {
  color: #014786;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-header {
  position: relative;
  white-space: nowrap;
  overflow: hidden;
  background-color: #EFEFEF;
  border-bottom: 1px solid #CCCCCC;
  z-index: 0;
  /* begin new stacking context */
  /* Make it the same height as the menu bar */
  min-height: 29px;
  /* -1px border-width. Header-items itself must not get a min-height otherwise bottom alignment with multi line header items break */
}
.table-header.disabled:not(.read-only) {
  color: #666666;
}
.table-header > .menubar-container {
  position: absolute;
  right: 0;
  /* make menubar a little smaller than header (but still center it). Otherwise browsers may draw the menu bar over the bottom border of the table header when the page is zoomed */
  top: 1px;
  height: calc(100% - 2px);
  padding-right: 6px;
  padding-left: 6px;
  /* Do not use transparent color here, because otherwise header items would be visible behind */
  background-color: inherit;
  z-index: 1;
}
.table-header > .menubar-container > .menubar {
  height: 100%;
  background-color: transparent;
  border: none;
}
.table-header-item {
  position: relative;
  display: inline-block;
  font-family: Arial, sans-serif;
  font-weight: bold;
  font-size: 13px;
  padding: 7px 4px 7px 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  /* Vertical align is necessary for 2 things: */
  /* 1. Alignment in case of multiline headers. */
  /* 2. A correct header height, see http://stackoverflow.com/questions/20566710/overflowhidden-displayinline-block-moves-text-upwards */
  vertical-align: bottom;
  cursor: pointer;
  /* Transparent border required for .selected state */
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;
}
.table-header-item.disabled {
  cursor: default;
  /* Override default disabled text color, because "disabled" in the table header means something different */
  color: #333333;
}
.table-header-item.halign-right {
  text-align: right;
  padding-right: 8px;
  padding-left: 4px;
}
.table-header-item.halign-center {
  text-align: center;
  padding-right: 8px;
}
.table-header-item.last.halign-left,
.table-header-item.last.halign-center,
.table-header-item.last.halign-right {
  padding-right: 14px;
}
.table-header-item.sorted,
.table-header-item.grouped,
.table-header-item.filtered {
  /* make room for icon */
  padding-right: 16px;
}
.table-header-item.sorted.halign-right,
.table-header-item.grouped.halign-right,
.table-header-item.filtered.halign-right,
.table-header-item.sorted.halign-center,
.table-header-item.grouped.halign-center,
.table-header-item.filtered.halign-center {
  padding-right: 20px;
}
.table-header-item.sorted.grouped,
.table-header-item.sorted.filtered {
  /* make some more room */
  padding-right: 28px;
}
.table-header-item.sorted.grouped.halign-right,
.table-header-item.sorted.filtered.halign-right,
.table-header-item.sorted.grouped.halign-center,
.table-header-item.sorted.filtered.halign-center {
  padding-right: 32px;
}
.table-header-item:not(.disabled):hover {
  color: #014786;
}
.table-header-item:not(.disabled):active,
.table-header-item:not(.disabled).active,
.table-header-item.moving {
  color: #014786;
}
.table-header-item.moving > .table-header-item-state {
  display: none;
}
.table-header-item.selected {
  border-left-color: #CCCCCC;
  border-right-color: #CCCCCC;
  background-color: #fff;
  color: #014786;
  z-index: 1;
}
.table-header-item.filler {
  padding: 0;
  margin: 0;
  border: 0;
  cursor: default;
}
.table-header-item > .icon.with-text {
  margin-right: 8px;
}
.table-header-item-text.empty {
  /* explicitly disable ellipsis, because IE would display it for very narrow columns even if content is '&nbsp;' */
  text-overflow: clip;
}
.table-header-item-icon-only {
  text-overflow: clip;
}
.table-header-item-state {
  position: absolute;
  right: 3px;
  top: 4px;
  font-weight: normal;
  font-size: 10px;
  color: #666666;
  display: table-row;
}
.table-header-item-state > .left {
  display: table-cell;
  padding-top: 5px;
  padding-left: 3px;
  text-align: center;
}
.table-header-item-state.grouped.filtered > .left {
  padding-top: 0;
}
.table-header-item-state > .right {
  display: table-cell;
  color: #666666;
  font-size: 16px;
  padding-left: 3px;
  padding-right: 3px;
  vertical-align: top;
}
.table-header-item-state.sort-desc > .right::after {
  content: '\2193';
}
.table-header-item-state.sort-asc > .right::after {
  content: '\2191';
}
.table-header-resize {
  position: absolute;
  display: inline-block;
  top: 0;
  height: 100%;
  width: 17px;
  padding: 8px 8px;
  margin-left: -8px;
  background-color: #CCCCCC;
  background-clip: content-box;
  z-index: 1;
}
.table-header-resize:not(.disabled) {
  cursor: col-resize;
}
.table-header-resize:not(.disabled):hover {
  background-color: #CCCCCC;
}
.table-header.moving > .table-header-resize {
  /* Hide separators while moving, because their position will not be updated until the move-end event */
  visibility: hidden;
}
.table-header-item.selected + .table-header-resize.table-header-resize {
  visibility: hidden;
}
/* Temporary element inserted in header and data area during resizing of a column */
.table-column-resize-helper {
  position: absolute;
  top: 0;
  left: 0;
  background-color: transparent;
  height: 1px;
  /* width is set dynamically by TableHeader.js */
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-header-menu {
  position: absolute;
  width: 447px;
  background-color: #fff;
  border: 1px solid #CCCCCC;
  white-space: nowrap;
}
.table-header-menu:focus {
  outline: 0;
}
.table-header-menu.bottom {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.table-header-menu.top {
  box-shadow: 2px -3px 14px -6px rgba(0, 0, 0, 0.2);
}
.table-header-menu-body {
  position: relative;
  height: 100%;
  width: 100%;
}
.table-header-menu-actions {
  display: inline-block;
  vertical-align: bottom;
  padding: 10px;
}
.table-header-menu-filters {
  display: inline-block;
  width: 222px;
  border-left: solid 1px #CCCCCC;
  padding: 0 10px 0 10px;
  margin: 10px 0 10px 0;
}
.table-header-menu-body.compact > .table-header-menu-filters {
  display: block;
  height: auto;
  margin-top: 5px;
  border-left: 0;
}
.table-header-menu-filters > .table-header-menu-group > .form-field {
  position: relative;
}
.table-header-menu-whiter {
  height: 1px;
  position: absolute;
  left: 0;
  background-color: #fff;
}
.table-header-menu.bottom .table-header-menu-whiter {
  top: -1px;
}
.table-header-menu.top .table-header-menu-whiter {
  bottom: -1px;
}
.table-header-menu-group {
  padding-top: 10px;
}
.table-header-menu-group.first {
  padding-top: 0;
}
.table-header-menu-group.buttons {
  padding-bottom: 35px;
}
.table-header-menu-group.buttons.last {
  padding-bottom: 29px;
}
.table-header-menu-group-text {
  font-family: Arial, sans-serif;
  font-size: 13px;
  font-weight: bold;
  color: #333333;
  line-height: 24px;
  height: 24px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.table-header-menu-command {
  float: left;
  width: 43px;
  margin-right: 10px;
  height: 30px;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 18px;
  color: #333333;
  border: 1px solid #CCCCCC;
  background-color: #fff;
  cursor: pointer;
  text-align: center;
  display: table;
}
.table-header-menu-command:focus {
  border-color: #014786;
  outline: none;
}
.table-header-menu-command:focus > .icon::before,
.table-header-menu-command:focus > .icon::after {
  color: #014786;
}
.table-header-menu-command.last {
  margin-right: 0;
}
.table-header-menu-command:hover {
  color: #014786;
  border-color: #014786;
}
.table-header-menu-command:active,
.table-header-menu-command.active {
  color: #014786;
  background-color: #EFEFEF;
  border-color: #014786;
}
.table-header-menu-command.disabled {
  background-color: #fff;
  border-color: #DDDDDD;
  color: #CCCCCC;
  cursor: default;
}
.table-header-menu-command > .icon::after {
  position: relative;
  left: 3px;
  top: -3px;
  font-size: 13px;
}
.table-header-menu-command.selected {
  background-color: #1561A7;
  border: 1px solid #1561A7;
}
.table-header-menu-command.selected > .icon::before,
.table-header-menu-command.selected > .icon::after {
  color: #fff;
}
.table-header-menu-command.selected:focus {
  background-color: #fff;
}
.table-header-menu-command.selected:focus > .icon::before,
.table-header-menu-command.selected:focus > .icon::after {
  color: #014786;
}
.table-header-menu-command.selected:active:not(.disabled),
.table-header-menu-command.selected.active:not(.disabled) {
  background-color: #0f477a;
  border-color: #0f477a;
}
.table-header-menu-command > .icon {
  vertical-align: middle;
  display: table-cell;
}
.table-header-menu-command.move-top > .icon::before {
  content: '\E010';
}
.table-header-menu-command.move-up > .icon::before {
  content: '\E012';
}
.table-header-menu-command.move-down > .icon::before {
  content: '\E013';
}
.table-header-menu-command.move-bottom > .icon::before {
  content: '\E011';
}
.table-header-menu-command.sort-asc > .icon::before,
.table-header-menu-command.sort-asc-add > .icon::before {
  content: '\E017';
}
.table-header-menu-command.sort-desc > .icon::before,
.table-header-menu-command.sort-desc-add > .icon::before {
  content: '\E016';
}
.table-header-menu-command.sort-asc-add > .icon::after,
.table-header-menu-command.sort-desc-add > .icon::after {
  content: '\E01B';
  display: inline-block;
  /* fix for pointer-events: none in IE11 */
}
.table-header-menu-command.sort-asc-add.selected > .icon::after,
.table-header-menu-command.sort-desc-add.selected > .icon::after {
  content: attr(data-icon);
  font-size: 12px;
  line-height: 12px;
  /* limit height otherwise arrow would move up in some browsers */
}
.table-header-menu-command.add-column > .icon::before {
  content: '\E01B';
}
.table-header-menu-command.remove-column > .icon::before {
  content: '\E01A';
}
.table-header-menu-command.change-column > .icon::before {
  content: '\E02F';
}
.table-header-menu-command.togglable.selected:hover {
  border-width: 0;
}
.table-header-menu-command.togglable.selected:hover > .icon::before {
  content: '\E035';
}
.table-header-menu-command.togglable.selected:hover > .icon::after {
  content: '';
}
.table-header-menu-command.hierarchy-collapse-all > .icon::before {
  content: '\E037';
}
.table-header-menu-command.hierarchy-expand-all > .icon::before {
  content: '\E036';
}
.table-header-menu-command.group > .icon::before,
.table-header-menu-command.group-add > .icon::before {
  content: '\E006';
}
.table-header-menu-command.group-add > .icon::after {
  content: '\E01B';
  display: inline-block;
  /* fix for pointer-events: none in IE11 */
}
.table-header-menu-command.group-add.selected > .icon::after {
  content: attr(data-icon);
  font-size: 12px;
  line-height: 12px;
  /* limit height otherwise arrow would move up in some browsers */
}
.table-header-menu-command.aggregation-function.sum > .icon::before {
  content: '\E02C';
}
.table-header-menu-command.aggregation-function.avg > .icon::before {
  content: '\E03A';
}
.table-header-menu-command.aggregation-function.max > .icon::before {
  content: '\E039';
}
.table-header-menu-command.aggregation-function.min > .icon::before {
  content: '\E038';
}
.table-header-menu-command.color-gradient1 {
  background-image: linear-gradient(to right, #FEB1AB, #B6ECD3);
  /* Color used as fallback if browser does not support gradients (ie 9) */
  background-color: #FEB1AB;
}
.table-header-menu-command.color-gradient2 {
  background-image: linear-gradient(to right, #B6ECD3, #FEB1AB);
  /* Color used as fallback if browser does not support gradients (ie 9) */
  background-color: #B6ECD3;
}
.table-header-menu-command.color-bar-chart {
  background-image: linear-gradient(to right, #93EDDC 0, #93EDDC 65%, #fff 65%, #fff 100%);
  background-color: transparent;
}
.table-header-menu-command.color.selected {
  border-width: 2px;
}
.table-header-menu-command.color.selected.togglable:hover {
  background-color: #1561A7;
  background-image: none;
}
.table-header-menu-filter {
  position: relative;
  width: 200px;
  float: left;
  clear: both;
  height: 30px;
  line-height: 30px;
  cursor: pointer;
  padding: 0 20px 0 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  border-top: 1px solid #CCCCCC;
}
.table-header-menu-filter.last {
  border-bottom: 1px solid #CCCCCC;
}
.table-header-menu-filter:hover {
  color: #014786;
}
.table-header-menu-filter::after {
  position: absolute;
  right: 14px;
  content: attr(data-value);
}
.table-header-menu-filter.selected {
  background-color: #1561A7;
  border-top-color: #1561A7;
  color: #fff;
}
.table-header-menu-filter.selected + .table-header-menu-filter {
  border-top: 1px solid #fff;
}
.table-header-menu-filter.selected:last-child {
  border-bottom-color: #1561A7;
}
.table-header-menu-filter-actions {
  float: right;
  line-height: 24px;
}
.table-header-menu-filter-toggle-checked {
  cursor: pointer;
  color: #014786;
  display: inline;
}
.table-header-menu-toggle-sort-order {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  float: left;
  cursor: pointer;
  color: #014786;
  padding-right: 10px;
}
.table-header-menu-toggle-sort-order-alphabetically::before {
  content: '\F15D';
}
.table-header-menu-toggle-sort-order-amount::before {
  content: '\F161';
}
/* Filter fields group-box */
.filter-fields {
  padding: 0;
}
.filter-fields > .group-box-body {
  padding: 0;
}
.filter-fields > .group-box-body > .form-field > label {
  margin-left: 0;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-row-detail {
  padding: 12px 16px;
  line-height: 25px;
}
.table-row-detail-name {
  font-weight: bold;
  margin-right: 4px;
}
.table-row-detail-value {
  white-space: normal;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}
.table-row-detail-icon.with-text {
  margin-right: 8px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.table-control {
  position: relative;
  display: inline-block;
  padding: 0 14px;
  cursor: pointer;
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;
  /* draw over border-top of .table-footer */
  height: calc(100% + 1px);
  margin-top: -1px;
  padding-top: 1px;
}
.table-control::before {
  content: '';
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  min-height: 0;
}
.table-control > .font-icon {
  font-size: 22px;
  color: #1561A7;
  vertical-align: middle;
}
.table-control:hover > .font-icon {
  color: #1561A7;
}
.table-control:active > .font-icon {
  color: #333333;
}
.table-control.disabled:hover,
.table-control.disabled > .font-icon,
.table-control.disabled.selected > .font-icon {
  cursor: default;
  color: #CCCCCC;
}
.table-control.selected > .font-icon {
  color: #1561A7;
}
.table-control.selected {
  border-left-color: #CCCCCC;
  border-right-color: #CCCCCC;
  background-color: #FAFAFA;
}
.table-control.selected:first-child {
  border-left-color: transparent;
}
.tooltip.table-control-tooltip {
  /* move tooltip a little down, make sure it is on the same height as other table footer tooltips (table-info, table-status) */
  margin-top: 7px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.cell-editor-popup {
  /* make sure it is behind the scrollbar */
  z-index: 0;
}
.cell-editor-popup.first {
  /* Hide the left border of the field */
  margin-left: -1px;
}
.cell-editor-field {
  /* -1px correction is necessary because the table-cell does not have a border but the fields have
   * For some reason Microsoft Edge requires 1px less padding than all other browsers, to avoid a
   * 'jumpy' UI when user clicks into an editable cell */
  padding: 7px 3px 7px 7px;
  border-radius: 0;
}
.cell-editor-field.ms-edge {
  padding-left: 6px;
}
.cell-editor-field.first {
  /* Correction for margin-left -1px */
  padding-left: 8px;
}
.cell-editor-field.first.ms-edge {
  padding-left: 7px;
}
.cell-editor-field.halign-right {
  padding-right: 7px;
  padding-left: 3px;
}
.cell-editor-field.halign-right.ms-edge {
  padding-left: 2px;
}
.cell-editor-field.halign-center {
  padding-right: 7px;
}
.cell-editor-field:focus {
  box-shadow: none;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tag-element,
.overflow-icon {
  display: inline-block;
  user-select: none;
  white-space: nowrap;
  color: #000;
  outline: none;
  border-radius: 2px;
  background-color: #93EDDC;
  padding: 0 5px;
  height: 22px;
  line-height: 22px;
  margin: 3px 3px 0 0;
}
.tag-element:hover:not(.disabled),
.overflow-icon:hover:not(.disabled) {
  background-color: #3EE1C3;
}
.tag-element.focused,
.overflow-icon.focused {
  background-color: #24B499;
}
.tag-element.focused > .tag-remove-icon::before,
.overflow-icon.focused > .tag-remove-icon::before {
  color: #000;
}
.tag-element > .tag-text {
  max-width: 85px;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 1px;
  display: inline-block;
  vertical-align: middle;
}
.tag-element.clickable:hover {
  cursor: pointer;
}
.overflow-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  font-size: 10px;
  content: '\F078';
  color: #1D826F;
}
.overflow-icon:hover {
  background-color: #3EE1C3;
  cursor: pointer;
}
.overflow-icon.focused::before {
  color: #000;
}
.tag-remove-icon {
  padding-left: 3px;
  display: inline-block;
  vertical-align: middle;
}
.tag-remove-icon::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  content: '\E045';
  color: #1D826F;
}
.tag-remove-icon:hover {
  cursor: pointer;
}
.tag-remove-icon:hover::before {
  color: #000;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tag-overflow-popup {
  padding: 5px 7px 9px 5px;
  max-width: 250px;
}
.tag-overflow-popup-head {
  position: absolute;
  background-color: #fff;
  color: #014786;
  border: 1px solid #CCCCCC;
  border-bottom-width: 0;
}
.tag-overflow-popup-head:hover {
  background-color: #fff !important;
  /* NOSONAR important to avoid super specific selector */
}
.tag-overflow-popup-head.overflow-icon {
  margin: 0;
  border-radius: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.time-picker-popup {
  position: absolute;
  border-radius: 3px;
  outline: none;
  border: 1px solid #014786;
  box-shadow: 0 0 5px rgba(1, 71, 134, 0.5);
  overflow: hidden;
}
.time-picker-popup.alternative {
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
.time-picker {
  position: relative;
  background-color: #fff;
}
.time-picker.touch {
  overflow-x: hidden;
  overflow-y: auto;
  min-width: 160px;
}
.day-table {
  display: table;
  width: 100%;
}
.day-table > .hour-row {
  display: table-row;
  padding-left: 20px;
  padding-right: 20px;
}
.day-table > .hour-row:hover > .label {
  font-weight: bold;
  color: #014786;
}
.day-table > .hour-row > .cell {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  padding: 2px;
  cursor: pointer;
}
.time-picker.touch .day-table > .hour-row > .cell {
  padding: 5px;
}
.day-table > .hour-row > .cell:first-child {
  padding-left: 7px;
}
.time-picker.touch .day-table > .hour-row > .cell:first-child {
  padding-left: 15px;
}
.day-table > .hour-row > .cell:last-child {
  padding-right: 12px;
}
.time-picker.touch .day-table > .hour-row > .cell:last-child {
  padding-right: 20px;
}
.day-table > .hour-row > .cell > .text {
  display: inline-block;
  padding: 5px;
  border: 1px solid transparent;
  border-radius: 3px;
}
.day-table > .hour-row > .cell.hours {
  background-color: #EFEFEF;
  border-right: 1px solid #CCCCCC;
}
.day-table > .hour-row > .cell.hours:active:not(.disabled) + .minutes > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.hours:hover:not(.disabled) + .minutes > .text {
  border-color: #014786;
  background-color: #E9F0F6;
}
.day-table > .hour-row > .cell.hours:active:not(.disabled) + .minutes.now > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.hours:hover:not(.disabled) + .minutes.now > .text {
  border-color: #FE9915;
  background-color: #FCF0E5;
}
.day-table > .hour-row > .cell.hours:active:not(.disabled) + .minutes.selected > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.hours:hover:not(.disabled) + .minutes.selected > .text {
  background-color: #2B73B3;
}
.day-table > .hour-row > .cell.hours:active:not(.disabled) + .minutes.selected.now > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.hours:hover:not(.disabled) + .minutes.selected.now > .text {
  background-color: #FDAD4F;
}
.day-table > .hour-row > .cell.minutes {
  /* Hover effect is disabled on touch devices because the hover effect does not vanish on touch end which is annoying especially when swiping. */
}
.day-table > .hour-row > .cell.minutes.now {
  color: #FE9915;
  font-weight: bold;
}
.day-table > .hour-row > .cell.minutes.selected {
  color: #fff;
}
.day-table > .hour-row > .cell.minutes.selected > .text {
  background-color: #1561A7;
}
.day-table > .hour-row > .cell.minutes.selected.now {
  color: #fff;
}
.day-table > .hour-row > .cell.minutes.selected.now > .text {
  background-color: #FE9915;
}
.day-table > .hour-row > .cell.minutes.preselected > .text {
  border-color: #014786;
  border-style: dashed;
}
.day-table > .hour-row > .cell.minutes.preselected.now > .text {
  border-color: #FE9915;
}
.day-table > .hour-row > .cell.minutes:active:not(.disabled) > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.minutes:hover:not(.disabled) > .text {
  border-color: #014786;
  background-color: #E9F0F6;
}
.day-table > .hour-row > .cell.minutes:active:not(.disabled).now > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.minutes:hover:not(.disabled).now > .text {
  border-color: #FE9915;
  background-color: #FCF0E5;
}
.day-table > .hour-row > .cell.minutes:active:not(.disabled).selected > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.minutes:hover:not(.disabled).selected > .text {
  background-color: #2B73B3;
}
.day-table > .hour-row > .cell.minutes:active:not(.disabled).selected.now > .text,
.time-picker:not(.touch) .day-table > .hour-row > .cell.minutes:hover:not(.disabled).selected.now > .text {
  background-color: #FDAD4F;
}
.touch-popup-widget-container > .time-picker {
  border: none;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tooltip {
  position: absolute;
  background-color: #EFEFEF;
  border: 1px solid #999999;
  color: #333333;
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
  max-width: 300px;
  white-space: normal;
}
.tooltip-content {
  background-color: inherit;
  padding: 8px 12px;
  position: relative;
  min-width: 60px;
  /* Prevents tooltips with very short text from looking "strange" */
  overflow: hidden;
  text-overflow: ellipsis;
}
.tooltip-content .bold {
  font-weight: bold;
}
.tooltip-content .small {
  font-size: 11px;
  color: #666666;
}
.tooltip-menus {
  background-color: inherit;
  padding: 0 12px 5px 12px;
  position: relative;
}
.tooltip.no-text > .tooltip-menus {
  padding-top: 3px;
}
.tooltip-menus > .menu-item {
  display: block;
  padding-top: 5px;
  padding-bottom: 5px;
}
.tooltip-menus > .menu-item > .text {
  text-decoration: underline;
}
.tooltip-menus > .menu-item > .submenu-icon {
  padding-left: 5px;
}
.tooltip-arrow {
  position: absolute;
  width: 14px;
  height: 14px;
  background-color: inherit;
  border: inherit;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  box-shadow: 2px 6px 14px -6px rgba(0, 0, 0, 0.2);
}
.tooltip-arrow.arrow-bottom {
  bottom: -7px;
  margin-left: -8px;
}
.tooltip-arrow.arrow-top {
  top: -7px;
  margin-left: -8px;
}
.tooltip.error {
  background-color: #FEE0E0;
  border-color: #FF6060;
}
.tooltip.error > .tooltip-arrow {
  background-color: #FEE0E0;
  border-color: #FF6060;
}
.tooltip.error > .tooltip-content,
.tooltip.error > .tooltip-menus {
  background-color: #FEE0E0;
}
.tooltip.warning {
  background-color: #E9F0F6;
  border-color: #508DC3;
  color: #333333;
}
.tooltip.warning > .tooltip-arrow {
  background-color: #E9F0F6;
  border-color: #508DC3;
}
.tooltip.warning > .tooltip-content,
.tooltip.warning > .tooltip-menus {
  background-color: #E9F0F6;
}
.tooltip.info {
  background-color: #EFEFEF;
  border-color: #999999;
  color: #333333;
}
.tooltip.info > .tooltip-arrow {
  background-color: #EFEFEF;
  border-color: #999999;
}
.tooltip.info > .tooltip-content,
.tooltip.info > .tooltip-menus {
  background-color: #EFEFEF;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.widget-tooltip {
  max-width: none;
}
.widget-tooltip > .tooltip-widget-container {
  position: relative;
  padding: 10px;
  background-color: inherit;
  overflow: hidden;
}
.widget-tooltip > .tooltip-widget-container > .widget {
  position: relative;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tree {
  position: relative;
}
.tree:focus,
.tree.focused {
  outline: none;
  /* first child is the scrollbar */
}
.tree:focus .tree-node.selected,
.tree.focused .tree-node.selected {
  background-color: #E9F0F6;
  border-color: #014786;
}
.tree:focus .tree-node:nth-of-type(1).selected,
.tree.focused .tree-node:nth-of-type(1).selected {
  border-top-color: #F6F6F6;
}
.tree > .menubar {
  padding-left: 8px;
  padding-right: 8px;
}
.tree-data {
  /* necessary for scrollbars */
  position: relative;
  overflow: hidden;
  width: 100%;
  /* expand to outer container, needed for breadcrumb */
  /* required because text shouldn't go into ellipsis mode when scrollbars are enabled */
}
.tree-data.scrollable-tree {
  overflow-anchor: none;
}
.tree-data.scrollable-tree > .tree-node,
.tree-data.scrollable-tree > .animation-wrapper > .tree-node {
  overflow: visible;
}
.tree-data.scrollable-tree > .tree-node > .text,
.tree-data.scrollable-tree > .animation-wrapper > .tree-node > .text {
  text-overflow: clip;
}
.tree-data.checkable > .tree-node,
.tree-data.checkable > .animation-wrapper > .tree-node {
  cursor: pointer;
}
.navigation-breadcrumb .tree-data {
  float: left;
}
.tree-node {
  display: block;
  position: relative;
  border: 1px solid transparent;
  border-left: 0 solid transparent;
  border-right: 0 solid transparent;
  padding: 6px 6px 6px 28px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  /*first child is the scrollbar*/
}
.tree-node:active {
  background-color: #F6F6F6;
}
.tree-node.selected {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  border-left-color: transparent;
  border-right-color: transparent;
}
.tree-node.disabled {
  /* Tree node is disabled -> use lighter disabled color */
  color: #999999;
}
.disabled > .tree-node {
  /* Whole tree is disabled -> use darker disabled color */
  color: #666666;
}
.disabled.read-only > .tree-data > .tree-node {
  color: #333333;
}
.tree-node:nth-of-type(1).selected {
  border-top-color: #F6F6F6;
}
.tree-node > .text {
  vertical-align: top;
  display: inline-block;
  width: 100%;
  /* required for ellipsis */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tree-node > .icon {
  vertical-align: top;
  padding-right: 7px;
  display: inline-block;
  /* Use content-box for images because it leads to wrong behavior when someone sets a min-width/height
     * on an IMG element that has padding and the available space for the image is 'min-width' - 'padding'
     * See ticket 208111 */
  box-sizing: content-box;
}
.tree-node > .icon.image-icon {
  margin-top: -2px;
  /* required to reserve space for bitmap icons in the tree when image resource is not yet loaded */
  min-width: 16px;
  min-height: 16px;
}
.tree-node > .icon.font-icon {
  padding-right: 10px;
  /* Necessary to align with the text, depends on the used font size */
  line-height: 15px;
}
.tree-node-checkbox {
  display: block;
  position: absolute;
  top: auto;
  left: auto;
  margin-top: -2px;
  margin-left: -28px;
  width: 20px;
  height: 20px;
}
.tree-node-checkbox .check-box {
  cursor: pointer;
  font-size: 13px;
  display: inline-block;
  position: relative;
  width: 18px;
  height: 18px;
  border: 1px solid #CCCCCC;
  border-radius: 3px;
  background-color: #fff;
  text-align: center;
}
.tree-node-checkbox .check-box.disabled,
.tree.disabled > .tree-data > .tree-node > .tree-node-checkbox .check-box,
.tree.disabled > .tree-data > .animation-wrapper > .tree-node > .tree-node-checkbox .check-box {
  cursor: default;
}
.tree-node-checkbox .check-box::before {
  position: absolute;
  display: block;
  line-height: 18px;
  width: 16px;
}
.tree-node-checkbox .check-box.checked::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\E005';
  color: #014786;
  font-size: 11px;
}
.tree-node-checkbox .check-box.disabled,
.tree.disabled > .tree-data > .tree-node > .tree-node-checkbox .check-box,
.tree.disabled > .tree-data > .animation-wrapper > .tree-node > .tree-node-checkbox .check-box {
  background-color: #F6F6F6;
}
.tree-node-checkbox .check-box.disabled::before,
.tree.disabled > .tree-data > .tree-node > .tree-node-checkbox .check-box::before,
.tree.disabled > .tree-data > .animation-wrapper > .tree-node > .tree-node-checkbox .check-box::before {
  color: #999999;
}
.tree-node-checkbox .check-box.disabled :hover::before,
.tree.disabled > .tree-data > .tree-node > .tree-node-checkbox .check-box :hover::before,
.tree.disabled > .tree-data > .animation-wrapper > .tree-node > .tree-node-checkbox .check-box :hover::before {
  color: #999999;
}
.tree-node-checkbox .check-box:not(.checked).children-checked::after {
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: calc(100% - 6px);
  height: calc(100% - 6px);
  border-radius: 1px;
  background-color: #014786;
}
.tree-node-checkbox .check-box.disabled:not(.checked).children-checked::after {
  background-color: #999999;
}
.tree-node-control {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  cursor: pointer;
  padding: 6px 8px 6px 13px;
  height: 100%;
  line-height: 14px;
  /* Necessary to align with the text, depends on the used font size */
}
.tree-node-control::before {
  display: block;
  transition: transform 0.3s;
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
  content: '\E013';
  color: inherit;
}
.tree-node.lazy > .tree-node-control::before {
  font-family: Arial, sans-serif;
  font-weight: normal;
  font-size: 13px;
  content: '+';
  /* Move to left because '+' sign is not as wide as 'arrow-down' */
  margin-left: -2px;
}
.tree-node.expanded > .tree-node-control::before {
  /* This "imprecise" angle is a workround for firefox to prevent shifting the div a little when the animation finishes. */
  /* See https://bugzilla.mozilla.org/show_bug.cgi?id=739176 */
  -webkit-transform: rotate(89.99deg);
  -ms-transform: rotate(89.99deg);
  transform: rotate(89.99deg);
}
.tree-node-control:hover::before {
  color: #FE9915;
}
/* bread crumb style */
.tree.breadcrumb > .tree-data > .tree-node,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node {
  overflow: visible;
  white-space: normal;
  display: none;
  border-top: 0;
  border-bottom: 1px solid #CCCCCC;
  padding: 8px;
  /* arrow is created using ::before and ::after*/
}
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected,
.tree.breadcrumb > .tree-data > .tree-node.child-of-selected,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.child-of-selected,
.tree.breadcrumb > .tree-data > .tree-node.selected,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected {
  display: block;
}
.tree.breadcrumb > .tree-data > .tree-node.selected,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected {
  color: #333333;
  cursor: default;
}
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::before,
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::after,
.tree.breadcrumb > .tree-data > .tree-node.selected::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::before,
.tree.breadcrumb > .tree-data > .tree-node.selected::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::after {
  position: absolute;
  left: 50%;
  margin-left: -13px;
  border: solid transparent;
  content: '';
  height: 0;
  width: 0;
  z-index: 1;
}
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::before,
.tree.breadcrumb > .tree-data > .tree-node.selected::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::before {
  border-color: #CCCCCC transparent transparent transparent;
  border-width: 6px 12px 0 12px;
  bottom: -7px;
}
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected::after,
.tree.breadcrumb > .tree-data > .tree-node.selected::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::after {
  border-color: #fff transparent transparent transparent;
  border-width: 6px 12px 0 12px;
  bottom: -6px;
}
.tree.breadcrumb > .tree-data > .tree-node:active::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node:active::after {
  border-top-color: #F6F6F6;
}
.tree.breadcrumb > .tree-data > .tree-node.selected::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected::after {
  border-top-color: #F6F6F6;
}
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected.leaf::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected.leaf::before,
.tree.breadcrumb > .tree-data > .tree-node.ancestor-of-selected.leaf::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.ancestor-of-selected.leaf::after,
.tree.breadcrumb > .tree-data > .tree-node.selected.leaf::before,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected.leaf::before,
.tree.breadcrumb > .tree-data > .tree-node.selected.leaf::after,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node.selected.leaf::after {
  display: none;
}
.tree.breadcrumb > .tree-data > .tree-node > .tree-node-control,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node > .tree-node-control {
  display: none;
}
.tree.breadcrumb > .tree-data > .tree-node > .text,
.tree.breadcrumb > .tree-data > .animation-wrapper > .tree-node > .text {
  white-space: normal;
  width: auto;
}
.tree.breadcrumb:focus > .tree-data > .tree-node.parent-of-selected,
.tree.breadcrumb.focused > .tree-data > .tree-node.parent-of-selected,
.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.parent-of-selected,
.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.parent-of-selected {
  border-color: #014786;
}
.tree.breadcrumb:focus > .tree-data > .tree-node.parent-of-selected::before,
.tree.breadcrumb.focused > .tree-data > .tree-node.parent-of-selected::before,
.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.parent-of-selected::before,
.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.parent-of-selected::before {
  border-top-color: #014786;
}
.tree.breadcrumb:focus > .tree-data > .tree-node.selected,
.tree.breadcrumb.focused > .tree-data > .tree-node.selected,
.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.selected,
.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.selected {
  border-color: #014786;
}
.tree.breadcrumb:focus > .tree-data > .tree-node.selected::before,
.tree.breadcrumb.focused > .tree-data > .tree-node.selected::before,
.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.selected::before,
.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.selected::before {
  border-top-color: #014786;
}
.tree.breadcrumb:focus > .tree-data > .tree-node.selected::after,
.tree.breadcrumb.focused > .tree-data > .tree-node.selected::after,
.tree.breadcrumb:focus > .tree-data > .animation-wrapper > .tree-node.selected::after,
.tree.breadcrumb.focused > .tree-data > .animation-wrapper > .tree-node.selected::after {
  border-top-color: #E9F0F6;
}
/* key handling */
.tree-node .key-box {
  top: calc(50% - 11px);
}
.tree > .tree-data > .key-box {
  top: 6px;
  left: 4px;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tree-field > .compact-tree {
  margin-left: 10px;
}
.compact-tree:focus {
  outline: none;
  border: 0;
  box-shadow: 0 0 0 0;
}
.compact-tree:focus > .tree-data > .nodes > .section > .section-node.selected {
  text-decoration: underline;
  color: #014786;
}
.compact-tree > .tree-data {
  position: relative;
  overflow: hidden;
  padding-top: 10px;
}
.compact-tree > .tree-data > .nodes {
  -webkit-column-count: 2;
  -moz-column-count: 2;
  -ms-column-count: 2;
  -o-column-count: 2;
  column-count: 2;
  -webkit-column-gap: 24px;
  -moz-column-gap: 24px;
  -ms-column-gap: 24px;
  -o-column-gap: 24px;
  column-gap: 24px;
}
.compact-tree > .tree-data > .nodes > .section {
  margin-bottom: 30px;
  /* Use full width to enlarge touch area */
  width: 100%;
  -webkit-column-break-inside: avoid;
  -moz-column-break-inside: avoid;
  -ms-column-break-inside: avoid;
  -o-column-break-inside: avoid;
  column-break-inside: avoid;
  break-inside: avoid-column;
  page-break-inside: avoid;
  /* Hack for FF, because column-break-inside does not yet work for all elements, only for tables */
  /* see: https://bugzilla.mozilla.org/show_bug.cgi?id=549114 */
  display: table;
}
.compact-tree > .tree-data > .nodes > .section:last-child {
  margin-bottom: 0;
}
.compact-tree > .tree-data > .nodes > .section > .title {
  font-weight: bold;
}
.compact-tree > .tree-data > .nodes > .section > .section-node {
  cursor: pointer;
  padding-top: 12px;
}
.compact-tree > .tree-data > .nodes > .section > .section-node:hover {
  color: #014786;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile.newly-rendered {
  /* Tile should be invisible until it has the correct position, otherwise it might be visible in the top left corner in the time between rendering and layouting */
  visibility: hidden !important;
  /* NOSONAR (!important is okay here) */
}
.tile.animate-visible {
  -webkit-animation-name: fadein-grow;
  -moz-animation-name: fadein-grow;
  -o-animation-name: fadein-grow;
  animation-name: fadein-grow;
  -webkit-animation-duration: 0.4s;
  -moz-animation-duration: 0.4s;
  -o-animation-duration: 0.4s;
  animation-duration: 0.4s;
}
.tile.animate-invisible {
  -webkit-animation-name: fadeout-shrink;
  -moz-animation-name: fadeout-shrink;
  -o-animation-name: fadeout-shrink;
  animation-name: fadeout-shrink;
  -webkit-animation-duration: 0.3s;
  -moz-animation-duration: 0.3s;
  -o-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}
.tile.animate-insert {
  -webkit-animation-name: fadein-zoom-bounce;
  -moz-animation-name: fadein-zoom-bounce;
  -o-animation-name: fadein-zoom-bounce;
  animation-name: fadein-zoom-bounce;
  -webkit-animation-duration: 0.4s;
  -moz-animation-duration: 0.4s;
  -o-animation-duration: 0.4s;
  animation-duration: 0.4s;
}
.tile.animate-remove {
  -webkit-animation-name: fadeout-shrink-blur;
  -moz-animation-name: fadeout-shrink-blur;
  -o-animation-name: fadeout-shrink-blur;
  animation-name: fadeout-shrink-blur;
  -webkit-animation-duration: 0.2s;
  -moz-animation-duration: 0.2s;
  -o-animation-duration: 0.2s;
  animation-duration: 0.2s;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}
/* The default class is added if displayStyle is set to DEFAULT. If it is set to PLAIN no class will be added. */
.default-tile {
  background-color: #FAFAFA;
  border: 1px solid #CCCCCC;
  padding: 6px 8px;
}
.default-tile.selectable:active:not(.selected),
.default-tile.selectable.active:not(.selected) {
  background-color: #EFEFEF;
}
.default-tile.selected {
  background-color: #E9F0F6;
  border-color: #014786;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile-grid {
  overflow: hidden;
  padding: 6px 0;
}
.tile-grid:focus,
.tile-grid.focused {
  outline: none;
}
.tile-grid.scrollable {
  padding-right: 15px;
}
.tile-grid > .tile {
  transition: opacity 250ms;
}
.tile-grid > .scrollbar {
  opacity: 1;
  transition: opacity 250ms;
}
.tile-grid.loading > .tile,
.tile-grid.loading > .scrollbar {
  opacity: 0;
}
.tile-grid.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.tile-grid.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
/* --------------------------------------------------------------------------- */
/* The following CSS classes are used to to read the values from JavaScript,   */
/* see TileGridLayoutConfig.js & TileGridLayoutConfig.java                     */
/* --------------------------------------------------------------------------- */
.tile-grid-layout-config {
  width: 200px;
  height: 150px;
  margin-left: 30px;
  /* horizontal gap */
  margin-top: 30px;
  /* vertical gap */
}
/*
 * Copyright (c) 2014-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile-overview {
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
}
.tile-overview-content {
  position: absolute;
  color: #014786;
  margin: 42px 65px;
  /* for larger screens */
}
@media screen and (max-width: 800px) {
  .tile-overview-content {
    /* for small screens */
    margin: 20px 20px 20px 23px;
  }
}
.tile-overview-content > .tile-grid {
  position: relative;
}
.tile-overview-title {
  font-size: 32px;
  padding-bottom: 30px;
}
/*
 * Copyright (c) 2014-2017 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile-accordion > .group > .tile-grid.empty {
  /* Remove bottom margin if there are no tiles */
  margin-bottom: 0;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.placeholder-tile {
  background-color: #EFEFEF;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile.dashboard {
  border: 1px solid #DDDDDD;
  border-radius: 3px;
  background-color: #FAFAFA;
  color: #333333;
  overflow: hidden;
}
.tile.dashboard > .form-field {
  padding: 20px;
  padding-top: 12px;
  /* Define a short transition for opacity changes on all field elements (used in .loading state) */
  /* Move part of the tile's padding (@offset) to the inner div. */
  /* This makes it possible to draw the scrollbar (seemingly) outside the field. */
  /* --- Special rules for specific tile fields --- */
  /* Don't show underline decoration for links inside certain tiles */
}
.tile.dashboard > .form-field.label-hidden {
  padding-top: 20px;
}
.tile.dashboard > .form-field.no-padding {
  padding: 0;
  /* set padding-top explicitly to override label-hidden */
  padding-top: 0;
}
.tile.dashboard > .form-field.no-padding > .field {
  border: 0;
  border-radius: 0;
}
.tile.dashboard > .form-field > label {
  color: #1561A7;
  margin: 0;
  font-size: 18px;
  padding-top: 0;
  padding-bottom: 5px;
  font-weight: bold;
}
.tile.dashboard > .form-field > .field {
  margin-left: 0;
  overflow: hidden;
}
.tile.dashboard > .form-field > .mandatory-indicator {
  display: none;
}
.tile.dashboard > .form-field > label,
.tile.dashboard > .form-field > .mandatory-indicator,
.tile.dashboard > .form-field > .field,
.tile.dashboard > .form-field > .status {
  transition: opacity 0.15s;
  /* Same time is used in animation() of .loading-indicator */
  opacity: 1;
}
.tile.dashboard > .form-field.scrollbar-y-outside {
  padding-right: 6px;
}
.tile.dashboard > .form-field.scrollbar-y-outside > label {
  margin-right: 14px;
}
.tile.dashboard > .form-field.scrollbar-y-outside.label-hidden > .status {
  /* increase space between status and field if label is hidden (= status is displayed on the field's right side) */
  margin-left: 20px;
}
.tile.dashboard > .form-field.scrollbar-y-outside > .field {
  padding-right: 14px;
}
.tile.dashboard > .form-field.scrollbar-y-outside > .field > .scrollbar.y-axis {
  /* Remove margin top/bottom, because root-group-box already provides a padding */
  height: 100%;
  margin-top: 0;
  margin-bottom: 0;
}
.tile.dashboard > .form-field.browser-field > .field {
  border-radius: 0;
}
.tile.dashboard > .form-field.browser-field.inverted > .field {
  border: 0;
}
.tile.dashboard > .form-field.html-field > label,
.tile.dashboard > .form-field.bean-field > label {
  padding-bottom: 10px;
}
.tile.dashboard > .form-field.html-field .app-link,
.tile.dashboard > .form-field.tile-list-field .app-link,
.tile.dashboard > .form-field.tile-attributes-field .app-link,
.tile.dashboard > .form-field.html-field a,
.tile.dashboard > .form-field.tile-list-field a,
.tile.dashboard > .form-field.tile-attributes-field a {
  text-decoration: none;
  color: #1561A7;
}
.tile.dashboard > .form-field.html-field .app-link:hover,
.tile.dashboard > .form-field.tile-list-field .app-link:hover,
.tile.dashboard > .form-field.tile-attributes-field .app-link:hover,
.tile.dashboard > .form-field.html-field a:hover,
.tile.dashboard > .form-field.tile-list-field a:hover,
.tile.dashboard > .form-field.tile-attributes-field a:hover {
  color: #0162b9;
}
.tile.dashboard > .form-field.html-field .app-link:active,
.tile.dashboard > .form-field.tile-list-field .app-link:active,
.tile.dashboard > .form-field.tile-attributes-field .app-link:active,
.tile.dashboard > .form-field.html-field a:active,
.tile.dashboard > .form-field.tile-list-field a:active,
.tile.dashboard > .form-field.tile-attributes-field a:active {
  color: #0162b9;
}
.tile.dashboard.loading {
  border-style: dashed;
}
.tile.dashboard.loading > .form-field > label,
.tile.dashboard.loading > .form-field > .mandatory-indicator,
.tile.dashboard.loading > .form-field > .field,
.tile.dashboard.loading > .form-field > .status {
  /* Same as 'visibility: hidden', except it can be animated with CSS transitions */
  opacity: 0;
}
.tile.dashboard.loading > .loading-indicator {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -15px;
  margin-left: -15px;
  -webkit-animation: fade-in 0.15s;
  -moz-animation: fade-in 0.15s;
  -o-animation: fade-in 0.15s;
  animation: fade-in 0.15s;
}
.tile.dashboard.loading > .loading-indicator::before {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  content: '';
  display: inline-block;
  vertical-align: middle;
  border-radius: 50%;
  border: 1px rgba(1, 71, 134, 0.8) solid;
  width: 30px;
  height: 30px;
}
.tile.dashboard.inverted {
  border-color: transparent;
  border-radius: 3px;
  background-color: #014786;
  color: #fff;
}
.tile.dashboard.inverted.disabled:not(.read-only) {
  background-color: #DDDDDD;
}
.tile.dashboard.inverted > .form-field {
  /* Override link style in inverted tiles, otherwise app-links would not be readable */
}
.tile.dashboard.inverted > .form-field > label {
  color: #fff;
}
.tile.dashboard.inverted > .form-field .app-link,
.tile.dashboard.inverted > .form-field a {
  color: #fff;
  text-decoration: underline;
}
.tile.dashboard.inverted > .form-field .app-link:hover,
.tile.dashboard.inverted > .form-field a:hover {
  color: #fff;
}
.tile.dashboard.inverted > .form-field .app-link:active,
.tile.dashboard.inverted > .form-field a:active {
  color: #fff;
}
.tile.dashboard.inverted > .form-field.has-tooltip > .status::before,
.tile.dashboard.inverted > .form-field.has-menus > .status::before {
  color: #fff;
}
.tile.dashboard.inverted > .form-field.has-tooltip > .status:hover::before,
.tile.dashboard.inverted > .form-field.has-menus > .status:hover::before {
  color: #74A8D8;
}
.tile.dashboard.inverted > .form-field.has-error > .status::before {
  color: #FECAC8;
}
.tile.dashboard.inverted > .form-field.has-error > .status:hover::before {
  color: #FEB1AB;
}
.tile.dashboard.color-alternative {
  border-color: #DDDDDD;
  background-color: #FAFAFA;
  color: #333333;
}
.tile.dashboard.color-alternative.disabled:not(.read-only) {
  background-color: #DDDDDD;
}
.tile.dashboard.color-alternative > .form-field > label {
  color: #1561A7;
}
.tile.dashboard.color-alternative > .form-field .app-link,
.tile.dashboard.color-alternative > .form-field a {
  color: #1561A7;
}
.tile.dashboard.color-alternative > .form-field .app-link:hover,
.tile.dashboard.color-alternative > .form-field a:hover {
  color: #0162b9;
}
.tile.dashboard.color-alternative > .form-field .app-link:active,
.tile.dashboard.color-alternative > .form-field a:active {
  color: #0162b9;
}
.tile.dashboard.inverted.color-alternative {
  border-color: transparent;
  background-color: #24B499;
  color: #fff;
}
.tile.dashboard.inverted.color-alternative.disabled:not(.read-only) {
  background-color: #DDDDDD;
}
.tile.dashboard.inverted.color-alternative > .form-field > label {
  color: #fff;
}
.tile.dashboard.inverted.color-alternative > .form-field .app-link,
.tile.dashboard.inverted.color-alternative > .form-field a {
  color: #fff;
}
.tile.dashboard.inverted.color-alternative > .form-field .app-link:hover,
.tile.dashboard.inverted.color-alternative > .form-field a:hover {
  color: #fff;
}
.tile.dashboard.inverted.color-alternative > .form-field .app-link:active,
.tile.dashboard.inverted.color-alternative > .form-field a:active {
  color: #fff;
}
.tile.dashboard.inverted.color-alternative > .form-field.has-tooltip > .status::before,
.tile.dashboard.inverted.color-alternative > .form-field.has-menus > .status::before {
  color: #fff;
}
.tile.dashboard.inverted.color-alternative > .form-field.has-tooltip > .status:hover::before,
.tile.dashboard.inverted.color-alternative > .form-field.has-menus > .status:hover::before {
  color: #DDFFF9;
}
.tile.dashboard.inverted.color-alternative > .form-field.has-error > .status::before {
  color: #FECAC8;
}
.tile.dashboard.inverted.color-alternative > .form-field.has-error > .status:hover::before {
  color: #FEE0E0;
}
.tile.dashboard.selected {
  /* Use mix() instead of fade(), because the background is opaque */
  background-color: #f1f5f9;
  /* For selection we want a wider border but changing the border width would cause the content box to change.
    To avoid this we create a pseudo element with a border as well. Then we have the border of the main element
    plus the pseudo element's border leading to a 2px border. */
  border: 1px solid #014786;
}
.tile.dashboard.selected.inverted {
  background-color: #1c64a3;
  border-color: #014786;
}
.tile.dashboard.selected.inverted::before {
  border-color: #014786;
}
.tile.dashboard.selected.color-alternative {
  background-color: #eff4f7;
  border-color: #014786;
}
.tile.dashboard.selected.color-alternative::before {
  border-color: #014786;
}
.tile.dashboard.selected.inverted.color-alternative {
  background-color: #6cd9c5;
  border-color: #24B499;
}
.tile.dashboard.selected.inverted.color-alternative::before {
  border-color: #24B499;
}
.tile.dashboard.selected::before {
  content: '';
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 1px solid #014786;
  border-radius: 3px;
  z-index: 1;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile.dashboard > .form-field.tile-button {
  padding-top: 0;
  padding-bottom: 0;
  cursor: pointer;
}
.tile.dashboard > .form-field.tile-button > .field {
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding-top: 20px;
  padding-bottom: 20px;
  /* Make IE trigger the :active state if the field is pressed */
  pointer-events: none;
}
.tile.dashboard > .form-field.tile-button > .field.with-icon {
  padding-top: 17px;
}
.tile.dashboard > .form-field.tile-button > .field.without-icon {
  justify-content: center;
}
.tile.dashboard > .form-field.tile-button > .field > .icon-container,
.tile.dashboard > .form-field.tile-button > .field > .label {
  display: block;
}
.tile.dashboard > .form-field.tile-button > .field > .icon-container {
  flex-grow: 1;
}
.tile.dashboard > .form-field.tile-button > .field > .icon-container > .font-icon {
  font-size: 40px;
  color: #1561A7;
}
.tile.dashboard > .form-field.tile-button > .field > .label {
  font-size: 16px;
  max-height: 66px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.tile.dashboard:not(.disabled):hover > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard:not(.disabled):hover > .form-field.tile-button > .field > .label {
  color: #014786;
}
.tile.dashboard:not(.disabled):active > .form-field.tile-button,
.tile.dashboard:not(.disabled).active > .form-field.tile-button {
  background-color: #DDDDDD;
}
.tile.dashboard.inverted:not(.disabled) > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.inverted:not(.disabled):hover > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.inverted:not(.disabled) > .form-field.tile-button > .field > .label,
.tile.dashboard.inverted:not(.disabled):hover > .form-field.tile-button > .field > .label {
  color: #fff;
}
.tile.dashboard.inverted:not(.disabled):active > .form-field.tile-button,
.tile.dashboard.inverted:not(.disabled).active > .form-field.tile-button {
  background-color: #508DC3;
  border-color: #508DC3;
}
.tile.dashboard.color-alternative > .form-field.tile-button > .field > .icon-container > .font-icon {
  color: #1561A7;
}
.tile.dashboard.color-alternative:not(.disabled):hover > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.color-alternative:not(.disabled):hover > .form-field.tile-button > .field > .label {
  color: #014786;
}
.tile.dashboard.color-alternative:not(.disabled):active > .form-field.tile-button,
.tile.dashboard.color-alternative:not(.disabled).active > .form-field.tile-button {
  background-color: #DDDDDD;
}
.tile.dashboard.color-alternative.inverted:not(.disabled) > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.color-alternative.inverted:not(.disabled):hover > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.color-alternative.inverted:not(.disabled) > .form-field.tile-button > .field > .label,
.tile.dashboard.color-alternative.inverted:not(.disabled):hover > .form-field.tile-button > .field > .label {
  color: #fff;
}
.tile.dashboard.color-alternative.inverted:not(.disabled):active > .form-field.tile-button,
.tile.dashboard.color-alternative.inverted:not(.disabled).active > .form-field.tile-button {
  background-color: #3EE1C3;
  border-color: #3EE1C3;
}
.tile.dashboard.disabled > .form-field.tile-button,
.tile.dashboard.disabled:hover > .form-field.tile-button {
  background-color: #F6F6F6;
  border-color: #CCCCCC;
  cursor: default;
}
.tile.dashboard.disabled > .form-field.tile-button > .field > .icon-container > .font-icon,
.tile.dashboard.disabled:hover > .form-field.tile-button > .field > .icon-container > .font-icon {
  color: #999999;
}
.tile.dashboard.disabled > .form-field.tile-button > .field > .label,
.tile.dashboard.disabled:hover > .form-field.tile-button > .field > .label {
  color: #999999;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.tile.dashboard > .table-field {
  /* adjust menu bar when visible */
}
.tile.dashboard > .table-field.has-menubar {
  padding-bottom: 10px;
}
.tile.dashboard > .table-field.has-menubar > .table > .menubar.bottom {
  padding-top: 8px;
}
.tile.dashboard > .table-field > .table {
  border: 0;
  /* see .table-row definition below */
  border-radius: 0;
  background-color: transparent;
  /* No selection color for non-focused table tiles */
  /* Draw left and right selection border (because tile tables have on border) */
}
.tile.dashboard > .table-field > .table:focus,
.tile.dashboard > .table-field > .table.focused {
  box-shadow: none;
}
.tile.dashboard > .table-field > .table > .table-header {
  background-color: transparent;
  border-bottom-width: 2px;
  /* show separator on mouseover only */
}
.tile.dashboard > .table-field > .table > .table-header > .table-header-item > .table-header-item-state {
  display: none;
}
.tile.dashboard > .table-field > .table > .table-header > .table-header-resize {
  display: none;
}
.tile.dashboard > .table-field > .table > .table-header:hover > .table-header-resize {
  display: inline-block;
}
.tile.dashboard > .table-field > .table.header-invisible > .table-data {
  /* override negative margin top, otherwise selection border of first row would be cut off */
  margin-top: 0;
}
.tile.dashboard > .table-field > .table:not(:focus):not(.focused) > .table-data > .table-row {
  background-color: transparent;
  border-top-color: transparent;
}
.tile.dashboard > .table-field > .table > .table-data > .table-row {
  /* Do not use transparent left/right border, because otherwise the corners would not look good. */
  /* Instead, a padding is used, which is replaced by a border in the selected state. */
  padding-left: 1px;
  padding-right: 1px;
}
.tile.dashboard > .table-field > .table > .table-data > .table-row.selected {
  border-left-width: 1px;
  border-right-width: 1px;
  padding-left: 0;
  padding-right: 0;
}
.tile.dashboard > .table-field > .table > .menubar {
  background-color: transparent;
}
.tile.dashboard > .table-field > .table > .menubar.bottom {
  border-top-width: 2px;
}
.tile.dashboard > .table-field:not(.label-hidden) > .table > .table-header > .table-header-resize {
  padding-top: 0;
}
.tile.dashboard > .table-field:not(.label-hidden) > .table > .table-header > .table-header-item {
  padding-top: 0;
}
.tile.dashboard.inverted > .table-field > .table:focus > .table-data > .table-row.selected,
.tile.dashboard.inverted > .table-field > .table.focused > .table-data > .table-row.selected {
  background-color: #1561A7;
  border-color: #fff;
}
.tile.dashboard.inverted > .table-field > .table > .table-header > .table-header-item,
.tile.dashboard.inverted > .table-field > .table > .table-data > .table-row > .table-cell {
  color: #fff;
}
.tile.dashboard.inverted > .table-field > .table > .table-header > .table-header-item > .font-icon,
.tile.dashboard.inverted > .table-field > .table > .table-data > .table-row > .table-cell > .font-icon {
  color: #fff;
}
.tile.dashboard.inverted > .table-field > .table > .menubar > .menubox > .menu-item {
  color: #fff;
}
.tile.dashboard.color-alternative > .table-field > .table:focus > .table-data > .table-row.selected,
.tile.dashboard.color-alternative > .table-field > .table.focused > .table-data > .table-row.selected {
  background-color: #BAF3E8;
  border-color: #24B499;
}
.tile.dashboard.color-alternative.inverted > .table-field > .table:focus > .table-data > .table-row.selected,
.tile.dashboard.color-alternative.inverted > .table-field > .table.focused > .table-data > .table-row.selected {
  background-color: #3EE1C3;
  border-color: #fff;
}
.tile.dashboard.color-alternative.inverted > .table-field > .table > .table-header > .table-header-item,
.tile.dashboard.color-alternative.inverted > .table-field > .table > .table-data > .table-row > .table-cell {
  color: #fff;
}
.tile.dashboard.color-alternative.inverted > .table-field > .table > .table-header > .table-header-item > .font-icon,
.tile.dashboard.color-alternative.inverted > .table-field > .table > .table-data > .table-row > .table-cell > .font-icon {
  color: #fff;
}
.tile.dashboard.color-alternative.inverted > .table-field > .table > .menubar > .menubox > .menu-item {
  color: #fff;
}
/*
 * Copyright (c) 2014-2018 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.login-box-content > form > input,
.login-box-content > form > .button {
  width: 100%;
  height: 45px;
  margin: 15px 0;
  font-size: 16px;
}
.login-box-content > form > input.alternative:-webkit-autofill {
  /* NOSONAR (for some reason, rule "less:overqualified-elements" is illegitimately triggered here)
       /* Improve Chrome's auto-fill style by overriding the forced yellow background and black text color. */
  /* (Requires some hacks, see http://webagility.com/posts/remove-forced-yellow-input-background-in-chrome) */
  border-top-width: 0;
  padding-top: 2px;
  -webkit-box-shadow: inset 0 0 0 1000px #FEFEFE;
  -webkit-text-fill-color: #333333 !important;
  /* NOSONAR (!important is okay here) */
}
.login-box-content > form > input.alternative:-webkit-autofill:focus {
  -webkit-text-fill-color: #014786 !important;
  /* NOSONAR (!important is okay here) */
}
.login-box-content > form > input.alternative:-webkit-autofill::selection {
  -webkit-text-fill-color: #fff !important;
  /* NOSONAR (!important is okay here) */
}
/*
 * Login button is a default button -> styles are defined in main.css.
 * Difference to regular default button is the disabled style and the ability to turn red.
 */
.login-button:disabled {
  color: #fff;
  border-color: #2B73B3;
  background-color: #2B73B3;
}
.login-button.login-error:not(.disabled) {
  border-color: #DF2632;
  background-color: #DF2632;
  /* Also change color of focus glow */
}
.login-button.login-error:not(.disabled):focus::before {
  border-color: #DF2632;
  box-shadow: 0 0 5px #DF2632;
}
.login-button.login-error:not(.disabled):hover {
  background-color: #DF2632;
}
.login-button.login-error:not(.disabled):active {
  border-color: #DF2632;
  background-color: #cd1e2a;
}
.login-button-loading {
  -webkit-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -moz-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  -o-animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  animation: pulsate 2s cubic-bezier(0.5, 0.1, 0.1, 0.5) infinite;
  display: inline-block;
  border-radius: 50%;
  border: 1px rgba(255, 255, 255, 0.8) solid;
  width: 18px;
  height: 18px;
  vertical-align: middle;
}
/*
 * Copyright (c) 2010-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.breadcrumb-bar {
  overflow: hidden;
  white-space: nowrap;
}
/*
 * Copyright (c) 2010-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
.breadcrumb-item {
  display: inline-flex;
  align-items: center;
  text-align: center;
  height: 100%;
  color: #014786;
  font-size: 14px;
}
.breadcrumb-item.last {
  font-weight: bold;
}
.breadcrumb-item:hover:not(.disabled) {
  color: #0162b9;
}
.breadcrumb-item.first {
  vertical-align: top;
}
.breadcrumb-item:not(.first)::before {
  font-family: scoutIcons, Arial, sans-serif;
  font-weight: normal;
  speak: none;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: '\F105';
  color: #333333;
  display: block;
  margin: 0 5px;
  cursor: default;
}
.breadcrumb-item:not(.disabled):active {
  color: #2F3C45;
}
.breadcrumb-item:not(.disabled) {
  cursor: pointer;
}
.breadcrumb-item.disabled {
  color: #999999;
}
/* Adjust some Scout styles to adapt unicorn design */
.unicorn-form.form {
  background-color: transparent;
}
.unicorn-form .menubar.bottom {
  background-color: transparent;
  border-top-color: transparent;
}
.unicorn-form .menu-item {
  background-color: #d3eafa !important;
  color: #0e4572 !important;
  border-radius: 5px !important;
  border: solid 2px #0e4572 !important;
  font-weight: bold !important;
  box-shadow: 4px 4px 8px #aaa !important;
  cursor: pointer !important;
  font-family: serif !important;
  font-size: 18px !important;
}
body.scout {
  overflow-x: hidden;
  overflow-y: auto;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/